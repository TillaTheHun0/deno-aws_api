// Autogenerated API structures for: AWS Directory Service

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface AcceptSharedDirectoryRequest {
  SharedDirectoryId: string;
}

// refs: 1 - tags: named, input
export interface AddIpRoutesRequest {
  DirectoryId: string;
  IpRoutes: IpRoute[];
  UpdateSecurityGroupForDirectoryControllers?: boolean | null;
}

// refs: 1 - tags: named, input
export interface AddRegionRequest {
  DirectoryId: string;
  RegionName: string;
  VPCSettings: DirectoryVpcSettings;
}

// refs: 1 - tags: named, input
export interface AddTagsToResourceRequest {
  ResourceId: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface CancelSchemaExtensionRequest {
  DirectoryId: string;
  SchemaExtensionId: string;
}

// refs: 1 - tags: named, input
export interface ConnectDirectoryRequest {
  Name: string;
  ShortName?: string | null;
  Password: string;
  Description?: string | null;
  Size: DirectorySize;
  ConnectSettings: DirectoryConnectSettings;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateAliasRequest {
  DirectoryId: string;
  Alias: string;
}

// refs: 1 - tags: named, input
export interface CreateComputerRequest {
  DirectoryId: string;
  ComputerName: string;
  Password: string;
  OrganizationalUnitDistinguishedName?: string | null;
  ComputerAttributes?: Attribute[] | null;
}

// refs: 1 - tags: named, input
export interface CreateConditionalForwarderRequest {
  DirectoryId: string;
  RemoteDomainName: string;
  DnsIpAddrs: string[];
}

// refs: 1 - tags: named, input
export interface CreateDirectoryRequest {
  Name: string;
  ShortName?: string | null;
  Password: string;
  Description?: string | null;
  Size: DirectorySize;
  VpcSettings?: DirectoryVpcSettings | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateLogSubscriptionRequest {
  DirectoryId: string;
  LogGroupName: string;
}

// refs: 1 - tags: named, input
export interface CreateMicrosoftADRequest {
  Name: string;
  ShortName?: string | null;
  Password: string;
  Description?: string | null;
  VpcSettings: DirectoryVpcSettings;
  Edition?: DirectoryEdition | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateSnapshotRequest {
  DirectoryId: string;
  Name?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateTrustRequest {
  DirectoryId: string;
  RemoteDomainName: string;
  TrustPassword: string;
  TrustDirection: TrustDirection;
  TrustType?: TrustType | null;
  ConditionalForwarderIpAddrs?: string[] | null;
  SelectiveAuth?: SelectiveAuth | null;
}

// refs: 1 - tags: named, input
export interface DeleteConditionalForwarderRequest {
  DirectoryId: string;
  RemoteDomainName: string;
}

// refs: 1 - tags: named, input
export interface DeleteDirectoryRequest {
  DirectoryId: string;
}

// refs: 1 - tags: named, input
export interface DeleteLogSubscriptionRequest {
  DirectoryId: string;
}

// refs: 1 - tags: named, input
export interface DeleteSnapshotRequest {
  SnapshotId: string;
}

// refs: 1 - tags: named, input
export interface DeleteTrustRequest {
  TrustId: string;
  DeleteAssociatedConditionalForwarder?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeregisterCertificateRequest {
  DirectoryId: string;
  CertificateId: string;
}

// refs: 1 - tags: named, input
export interface DeregisterEventTopicRequest {
  DirectoryId: string;
  TopicName: string;
}

// refs: 1 - tags: named, input
export interface DescribeCertificateRequest {
  DirectoryId: string;
  CertificateId: string;
}

// refs: 1 - tags: named, input
export interface DescribeConditionalForwardersRequest {
  DirectoryId: string;
  RemoteDomainNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeDirectoriesRequest {
  DirectoryIds?: string[] | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeDomainControllersRequest {
  DirectoryId: string;
  DomainControllerIds?: string[] | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeEventTopicsRequest {
  DirectoryId?: string | null;
  TopicNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeLDAPSSettingsRequest {
  DirectoryId: string;
  Type?: LDAPSType | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeRegionsRequest {
  DirectoryId: string;
  RegionName?: string | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeSharedDirectoriesRequest {
  OwnerDirectoryId: string;
  SharedDirectoryIds?: string[] | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeSnapshotsRequest {
  DirectoryId?: string | null;
  SnapshotIds?: string[] | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeTrustsRequest {
  DirectoryId?: string | null;
  TrustIds?: string[] | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DisableClientAuthenticationRequest {
  DirectoryId: string;
  Type: ClientAuthenticationType;
}

// refs: 1 - tags: named, input
export interface DisableLDAPSRequest {
  DirectoryId: string;
  Type: LDAPSType;
}

// refs: 1 - tags: named, input
export interface DisableRadiusRequest {
  DirectoryId: string;
}

// refs: 1 - tags: named, input
export interface DisableSsoRequest {
  DirectoryId: string;
  UserName?: string | null;
  Password?: string | null;
}

// refs: 1 - tags: named, input
export interface EnableClientAuthenticationRequest {
  DirectoryId: string;
  Type: ClientAuthenticationType;
}

// refs: 1 - tags: named, input
export interface EnableLDAPSRequest {
  DirectoryId: string;
  Type: LDAPSType;
}

// refs: 1 - tags: named, input
export interface EnableRadiusRequest {
  DirectoryId: string;
  RadiusSettings: RadiusSettings;
}

// refs: 1 - tags: named, input
export interface EnableSsoRequest {
  DirectoryId: string;
  UserName?: string | null;
  Password?: string | null;
}

// refs: 1 - tags: named, input
export interface GetSnapshotLimitsRequest {
  DirectoryId: string;
}

// refs: 1 - tags: named, input
export interface ListCertificatesRequest {
  DirectoryId: string;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface ListIpRoutesRequest {
  DirectoryId: string;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface ListLogSubscriptionsRequest {
  DirectoryId?: string | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface ListSchemaExtensionsRequest {
  DirectoryId: string;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  ResourceId: string;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface RegisterCertificateRequest {
  DirectoryId: string;
  CertificateData: string;
  Type?: CertificateType | null;
  ClientCertAuthSettings?: ClientCertAuthSettings | null;
}

// refs: 1 - tags: named, input
export interface RegisterEventTopicRequest {
  DirectoryId: string;
  TopicName: string;
}

// refs: 1 - tags: named, input
export interface RejectSharedDirectoryRequest {
  SharedDirectoryId: string;
}

// refs: 1 - tags: named, input
export interface RemoveIpRoutesRequest {
  DirectoryId: string;
  CidrIps: string[];
}

// refs: 1 - tags: named, input
export interface RemoveRegionRequest {
  DirectoryId: string;
}

// refs: 1 - tags: named, input
export interface RemoveTagsFromResourceRequest {
  ResourceId: string;
  TagKeys: string[];
}

// refs: 1 - tags: named, input
export interface ResetUserPasswordRequest {
  DirectoryId: string;
  UserName: string;
  NewPassword: string;
}

// refs: 1 - tags: named, input
export interface RestoreFromSnapshotRequest {
  SnapshotId: string;
}

// refs: 1 - tags: named, input
export interface ShareDirectoryRequest {
  DirectoryId: string;
  ShareNotes?: string | null;
  ShareTarget: ShareTarget;
  ShareMethod: ShareMethod;
}

// refs: 1 - tags: named, input
export interface StartSchemaExtensionRequest {
  DirectoryId: string;
  CreateSnapshotBeforeSchemaExtension: boolean;
  LdifContent: string;
  Description: string;
}

// refs: 1 - tags: named, input
export interface UnshareDirectoryRequest {
  DirectoryId: string;
  UnshareTarget: UnshareTarget;
}

// refs: 1 - tags: named, input
export interface UpdateConditionalForwarderRequest {
  DirectoryId: string;
  RemoteDomainName: string;
  DnsIpAddrs: string[];
}

// refs: 1 - tags: named, input
export interface UpdateNumberOfDomainControllersRequest {
  DirectoryId: string;
  DesiredNumber: number;
}

// refs: 1 - tags: named, input
export interface UpdateRadiusRequest {
  DirectoryId: string;
  RadiusSettings: RadiusSettings;
}

// refs: 1 - tags: named, input
export interface UpdateTrustRequest {
  TrustId: string;
  SelectiveAuth?: SelectiveAuth | null;
}

// refs: 1 - tags: named, input
export interface VerifyTrustRequest {
  TrustId: string;
}

// refs: 1 - tags: named, output
export interface AcceptSharedDirectoryResult {
  SharedDirectory?: SharedDirectory | null;
}

// refs: 1 - tags: named, output
export interface ConnectDirectoryResult {
  DirectoryId?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateAliasResult {
  DirectoryId?: string | null;
  Alias?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateComputerResult {
  Computer?: Computer | null;
}

// refs: 1 - tags: named, output
export interface CreateDirectoryResult {
  DirectoryId?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateMicrosoftADResult {
  DirectoryId?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateSnapshotResult {
  SnapshotId?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateTrustResult {
  TrustId?: string | null;
}

// refs: 1 - tags: named, output
export interface DeleteDirectoryResult {
  DirectoryId?: string | null;
}

// refs: 1 - tags: named, output
export interface DeleteSnapshotResult {
  SnapshotId?: string | null;
}

// refs: 1 - tags: named, output
export interface DeleteTrustResult {
  TrustId?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeCertificateResult {
  Certificate?: Certificate | null;
}

// refs: 1 - tags: named, output
export interface DescribeConditionalForwardersResult {
  ConditionalForwarders?: ConditionalForwarder[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeDirectoriesResult {
  DirectoryDescriptions?: DirectoryDescription[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeDomainControllersResult {
  DomainControllers?: DomainController[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeEventTopicsResult {
  EventTopics?: EventTopic[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeLDAPSSettingsResult {
  LDAPSSettingsInfo?: LDAPSSettingInfo[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeRegionsResult {
  RegionsDescription?: RegionDescription[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeSharedDirectoriesResult {
  SharedDirectories?: SharedDirectory[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeSnapshotsResult {
  Snapshots?: Snapshot[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeTrustsResult {
  Trusts?: Trust[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetDirectoryLimitsResult {
  DirectoryLimits?: DirectoryLimits | null;
}

// refs: 1 - tags: named, output
export interface GetSnapshotLimitsResult {
  SnapshotLimits?: SnapshotLimits | null;
}

// refs: 1 - tags: named, output
export interface ListCertificatesResult {
  NextToken?: string | null;
  CertificatesInfo?: CertificateInfo[] | null;
}

// refs: 1 - tags: named, output
export interface ListIpRoutesResult {
  IpRoutesInfo?: IpRouteInfo[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListLogSubscriptionsResult {
  LogSubscriptions?: LogSubscription[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListSchemaExtensionsResult {
  SchemaExtensionsInfo?: SchemaExtensionInfo[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResult {
  Tags?: Tag[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface RegisterCertificateResult {
  CertificateId?: string | null;
}

// refs: 1 - tags: named, output
export interface RejectSharedDirectoryResult {
  SharedDirectoryId?: string | null;
}

// refs: 1 - tags: named, output
export interface ShareDirectoryResult {
  SharedDirectoryId?: string | null;
}

// refs: 1 - tags: named, output
export interface StartSchemaExtensionResult {
  SchemaExtensionId?: string | null;
}

// refs: 1 - tags: named, output
export interface UnshareDirectoryResult {
  SharedDirectoryId?: string | null;
}

// refs: 1 - tags: named, output
export interface UpdateTrustResult {
  RequestId?: string | null;
  TrustId?: string | null;
}

// refs: 1 - tags: named, output
export interface VerifyTrustResult {
  TrustId?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface IpRoute {
  CidrIp?: string | null;
  Description?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface DirectoryVpcSettings {
  VpcId: string;
  SubnetIds: string[];
}

// refs: 5 - tags: input, named, interface, output
export interface Tag {
  Key: string;
  Value: string;
}

// refs: 3 - tags: input, named, enum, output
export type DirectorySize =
| "Small"
| "Large"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface DirectoryConnectSettings {
  VpcId: string;
  SubnetIds: string[];
  CustomerDnsIps: string[];
  CustomerUserName: string;
}

// refs: 2 - tags: input, named, interface, output
export interface Attribute {
  Name?: string | null;
  Value?: string | null;
}

// refs: 2 - tags: input, named, enum, output
export type DirectoryEdition =
| "Enterprise"
| "Standard"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type TrustDirection =
| "One-Way: Outgoing"
| "One-Way: Incoming"
| "Two-Way"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type TrustType =
| "Forest"
| "External"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, enum, output
export type SelectiveAuth =
| "Enabled"
| "Disabled"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, enum
export type LDAPSType =
| "Client"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum
export type ClientAuthenticationType =
| "SmartCard"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface RadiusSettings {
  RadiusServers?: string[] | null;
  RadiusPort?: number | null;
  RadiusTimeout?: number | null;
  RadiusRetries?: number | null;
  SharedSecret?: string | null;
  AuthenticationProtocol?: RadiusAuthenticationProtocol | null;
  DisplayLabel?: string | null;
  UseSameUsername?: boolean | null;
}

// refs: 4 - tags: input, named, enum, output
export type RadiusAuthenticationProtocol =
| "PAP"
| "CHAP"
| "MS-CHAPv1"
| "MS-CHAPv2"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, enum, output
export type CertificateType =
| "ClientCertAuth"
| "ClientLDAPS"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface, output
export interface ClientCertAuthSettings {
  OCSPUrl?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface ShareTarget {
  Id: string;
  Type: TargetType;
}

// refs: 2 - tags: input, named, enum
export type TargetType =
| "ACCOUNT"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type ShareMethod =
| "ORGANIZATIONS"
| "HANDSHAKE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface UnshareTarget {
  Id: string;
  Type: TargetType;
}

// refs: 2 - tags: output, named, interface
export interface SharedDirectory {
  OwnerAccountId?: string | null;
  OwnerDirectoryId?: string | null;
  ShareMethod?: ShareMethod | null;
  SharedAccountId?: string | null;
  SharedDirectoryId?: string | null;
  ShareStatus?: ShareStatus | null;
  ShareNotes?: string | null;
  CreatedDateTime?: Date | number | null;
  LastUpdatedDateTime?: Date | number | null;
}

// refs: 3 - tags: output, named, enum
export type ShareStatus =
| "Shared"
| "PendingAcceptance"
| "Rejected"
| "Rejecting"
| "RejectFailed"
| "Sharing"
| "ShareFailed"
| "Deleted"
| "Deleting"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Computer {
  ComputerId?: string | null;
  ComputerName?: string | null;
  ComputerAttributes?: Attribute[] | null;
}

// refs: 1 - tags: output, named, interface
export interface Certificate {
  CertificateId?: string | null;
  State?: CertificateState | null;
  StateReason?: string | null;
  CommonName?: string | null;
  RegisteredDateTime?: Date | number | null;
  ExpiryDateTime?: Date | number | null;
  Type?: CertificateType | null;
  ClientCertAuthSettings?: ClientCertAuthSettings | null;
}

// refs: 2 - tags: output, named, enum
export type CertificateState =
| "Registering"
| "Registered"
| "RegisterFailed"
| "Deregistering"
| "Deregistered"
| "DeregisterFailed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ConditionalForwarder {
  RemoteDomainName?: string | null;
  DnsIpAddrs?: string[] | null;
  ReplicationScope?: ReplicationScope | null;
}

// refs: 1 - tags: output, named, enum
export type ReplicationScope =
| "Domain"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface DirectoryDescription {
  DirectoryId?: string | null;
  Name?: string | null;
  ShortName?: string | null;
  Size?: DirectorySize | null;
  Edition?: DirectoryEdition | null;
  Alias?: string | null;
  AccessUrl?: string | null;
  Description?: string | null;
  DnsIpAddrs?: string[] | null;
  Stage?: DirectoryStage | null;
  ShareStatus?: ShareStatus | null;
  ShareMethod?: ShareMethod | null;
  ShareNotes?: string | null;
  LaunchTime?: Date | number | null;
  StageLastUpdatedDateTime?: Date | number | null;
  Type?: DirectoryType | null;
  VpcSettings?: DirectoryVpcSettingsDescription | null;
  ConnectSettings?: DirectoryConnectSettingsDescription | null;
  RadiusSettings?: RadiusSettings | null;
  RadiusStatus?: RadiusStatus | null;
  StageReason?: string | null;
  SsoEnabled?: boolean | null;
  DesiredNumberOfDomainControllers?: number | null;
  OwnerDirectoryDescription?: OwnerDirectoryDescription | null;
  RegionsInfo?: RegionsInfo | null;
}

// refs: 2 - tags: output, named, enum
export type DirectoryStage =
| "Requested"
| "Creating"
| "Created"
| "Active"
| "Inoperable"
| "Impaired"
| "Restoring"
| "RestoreFailed"
| "Deleting"
| "Deleted"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type DirectoryType =
| "SimpleAD"
| "ADConnector"
| "MicrosoftAD"
| "SharedMicrosoftAD"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface DirectoryVpcSettingsDescription {
  VpcId?: string | null;
  SubnetIds?: string[] | null;
  SecurityGroupId?: string | null;
  AvailabilityZones?: string[] | null;
}

// refs: 1 - tags: output, named, interface
export interface DirectoryConnectSettingsDescription {
  VpcId?: string | null;
  SubnetIds?: string[] | null;
  CustomerUserName?: string | null;
  SecurityGroupId?: string | null;
  AvailabilityZones?: string[] | null;
  ConnectIps?: string[] | null;
}

// refs: 2 - tags: output, named, enum
export type RadiusStatus =
| "Creating"
| "Completed"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface OwnerDirectoryDescription {
  DirectoryId?: string | null;
  AccountId?: string | null;
  DnsIpAddrs?: string[] | null;
  VpcSettings?: DirectoryVpcSettingsDescription | null;
  RadiusSettings?: RadiusSettings | null;
  RadiusStatus?: RadiusStatus | null;
}

// refs: 1 - tags: output, named, interface
export interface RegionsInfo {
  PrimaryRegion?: string | null;
  AdditionalRegions?: string[] | null;
}

// refs: 1 - tags: output, named, interface
export interface DomainController {
  DirectoryId?: string | null;
  DomainControllerId?: string | null;
  DnsIpAddr?: string | null;
  VpcId?: string | null;
  SubnetId?: string | null;
  AvailabilityZone?: string | null;
  Status?: DomainControllerStatus | null;
  StatusReason?: string | null;
  LaunchTime?: Date | number | null;
  StatusLastUpdatedDateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type DomainControllerStatus =
| "Creating"
| "Active"
| "Impaired"
| "Restoring"
| "Deleting"
| "Deleted"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface EventTopic {
  DirectoryId?: string | null;
  TopicName?: string | null;
  TopicArn?: string | null;
  CreatedDateTime?: Date | number | null;
  Status?: TopicStatus | null;
}

// refs: 1 - tags: output, named, enum
export type TopicStatus =
| "Registered"
| "Topic not found"
| "Failed"
| "Deleted"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface LDAPSSettingInfo {
  LDAPSStatus?: LDAPSStatus | null;
  LDAPSStatusReason?: string | null;
  LastUpdatedDateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type LDAPSStatus =
| "Enabling"
| "Enabled"
| "EnableFailed"
| "Disabled"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface RegionDescription {
  DirectoryId?: string | null;
  RegionName?: string | null;
  RegionType?: RegionType | null;
  Status?: DirectoryStage | null;
  VpcSettings?: DirectoryVpcSettings | null;
  DesiredNumberOfDomainControllers?: number | null;
  LaunchTime?: Date | number | null;
  StatusLastUpdatedDateTime?: Date | number | null;
  LastUpdatedDateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type RegionType =
| "Primary"
| "Additional"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Snapshot {
  DirectoryId?: string | null;
  SnapshotId?: string | null;
  Type?: SnapshotType | null;
  Name?: string | null;
  Status?: SnapshotStatus | null;
  StartTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type SnapshotType =
| "Auto"
| "Manual"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type SnapshotStatus =
| "Creating"
| "Completed"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Trust {
  DirectoryId?: string | null;
  TrustId?: string | null;
  RemoteDomainName?: string | null;
  TrustType?: TrustType | null;
  TrustDirection?: TrustDirection | null;
  TrustState?: TrustState | null;
  CreatedDateTime?: Date | number | null;
  LastUpdatedDateTime?: Date | number | null;
  StateLastUpdatedDateTime?: Date | number | null;
  TrustStateReason?: string | null;
  SelectiveAuth?: SelectiveAuth | null;
}

// refs: 1 - tags: output, named, enum
export type TrustState =
| "Creating"
| "Created"
| "Verifying"
| "VerifyFailed"
| "Verified"
| "Updating"
| "UpdateFailed"
| "Updated"
| "Deleting"
| "Deleted"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface DirectoryLimits {
  CloudOnlyDirectoriesLimit?: number | null;
  CloudOnlyDirectoriesCurrentCount?: number | null;
  CloudOnlyDirectoriesLimitReached?: boolean | null;
  CloudOnlyMicrosoftADLimit?: number | null;
  CloudOnlyMicrosoftADCurrentCount?: number | null;
  CloudOnlyMicrosoftADLimitReached?: boolean | null;
  ConnectedDirectoriesLimit?: number | null;
  ConnectedDirectoriesCurrentCount?: number | null;
  ConnectedDirectoriesLimitReached?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface SnapshotLimits {
  ManualSnapshotsLimit?: number | null;
  ManualSnapshotsCurrentCount?: number | null;
  ManualSnapshotsLimitReached?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface CertificateInfo {
  CertificateId?: string | null;
  CommonName?: string | null;
  State?: CertificateState | null;
  ExpiryDateTime?: Date | number | null;
  Type?: CertificateType | null;
}

// refs: 1 - tags: output, named, interface
export interface IpRouteInfo {
  DirectoryId?: string | null;
  CidrIp?: string | null;
  IpRouteStatusMsg?: IpRouteStatusMsg | null;
  AddedDateTime?: Date | number | null;
  IpRouteStatusReason?: string | null;
  Description?: string | null;
}

// refs: 1 - tags: output, named, enum
export type IpRouteStatusMsg =
| "Adding"
| "Added"
| "Removing"
| "Removed"
| "AddFailed"
| "RemoveFailed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface LogSubscription {
  DirectoryId?: string | null;
  LogGroupName?: string | null;
  SubscriptionCreatedDateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface SchemaExtensionInfo {
  DirectoryId?: string | null;
  SchemaExtensionId?: string | null;
  Description?: string | null;
  SchemaExtensionStatus?: SchemaExtensionStatus | null;
  SchemaExtensionStatusReason?: string | null;
  StartDateTime?: Date | number | null;
  EndDateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type SchemaExtensionStatus =
| "Initializing"
| "CreatingSnapshot"
| "UpdatingSchema"
| "Replicating"
| "CancelInProgress"
| "RollbackInProgress"
| "Cancelled"
| "Failed"
| "Completed"
| cmnP.UnexpectedEnumValue;
