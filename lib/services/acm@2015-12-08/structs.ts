// Autogenerated API structures for: AWS Certificate Manager

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface AddTagsToCertificateRequest {
  CertificateArn: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface DeleteCertificateRequest {
  CertificateArn: string;
}

// refs: 1 - tags: named, input
export interface DescribeCertificateRequest {
  CertificateArn: string;
}

// refs: 1 - tags: named, input
export interface ExportCertificateRequest {
  CertificateArn: string;
  Passphrase: Uint8Array | string;
}

// refs: 1 - tags: named, input
export interface GetCertificateRequest {
  CertificateArn: string;
}

// refs: 1 - tags: named, input
export interface ImportCertificateRequest {
  CertificateArn?: string | null;
  Certificate: Uint8Array | string;
  PrivateKey: Uint8Array | string;
  CertificateChain?: Uint8Array | string | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface ListCertificatesRequest {
  CertificateStatuses?: CertificateStatus[] | null;
  Includes?: Filters | null;
  NextToken?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForCertificateRequest {
  CertificateArn: string;
}

// refs: 1 - tags: named, input
export interface PutAccountConfigurationRequest {
  ExpiryEvents?: ExpiryEventsConfiguration | null;
  IdempotencyToken: string;
}

// refs: 1 - tags: named, input
export interface RemoveTagsFromCertificateRequest {
  CertificateArn: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface RenewCertificateRequest {
  CertificateArn: string;
}

// refs: 1 - tags: named, input
export interface RequestCertificateRequest {
  DomainName: string;
  ValidationMethod?: ValidationMethod | null;
  SubjectAlternativeNames?: string[] | null;
  IdempotencyToken?: string | null;
  DomainValidationOptions?: DomainValidationOption[] | null;
  Options?: CertificateOptions | null;
  CertificateAuthorityArn?: string | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface ResendValidationEmailRequest {
  CertificateArn: string;
  Domain: string;
  ValidationDomain: string;
}

// refs: 1 - tags: named, input
export interface UpdateCertificateOptionsRequest {
  CertificateArn: string;
  Options: CertificateOptions;
}

// refs: 1 - tags: named, output
export interface DescribeCertificateResponse {
  Certificate?: CertificateDetail | null;
}

// refs: 1 - tags: named, output
export interface ExportCertificateResponse {
  Certificate?: string | null;
  CertificateChain?: string | null;
  PrivateKey?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAccountConfigurationResponse {
  ExpiryEvents?: ExpiryEventsConfiguration | null;
}

// refs: 1 - tags: named, output
export interface GetCertificateResponse {
  Certificate?: string | null;
  CertificateChain?: string | null;
}

// refs: 1 - tags: named, output
export interface ImportCertificateResponse {
  CertificateArn?: string | null;
}

// refs: 1 - tags: named, output
export interface ListCertificatesResponse {
  NextToken?: string | null;
  CertificateSummaryList?: CertificateSummary[] | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForCertificateResponse {
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface RequestCertificateResponse {
  CertificateArn?: string | null;
}

// refs: 5 - tags: input, named, interface, output
export interface Tag {
  Key: string;
  Value?: string | null;
}

// refs: 2 - tags: input, named, enum, output
export type CertificateStatus =
| "PENDING_VALIDATION"
| "ISSUED"
| "INACTIVE"
| "EXPIRED"
| "VALIDATION_TIMED_OUT"
| "REVOKED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface Filters {
  extendedKeyUsage?: ExtendedKeyUsageName[] | null;
  keyUsage?: KeyUsageName[] | null;
  keyTypes?: KeyAlgorithm[] | null;
}

// refs: 2 - tags: input, named, enum, output
export type ExtendedKeyUsageName =
| "TLS_WEB_SERVER_AUTHENTICATION"
| "TLS_WEB_CLIENT_AUTHENTICATION"
| "CODE_SIGNING"
| "EMAIL_PROTECTION"
| "TIME_STAMPING"
| "OCSP_SIGNING"
| "IPSEC_END_SYSTEM"
| "IPSEC_TUNNEL"
| "IPSEC_USER"
| "ANY"
| "NONE"
| "CUSTOM"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type KeyUsageName =
| "DIGITAL_SIGNATURE"
| "NON_REPUDIATION"
| "KEY_ENCIPHERMENT"
| "DATA_ENCIPHERMENT"
| "KEY_AGREEMENT"
| "CERTIFICATE_SIGNING"
| "CRL_SIGNING"
| "ENCIPHER_ONLY"
| "DECIPHER_ONLY"
| "ANY"
| "CUSTOM"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type KeyAlgorithm =
| "RSA_2048"
| "RSA_1024"
| "RSA_4096"
| "EC_prime256v1"
| "EC_secp384r1"
| "EC_secp521r1"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface, output
export interface ExpiryEventsConfiguration {
  DaysBeforeExpiry?: number | null;
}

// refs: 3 - tags: input, named, enum, output
export type ValidationMethod =
| "EMAIL"
| "DNS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface DomainValidationOption {
  DomainName: string;
  ValidationDomain: string;
}

// refs: 3 - tags: input, named, interface, output
export interface CertificateOptions {
  CertificateTransparencyLoggingPreference?: CertificateTransparencyLoggingPreference | null;
}

// refs: 3 - tags: input, named, enum, output
export type CertificateTransparencyLoggingPreference =
| "ENABLED"
| "DISABLED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface CertificateDetail {
  CertificateArn?: string | null;
  DomainName?: string | null;
  SubjectAlternativeNames?: string[] | null;
  DomainValidationOptions?: DomainValidation[] | null;
  Serial?: string | null;
  Subject?: string | null;
  Issuer?: string | null;
  CreatedAt?: Date | number | null;
  IssuedAt?: Date | number | null;
  ImportedAt?: Date | number | null;
  Status?: CertificateStatus | null;
  RevokedAt?: Date | number | null;
  RevocationReason?: RevocationReason | null;
  NotBefore?: Date | number | null;
  NotAfter?: Date | number | null;
  KeyAlgorithm?: KeyAlgorithm | null;
  SignatureAlgorithm?: string | null;
  InUseBy?: string[] | null;
  FailureReason?: FailureReason | null;
  Type?: CertificateType | null;
  RenewalSummary?: RenewalSummary | null;
  KeyUsages?: KeyUsage[] | null;
  ExtendedKeyUsages?: ExtendedKeyUsage[] | null;
  CertificateAuthorityArn?: string | null;
  RenewalEligibility?: RenewalEligibility | null;
  Options?: CertificateOptions | null;
}

// refs: 2 - tags: output, named, interface
export interface DomainValidation {
  DomainName: string;
  ValidationEmails?: string[] | null;
  ValidationDomain?: string | null;
  ValidationStatus?: DomainStatus | null;
  ResourceRecord?: ResourceRecord | null;
  ValidationMethod?: ValidationMethod | null;
}

// refs: 2 - tags: output, named, enum
export type DomainStatus =
| "PENDING_VALIDATION"
| "SUCCESS"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface ResourceRecord {
  Name: string;
  Type: RecordType;
  Value: string;
}

// refs: 2 - tags: output, named, enum
export type RecordType =
| "CNAME"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type RevocationReason =
| "UNSPECIFIED"
| "KEY_COMPROMISE"
| "CA_COMPROMISE"
| "AFFILIATION_CHANGED"
| "SUPERCEDED"
| "CESSATION_OF_OPERATION"
| "CERTIFICATE_HOLD"
| "REMOVE_FROM_CRL"
| "PRIVILEGE_WITHDRAWN"
| "A_A_COMPROMISE"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type FailureReason =
| "NO_AVAILABLE_CONTACTS"
| "ADDITIONAL_VERIFICATION_REQUIRED"
| "DOMAIN_NOT_ALLOWED"
| "INVALID_PUBLIC_DOMAIN"
| "DOMAIN_VALIDATION_DENIED"
| "CAA_ERROR"
| "PCA_LIMIT_EXCEEDED"
| "PCA_INVALID_ARN"
| "PCA_INVALID_STATE"
| "PCA_REQUEST_FAILED"
| "PCA_NAME_CONSTRAINTS_VALIDATION"
| "PCA_RESOURCE_NOT_FOUND"
| "PCA_INVALID_ARGS"
| "PCA_INVALID_DURATION"
| "PCA_ACCESS_DENIED"
| "SLR_NOT_FOUND"
| "OTHER"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type CertificateType =
| "IMPORTED"
| "AMAZON_ISSUED"
| "PRIVATE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface RenewalSummary {
  RenewalStatus: RenewalStatus;
  DomainValidationOptions: DomainValidation[];
  RenewalStatusReason?: FailureReason | null;
  UpdatedAt: Date | number;
}

// refs: 1 - tags: output, named, enum
export type RenewalStatus =
| "PENDING_AUTO_RENEWAL"
| "PENDING_VALIDATION"
| "SUCCESS"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface KeyUsage {
  Name?: KeyUsageName | null;
}

// refs: 1 - tags: output, named, interface
export interface ExtendedKeyUsage {
  Name?: ExtendedKeyUsageName | null;
  OID?: string | null;
}

// refs: 1 - tags: output, named, enum
export type RenewalEligibility =
| "ELIGIBLE"
| "INELIGIBLE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface CertificateSummary {
  CertificateArn?: string | null;
  DomainName?: string | null;
}
