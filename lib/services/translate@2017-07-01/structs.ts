// Autogenerated API structures for: Amazon Translate

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface CreateParallelDataRequest {
  Name: string;
  Description?: string | null;
  ParallelDataConfig: ParallelDataConfig;
  EncryptionKey?: EncryptionKey | null;
  ClientToken: string;
}

// refs: 1 - tags: named, input
export interface DeleteParallelDataRequest {
  Name: string;
}

// refs: 1 - tags: named, input
export interface DeleteTerminologyRequest {
  Name: string;
}

// refs: 1 - tags: named, input
export interface DescribeTextTranslationJobRequest {
  JobId: string;
}

// refs: 1 - tags: named, input
export interface GetParallelDataRequest {
  Name: string;
}

// refs: 1 - tags: named, input
export interface GetTerminologyRequest {
  Name: string;
  TerminologyDataFormat: TerminologyDataFormat;
}

// refs: 1 - tags: named, input
export interface ImportTerminologyRequest {
  Name: string;
  MergeStrategy: MergeStrategy;
  Description?: string | null;
  TerminologyData: TerminologyData;
  EncryptionKey?: EncryptionKey | null;
}

// refs: 1 - tags: named, input
export interface ListParallelDataRequest {
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTerminologiesRequest {
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTextTranslationJobsRequest {
  Filter?: TextTranslationJobFilter | null;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface StartTextTranslationJobRequest {
  JobName?: string | null;
  InputDataConfig: InputDataConfig;
  OutputDataConfig: OutputDataConfig;
  DataAccessRoleArn: string;
  SourceLanguageCode: string;
  TargetLanguageCodes: string[];
  TerminologyNames?: string[] | null;
  ParallelDataNames?: string[] | null;
  ClientToken: string;
}

// refs: 1 - tags: named, input
export interface StopTextTranslationJobRequest {
  JobId: string;
}

// refs: 1 - tags: named, input
export interface TranslateTextRequest {
  Text: string;
  TerminologyNames?: string[] | null;
  SourceLanguageCode: string;
  TargetLanguageCode: string;
}

// refs: 1 - tags: named, input
export interface UpdateParallelDataRequest {
  Name: string;
  Description?: string | null;
  ParallelDataConfig: ParallelDataConfig;
  ClientToken: string;
}

// refs: 1 - tags: named, output
export interface CreateParallelDataResponse {
  Name?: string | null;
  Status?: ParallelDataStatus | null;
}

// refs: 1 - tags: named, output
export interface DeleteParallelDataResponse {
  Name?: string | null;
  Status?: ParallelDataStatus | null;
}

// refs: 1 - tags: named, output
export interface DescribeTextTranslationJobResponse {
  TextTranslationJobProperties?: TextTranslationJobProperties | null;
}

// refs: 1 - tags: named, output
export interface GetParallelDataResponse {
  ParallelDataProperties?: ParallelDataProperties | null;
  DataLocation?: ParallelDataDataLocation | null;
  AuxiliaryDataLocation?: ParallelDataDataLocation | null;
  LatestUpdateAttemptAuxiliaryDataLocation?: ParallelDataDataLocation | null;
}

// refs: 1 - tags: named, output
export interface GetTerminologyResponse {
  TerminologyProperties?: TerminologyProperties | null;
  TerminologyDataLocation?: TerminologyDataLocation | null;
}

// refs: 1 - tags: named, output
export interface ImportTerminologyResponse {
  TerminologyProperties?: TerminologyProperties | null;
}

// refs: 1 - tags: named, output
export interface ListParallelDataResponse {
  ParallelDataPropertiesList?: ParallelDataProperties[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTerminologiesResponse {
  TerminologyPropertiesList?: TerminologyProperties[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTextTranslationJobsResponse {
  TextTranslationJobPropertiesList?: TextTranslationJobProperties[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface StartTextTranslationJobResponse {
  JobId?: string | null;
  JobStatus?: JobStatus | null;
}

// refs: 1 - tags: named, output
export interface StopTextTranslationJobResponse {
  JobId?: string | null;
  JobStatus?: JobStatus | null;
}

// refs: 1 - tags: named, output
export interface TranslateTextResponse {
  TranslatedText: string;
  SourceLanguageCode: string;
  TargetLanguageCode: string;
  AppliedTerminologies?: AppliedTerminology[] | null;
}

// refs: 1 - tags: named, output
export interface UpdateParallelDataResponse {
  Name?: string | null;
  Status?: ParallelDataStatus | null;
  LatestUpdateAttemptStatus?: ParallelDataStatus | null;
  LatestUpdateAttemptAt?: Date | number | null;
}

// refs: 4 - tags: input, named, interface, output
export interface ParallelDataConfig {
  S3Uri: string;
  Format: ParallelDataFormat;
}

// refs: 4 - tags: input, named, enum, output
export type ParallelDataFormat =
| "TSV"
| "CSV"
| "TMX"
| cmnP.UnexpectedEnumValue;

// refs: 7 - tags: input, named, interface, output
export interface EncryptionKey {
  Type: EncryptionKeyType;
  Id: string;
}

// refs: 7 - tags: input, named, enum, output
export type EncryptionKeyType =
| "KMS"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum
export type TerminologyDataFormat =
| "CSV"
| "TMX"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type MergeStrategy =
| "OVERWRITE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface TerminologyData {
  File: Uint8Array | string;
  Format: TerminologyDataFormat;
}

// refs: 1 - tags: input, named, interface
export interface TextTranslationJobFilter {
  JobName?: string | null;
  JobStatus?: JobStatus | null;
  SubmittedBeforeTime?: Date | number | null;
  SubmittedAfterTime?: Date | number | null;
}

// refs: 5 - tags: input, named, enum, output
export type JobStatus =
| "SUBMITTED"
| "IN_PROGRESS"
| "COMPLETED"
| "COMPLETED_WITH_ERROR"
| "FAILED"
| "STOP_REQUESTED"
| "STOPPED"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface InputDataConfig {
  S3Uri: string;
  ContentType: string;
}

// refs: 3 - tags: input, named, interface, output
export interface OutputDataConfig {
  S3Uri: string;
}

// refs: 8 - tags: output, named, enum
export type ParallelDataStatus =
| "CREATING"
| "UPDATING"
| "ACTIVE"
| "DELETING"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface TextTranslationJobProperties {
  JobId?: string | null;
  JobName?: string | null;
  JobStatus?: JobStatus | null;
  JobDetails?: JobDetails | null;
  SourceLanguageCode?: string | null;
  TargetLanguageCodes?: string[] | null;
  TerminologyNames?: string[] | null;
  ParallelDataNames?: string[] | null;
  Message?: string | null;
  SubmittedTime?: Date | number | null;
  EndTime?: Date | number | null;
  InputDataConfig?: InputDataConfig | null;
  OutputDataConfig?: OutputDataConfig | null;
  DataAccessRoleArn?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface JobDetails {
  TranslatedDocumentsCount?: number | null;
  DocumentsWithErrorsCount?: number | null;
  InputDocumentsCount?: number | null;
}

// refs: 2 - tags: output, named, interface
export interface ParallelDataProperties {
  Name?: string | null;
  Arn?: string | null;
  Description?: string | null;
  Status?: ParallelDataStatus | null;
  SourceLanguageCode?: string | null;
  TargetLanguageCodes?: string[] | null;
  ParallelDataConfig?: ParallelDataConfig | null;
  Message?: string | null;
  ImportedDataSize?: number | null;
  ImportedRecordCount?: number | null;
  FailedRecordCount?: number | null;
  SkippedRecordCount?: number | null;
  EncryptionKey?: EncryptionKey | null;
  CreatedAt?: Date | number | null;
  LastUpdatedAt?: Date | number | null;
  LatestUpdateAttemptStatus?: ParallelDataStatus | null;
  LatestUpdateAttemptAt?: Date | number | null;
}

// refs: 3 - tags: output, named, interface
export interface ParallelDataDataLocation {
  RepositoryType: string;
  Location: string;
}

// refs: 3 - tags: output, named, interface
export interface TerminologyProperties {
  Name?: string | null;
  Description?: string | null;
  Arn?: string | null;
  SourceLanguageCode?: string | null;
  TargetLanguageCodes?: string[] | null;
  EncryptionKey?: EncryptionKey | null;
  SizeBytes?: number | null;
  TermCount?: number | null;
  CreatedAt?: Date | number | null;
  LastUpdatedAt?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface TerminologyDataLocation {
  RepositoryType: string;
  Location: string;
}

// refs: 1 - tags: output, named, interface
export interface AppliedTerminology {
  Name?: string | null;
  Terms?: Term[] | null;
}

// refs: 1 - tags: output, named, interface
export interface Term {
  SourceText?: string | null;
  TargetText?: string | null;
}
