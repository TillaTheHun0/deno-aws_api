// Autogenerated API structures for: AWS Config

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface BatchGetAggregateResourceConfigRequest {
  ConfigurationAggregatorName: string;
  ResourceIdentifiers: AggregateResourceIdentifier[];
}

// refs: 1 - tags: named, input
export interface BatchGetResourceConfigRequest {
  resourceKeys: ResourceKey[];
}

// refs: 1 - tags: named, input
export interface DeleteAggregationAuthorizationRequest {
  AuthorizedAccountId: string;
  AuthorizedAwsRegion: string;
}

// refs: 1 - tags: named, input
export interface DeleteConfigRuleRequest {
  ConfigRuleName: string;
}

// refs: 1 - tags: named, input
export interface DeleteConfigurationAggregatorRequest {
  ConfigurationAggregatorName: string;
}

// refs: 1 - tags: named, input
export interface DeleteConfigurationRecorderRequest {
  ConfigurationRecorderName: string;
}

// refs: 1 - tags: named, input
export interface DeleteConformancePackRequest {
  ConformancePackName: string;
}

// refs: 1 - tags: named, input
export interface DeleteDeliveryChannelRequest {
  DeliveryChannelName: string;
}

// refs: 1 - tags: named, input
export interface DeleteEvaluationResultsRequest {
  ConfigRuleName: string;
}

// refs: 1 - tags: named, input
export interface DeleteOrganizationConfigRuleRequest {
  OrganizationConfigRuleName: string;
}

// refs: 1 - tags: named, input
export interface DeleteOrganizationConformancePackRequest {
  OrganizationConformancePackName: string;
}

// refs: 1 - tags: named, input
export interface DeletePendingAggregationRequestRequest {
  RequesterAccountId: string;
  RequesterAwsRegion: string;
}

// refs: 1 - tags: named, input
export interface DeleteRemediationConfigurationRequest {
  ConfigRuleName: string;
  ResourceType?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteRemediationExceptionsRequest {
  ConfigRuleName: string;
  ResourceKeys: RemediationExceptionResourceKey[];
}

// refs: 1 - tags: named, input
export interface DeleteResourceConfigRequest {
  ResourceType: string;
  ResourceId: string;
}

// refs: 1 - tags: named, input
export interface DeleteRetentionConfigurationRequest {
  RetentionConfigurationName: string;
}

// refs: 1 - tags: named, input
export interface DeleteStoredQueryRequest {
  QueryName: string;
}

// refs: 1 - tags: named, input
export interface DeliverConfigSnapshotRequest {
  deliveryChannelName: string;
}

// refs: 1 - tags: named, input
export interface DescribeAggregateComplianceByConfigRulesRequest {
  ConfigurationAggregatorName: string;
  Filters?: ConfigRuleComplianceFilters | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeAggregationAuthorizationsRequest {
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeComplianceByConfigRuleRequest {
  ConfigRuleNames?: string[] | null;
  ComplianceTypes?: ComplianceType[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeComplianceByResourceRequest {
  ResourceType?: string | null;
  ResourceId?: string | null;
  ComplianceTypes?: ComplianceType[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeConfigRuleEvaluationStatusRequest {
  ConfigRuleNames?: string[] | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeConfigRulesRequest {
  ConfigRuleNames?: string[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeConfigurationAggregatorSourcesStatusRequest {
  ConfigurationAggregatorName: string;
  UpdateStatus?: AggregatedSourceStatusType[] | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeConfigurationAggregatorsRequest {
  ConfigurationAggregatorNames?: string[] | null;
  NextToken?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeConfigurationRecorderStatusRequest {
  ConfigurationRecorderNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeConfigurationRecordersRequest {
  ConfigurationRecorderNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeConformancePackComplianceRequest {
  ConformancePackName: string;
  Filters?: ConformancePackComplianceFilters | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeConformancePackStatusRequest {
  ConformancePackNames?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeConformancePacksRequest {
  ConformancePackNames?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeDeliveryChannelStatusRequest {
  DeliveryChannelNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeDeliveryChannelsRequest {
  DeliveryChannelNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeOrganizationConfigRuleStatusesRequest {
  OrganizationConfigRuleNames?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeOrganizationConfigRulesRequest {
  OrganizationConfigRuleNames?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeOrganizationConformancePackStatusesRequest {
  OrganizationConformancePackNames?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeOrganizationConformancePacksRequest {
  OrganizationConformancePackNames?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribePendingAggregationRequestsRequest {
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeRemediationConfigurationsRequest {
  ConfigRuleNames: string[];
}

// refs: 1 - tags: named, input
export interface DescribeRemediationExceptionsRequest {
  ConfigRuleName: string;
  ResourceKeys?: RemediationExceptionResourceKey[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeRemediationExecutionStatusRequest {
  ConfigRuleName: string;
  ResourceKeys?: ResourceKey[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeRetentionConfigurationsRequest {
  RetentionConfigurationNames?: string[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetAggregateComplianceDetailsByConfigRuleRequest {
  ConfigurationAggregatorName: string;
  ConfigRuleName: string;
  AccountId: string;
  AwsRegion: string;
  ComplianceType?: ComplianceType | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetAggregateConfigRuleComplianceSummaryRequest {
  ConfigurationAggregatorName: string;
  Filters?: ConfigRuleComplianceSummaryFilters | null;
  GroupByKey?: ConfigRuleComplianceSummaryGroupKey | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetAggregateDiscoveredResourceCountsRequest {
  ConfigurationAggregatorName: string;
  Filters?: ResourceCountFilters | null;
  GroupByKey?: ResourceCountGroupKey | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetAggregateResourceConfigRequest {
  ConfigurationAggregatorName: string;
  ResourceIdentifier: AggregateResourceIdentifier;
}

// refs: 1 - tags: named, input
export interface GetComplianceDetailsByConfigRuleRequest {
  ConfigRuleName: string;
  ComplianceTypes?: ComplianceType[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetComplianceDetailsByResourceRequest {
  ResourceType: string;
  ResourceId: string;
  ComplianceTypes?: ComplianceType[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetComplianceSummaryByResourceTypeRequest {
  ResourceTypes?: string[] | null;
}

// refs: 1 - tags: named, input
export interface GetConformancePackComplianceDetailsRequest {
  ConformancePackName: string;
  Filters?: ConformancePackEvaluationFilters | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetConformancePackComplianceSummaryRequest {
  ConformancePackNames: string[];
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetDiscoveredResourceCountsRequest {
  resourceTypes?: string[] | null;
  limit?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetOrganizationConfigRuleDetailedStatusRequest {
  OrganizationConfigRuleName: string;
  Filters?: StatusDetailFilters | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetOrganizationConformancePackDetailedStatusRequest {
  OrganizationConformancePackName: string;
  Filters?: OrganizationResourceDetailedStatusFilters | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetResourceConfigHistoryRequest {
  resourceType: ResourceType;
  resourceId: string;
  laterTime?: Date | number | null;
  earlierTime?: Date | number | null;
  chronologicalOrder?: ChronologicalOrder | null;
  limit?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetStoredQueryRequest {
  QueryName: string;
}

// refs: 1 - tags: named, input
export interface ListAggregateDiscoveredResourcesRequest {
  ConfigurationAggregatorName: string;
  ResourceType: ResourceType;
  Filters?: ResourceFilters | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListDiscoveredResourcesRequest {
  resourceType: ResourceType;
  resourceIds?: string[] | null;
  resourceName?: string | null;
  limit?: number | null;
  includeDeletedResources?: boolean | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListStoredQueriesRequest {
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  ResourceArn: string;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface PutAggregationAuthorizationRequest {
  AuthorizedAccountId: string;
  AuthorizedAwsRegion: string;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface PutConfigRuleRequest {
  ConfigRule: ConfigRule;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface PutConfigurationAggregatorRequest {
  ConfigurationAggregatorName: string;
  AccountAggregationSources?: AccountAggregationSource[] | null;
  OrganizationAggregationSource?: OrganizationAggregationSource | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface PutConfigurationRecorderRequest {
  ConfigurationRecorder: ConfigurationRecorder;
}

// refs: 1 - tags: named, input
export interface PutConformancePackRequest {
  ConformancePackName: string;
  TemplateS3Uri?: string | null;
  TemplateBody?: string | null;
  DeliveryS3Bucket?: string | null;
  DeliveryS3KeyPrefix?: string | null;
  ConformancePackInputParameters?: ConformancePackInputParameter[] | null;
}

// refs: 1 - tags: named, input
export interface PutDeliveryChannelRequest {
  DeliveryChannel: DeliveryChannel;
}

// refs: 1 - tags: named, input
export interface PutEvaluationsRequest {
  Evaluations?: Evaluation[] | null;
  ResultToken: string;
  TestMode?: boolean | null;
}

// refs: 1 - tags: named, input
export interface PutExternalEvaluationRequest {
  ConfigRuleName: string;
  ExternalEvaluation: ExternalEvaluation;
}

// refs: 1 - tags: named, input
export interface PutOrganizationConfigRuleRequest {
  OrganizationConfigRuleName: string;
  OrganizationManagedRuleMetadata?: OrganizationManagedRuleMetadata | null;
  OrganizationCustomRuleMetadata?: OrganizationCustomRuleMetadata | null;
  ExcludedAccounts?: string[] | null;
}

// refs: 1 - tags: named, input
export interface PutOrganizationConformancePackRequest {
  OrganizationConformancePackName: string;
  TemplateS3Uri?: string | null;
  TemplateBody?: string | null;
  DeliveryS3Bucket?: string | null;
  DeliveryS3KeyPrefix?: string | null;
  ConformancePackInputParameters?: ConformancePackInputParameter[] | null;
  ExcludedAccounts?: string[] | null;
}

// refs: 1 - tags: named, input
export interface PutRemediationConfigurationsRequest {
  RemediationConfigurations: RemediationConfiguration[];
}

// refs: 1 - tags: named, input
export interface PutRemediationExceptionsRequest {
  ConfigRuleName: string;
  ResourceKeys: RemediationExceptionResourceKey[];
  Message?: string | null;
  ExpirationTime?: Date | number | null;
}

// refs: 1 - tags: named, input
export interface PutResourceConfigRequest {
  ResourceType: string;
  SchemaVersionId: string;
  ResourceId: string;
  ResourceName?: string | null;
  Configuration: string;
  Tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface PutRetentionConfigurationRequest {
  RetentionPeriodInDays: number;
}

// refs: 1 - tags: named, input
export interface PutStoredQueryRequest {
  StoredQuery: StoredQuery;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface SelectAggregateResourceConfigRequest {
  Expression: string;
  ConfigurationAggregatorName: string;
  Limit?: number | null;
  MaxResults?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface SelectResourceConfigRequest {
  Expression: string;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface StartConfigRulesEvaluationRequest {
  ConfigRuleNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface StartConfigurationRecorderRequest {
  ConfigurationRecorderName: string;
}

// refs: 1 - tags: named, input
export interface StartRemediationExecutionRequest {
  ConfigRuleName: string;
  ResourceKeys: ResourceKey[];
}

// refs: 1 - tags: named, input
export interface StopConfigurationRecorderRequest {
  ConfigurationRecorderName: string;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  ResourceArn: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  ResourceArn: string;
  TagKeys: string[];
}

// refs: 1 - tags: named, output
export interface BatchGetAggregateResourceConfigResponse {
  BaseConfigurationItems?: BaseConfigurationItem[] | null;
  UnprocessedResourceIdentifiers?: AggregateResourceIdentifier[] | null;
}

// refs: 1 - tags: named, output
export interface BatchGetResourceConfigResponse {
  baseConfigurationItems?: BaseConfigurationItem[] | null;
  unprocessedResourceKeys?: ResourceKey[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteRemediationExceptionsResponse {
  FailedBatches?: FailedDeleteRemediationExceptionsBatch[] | null;
}

// refs: 1 - tags: named, output
export interface DeliverConfigSnapshotResponse {
  configSnapshotId?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeAggregateComplianceByConfigRulesResponse {
  AggregateComplianceByConfigRules?: AggregateComplianceByConfigRule[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeAggregationAuthorizationsResponse {
  AggregationAuthorizations?: AggregationAuthorization[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeComplianceByConfigRuleResponse {
  ComplianceByConfigRules?: ComplianceByConfigRule[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeComplianceByResourceResponse {
  ComplianceByResources?: ComplianceByResource[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeConfigRuleEvaluationStatusResponse {
  ConfigRulesEvaluationStatus?: ConfigRuleEvaluationStatus[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeConfigRulesResponse {
  ConfigRules?: ConfigRule[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeConfigurationAggregatorSourcesStatusResponse {
  AggregatedSourceStatusList?: AggregatedSourceStatus[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeConfigurationAggregatorsResponse {
  ConfigurationAggregators?: ConfigurationAggregator[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeConfigurationRecorderStatusResponse {
  ConfigurationRecordersStatus?: ConfigurationRecorderStatus[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeConfigurationRecordersResponse {
  ConfigurationRecorders?: ConfigurationRecorder[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeConformancePackComplianceResponse {
  ConformancePackName: string;
  ConformancePackRuleComplianceList: ConformancePackRuleCompliance[];
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeConformancePackStatusResponse {
  ConformancePackStatusDetails?: ConformancePackStatusDetail[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeConformancePacksResponse {
  ConformancePackDetails?: ConformancePackDetail[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeDeliveryChannelStatusResponse {
  DeliveryChannelsStatus?: DeliveryChannelStatus[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeDeliveryChannelsResponse {
  DeliveryChannels?: DeliveryChannel[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeOrganizationConfigRuleStatusesResponse {
  OrganizationConfigRuleStatuses?: OrganizationConfigRuleStatus[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeOrganizationConfigRulesResponse {
  OrganizationConfigRules?: OrganizationConfigRule[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeOrganizationConformancePackStatusesResponse {
  OrganizationConformancePackStatuses?: OrganizationConformancePackStatus[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeOrganizationConformancePacksResponse {
  OrganizationConformancePacks?: OrganizationConformancePack[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribePendingAggregationRequestsResponse {
  PendingAggregationRequests?: PendingAggregationRequest[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeRemediationConfigurationsResponse {
  RemediationConfigurations?: RemediationConfiguration[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeRemediationExceptionsResponse {
  RemediationExceptions?: RemediationException[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeRemediationExecutionStatusResponse {
  RemediationExecutionStatuses?: RemediationExecutionStatus[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeRetentionConfigurationsResponse {
  RetentionConfigurations?: RetentionConfiguration[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAggregateComplianceDetailsByConfigRuleResponse {
  AggregateEvaluationResults?: AggregateEvaluationResult[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAggregateConfigRuleComplianceSummaryResponse {
  GroupByKey?: string | null;
  AggregateComplianceCounts?: AggregateComplianceCount[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAggregateDiscoveredResourceCountsResponse {
  TotalDiscoveredResources: number;
  GroupByKey?: string | null;
  GroupedResourceCounts?: GroupedResourceCount[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAggregateResourceConfigResponse {
  ConfigurationItem?: ConfigurationItem | null;
}

// refs: 1 - tags: named, output
export interface GetComplianceDetailsByConfigRuleResponse {
  EvaluationResults?: EvaluationResult[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetComplianceDetailsByResourceResponse {
  EvaluationResults?: EvaluationResult[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetComplianceSummaryByConfigRuleResponse {
  ComplianceSummary?: ComplianceSummary | null;
}

// refs: 1 - tags: named, output
export interface GetComplianceSummaryByResourceTypeResponse {
  ComplianceSummariesByResourceType?: ComplianceSummaryByResourceType[] | null;
}

// refs: 1 - tags: named, output
export interface GetConformancePackComplianceDetailsResponse {
  ConformancePackName: string;
  ConformancePackRuleEvaluationResults?: ConformancePackEvaluationResult[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetConformancePackComplianceSummaryResponse {
  ConformancePackComplianceSummaryList?: ConformancePackComplianceSummary[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetDiscoveredResourceCountsResponse {
  totalDiscoveredResources?: number | null;
  resourceCounts?: ResourceCount[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetOrganizationConfigRuleDetailedStatusResponse {
  OrganizationConfigRuleDetailedStatus?: MemberAccountStatus[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetOrganizationConformancePackDetailedStatusResponse {
  OrganizationConformancePackDetailedStatuses?: OrganizationConformancePackDetailedStatus[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetResourceConfigHistoryResponse {
  configurationItems?: ConfigurationItem[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetStoredQueryResponse {
  StoredQuery?: StoredQuery | null;
}

// refs: 1 - tags: named, output
export interface ListAggregateDiscoveredResourcesResponse {
  ResourceIdentifiers?: AggregateResourceIdentifier[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListDiscoveredResourcesResponse {
  resourceIdentifiers?: ResourceIdentifier[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListStoredQueriesResponse {
  StoredQueryMetadata?: StoredQueryMetadata[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  Tags?: Tag[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface PutAggregationAuthorizationResponse {
  AggregationAuthorization?: AggregationAuthorization | null;
}

// refs: 1 - tags: named, output
export interface PutConfigurationAggregatorResponse {
  ConfigurationAggregator?: ConfigurationAggregator | null;
}

// refs: 1 - tags: named, output
export interface PutConformancePackResponse {
  ConformancePackArn?: string | null;
}

// refs: 1 - tags: named, output
export interface PutEvaluationsResponse {
  FailedEvaluations?: Evaluation[] | null;
}

// refs: 1 - tags: named, output
export interface PutOrganizationConfigRuleResponse {
  OrganizationConfigRuleArn?: string | null;
}

// refs: 1 - tags: named, output
export interface PutOrganizationConformancePackResponse {
  OrganizationConformancePackArn?: string | null;
}

// refs: 1 - tags: named, output
export interface PutRemediationConfigurationsResponse {
  FailedBatches?: FailedRemediationBatch[] | null;
}

// refs: 1 - tags: named, output
export interface PutRemediationExceptionsResponse {
  FailedBatches?: FailedRemediationExceptionBatch[] | null;
}

// refs: 1 - tags: named, output
export interface PutRetentionConfigurationResponse {
  RetentionConfiguration?: RetentionConfiguration | null;
}

// refs: 1 - tags: named, output
export interface PutStoredQueryResponse {
  QueryArn?: string | null;
}

// refs: 1 - tags: named, output
export interface SelectAggregateResourceConfigResponse {
  Results?: string[] | null;
  QueryInfo?: QueryInfo | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface SelectResourceConfigResponse {
  Results?: string[] | null;
  QueryInfo?: QueryInfo | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface StartRemediationExecutionResponse {
  FailureMessage?: string | null;
  FailedItems?: ResourceKey[] | null;
}

// refs: 4 - tags: input, named, interface, output
export interface AggregateResourceIdentifier {
  SourceAccountId: string;
  SourceRegion: string;
  ResourceId: string;
  ResourceType: ResourceType;
  ResourceName?: string | null;
}

// refs: 24 - tags: input, named, enum, output
export type ResourceType =
| "AWS::EC2::CustomerGateway"
| "AWS::EC2::EIP"
| "AWS::EC2::Host"
| "AWS::EC2::Instance"
| "AWS::EC2::InternetGateway"
| "AWS::EC2::NetworkAcl"
| "AWS::EC2::NetworkInterface"
| "AWS::EC2::RouteTable"
| "AWS::EC2::SecurityGroup"
| "AWS::EC2::Subnet"
| "AWS::CloudTrail::Trail"
| "AWS::EC2::Volume"
| "AWS::EC2::VPC"
| "AWS::EC2::VPNConnection"
| "AWS::EC2::VPNGateway"
| "AWS::EC2::RegisteredHAInstance"
| "AWS::EC2::NatGateway"
| "AWS::EC2::EgressOnlyInternetGateway"
| "AWS::EC2::VPCEndpoint"
| "AWS::EC2::VPCEndpointService"
| "AWS::EC2::FlowLog"
| "AWS::EC2::VPCPeeringConnection"
| "AWS::Elasticsearch::Domain"
| "AWS::IAM::Group"
| "AWS::IAM::Policy"
| "AWS::IAM::Role"
| "AWS::IAM::User"
| "AWS::ElasticLoadBalancingV2::LoadBalancer"
| "AWS::ACM::Certificate"
| "AWS::RDS::DBInstance"
| "AWS::RDS::DBSubnetGroup"
| "AWS::RDS::DBSecurityGroup"
| "AWS::RDS::DBSnapshot"
| "AWS::RDS::DBCluster"
| "AWS::RDS::DBClusterSnapshot"
| "AWS::RDS::EventSubscription"
| "AWS::S3::Bucket"
| "AWS::S3::AccountPublicAccessBlock"
| "AWS::Redshift::Cluster"
| "AWS::Redshift::ClusterSnapshot"
| "AWS::Redshift::ClusterParameterGroup"
| "AWS::Redshift::ClusterSecurityGroup"
| "AWS::Redshift::ClusterSubnetGroup"
| "AWS::Redshift::EventSubscription"
| "AWS::SSM::ManagedInstanceInventory"
| "AWS::CloudWatch::Alarm"
| "AWS::CloudFormation::Stack"
| "AWS::ElasticLoadBalancing::LoadBalancer"
| "AWS::AutoScaling::AutoScalingGroup"
| "AWS::AutoScaling::LaunchConfiguration"
| "AWS::AutoScaling::ScalingPolicy"
| "AWS::AutoScaling::ScheduledAction"
| "AWS::DynamoDB::Table"
| "AWS::CodeBuild::Project"
| "AWS::WAF::RateBasedRule"
| "AWS::WAF::Rule"
| "AWS::WAF::RuleGroup"
| "AWS::WAF::WebACL"
| "AWS::WAFRegional::RateBasedRule"
| "AWS::WAFRegional::Rule"
| "AWS::WAFRegional::RuleGroup"
| "AWS::WAFRegional::WebACL"
| "AWS::CloudFront::Distribution"
| "AWS::CloudFront::StreamingDistribution"
| "AWS::Lambda::Function"
| "AWS::NetworkFirewall::Firewall"
| "AWS::NetworkFirewall::FirewallPolicy"
| "AWS::NetworkFirewall::RuleGroup"
| "AWS::ElasticBeanstalk::Application"
| "AWS::ElasticBeanstalk::ApplicationVersion"
| "AWS::ElasticBeanstalk::Environment"
| "AWS::WAFv2::WebACL"
| "AWS::WAFv2::RuleGroup"
| "AWS::WAFv2::IPSet"
| "AWS::WAFv2::RegexPatternSet"
| "AWS::WAFv2::ManagedRuleSet"
| "AWS::XRay::EncryptionConfig"
| "AWS::SSM::AssociationCompliance"
| "AWS::SSM::PatchCompliance"
| "AWS::Shield::Protection"
| "AWS::ShieldRegional::Protection"
| "AWS::Config::ResourceCompliance"
| "AWS::ApiGateway::Stage"
| "AWS::ApiGateway::RestApi"
| "AWS::ApiGatewayV2::Stage"
| "AWS::ApiGatewayV2::Api"
| "AWS::CodePipeline::Pipeline"
| "AWS::ServiceCatalog::CloudFormationProvisionedProduct"
| "AWS::ServiceCatalog::CloudFormationProduct"
| "AWS::ServiceCatalog::Portfolio"
| "AWS::SQS::Queue"
| "AWS::KMS::Key"
| "AWS::QLDB::Ledger"
| "AWS::SecretsManager::Secret"
| "AWS::SNS::Topic"
| "AWS::SSM::FileData"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, interface, output
export interface ResourceKey {
  resourceType: ResourceType;
  resourceId: string;
}

// refs: 4 - tags: input, named, interface, output
export interface RemediationExceptionResourceKey {
  ResourceType?: string | null;
  ResourceId?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface ConfigRuleComplianceFilters {
  ConfigRuleName?: string | null;
  ComplianceType?: ComplianceType | null;
  AccountId?: string | null;
  AwsRegion?: string | null;
}

// refs: 15 - tags: input, named, enum, output
export type ComplianceType =
| "COMPLIANT"
| "NON_COMPLIANT"
| "NOT_APPLICABLE"
| "INSUFFICIENT_DATA"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type AggregatedSourceStatusType =
| "FAILED"
| "SUCCEEDED"
| "OUTDATED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ConformancePackComplianceFilters {
  ConfigRuleNames?: string[] | null;
  ComplianceType?: ConformancePackComplianceType | null;
}

// refs: 5 - tags: input, named, enum, output
export type ConformancePackComplianceType =
| "COMPLIANT"
| "NON_COMPLIANT"
| "INSUFFICIENT_DATA"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ConfigRuleComplianceSummaryFilters {
  AccountId?: string | null;
  AwsRegion?: string | null;
}

// refs: 1 - tags: input, named, enum
export type ConfigRuleComplianceSummaryGroupKey =
| "ACCOUNT_ID"
| "AWS_REGION"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ResourceCountFilters {
  ResourceType?: ResourceType | null;
  AccountId?: string | null;
  Region?: string | null;
}

// refs: 1 - tags: input, named, enum
export type ResourceCountGroupKey =
| "RESOURCE_TYPE"
| "ACCOUNT_ID"
| "AWS_REGION"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ConformancePackEvaluationFilters {
  ConfigRuleNames?: string[] | null;
  ComplianceType?: ConformancePackComplianceType | null;
  ResourceType?: string | null;
  ResourceIds?: string[] | null;
}

// refs: 1 - tags: input, named, interface
export interface StatusDetailFilters {
  AccountId?: string | null;
  MemberAccountRuleStatus?: MemberAccountRuleStatus | null;
}

// refs: 2 - tags: input, named, enum, output
export type MemberAccountRuleStatus =
| "CREATE_SUCCESSFUL"
| "CREATE_IN_PROGRESS"
| "CREATE_FAILED"
| "DELETE_SUCCESSFUL"
| "DELETE_FAILED"
| "DELETE_IN_PROGRESS"
| "UPDATE_SUCCESSFUL"
| "UPDATE_IN_PROGRESS"
| "UPDATE_FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface OrganizationResourceDetailedStatusFilters {
  AccountId?: string | null;
  Status?: OrganizationResourceDetailedStatus | null;
}

// refs: 2 - tags: input, named, enum, output
export type OrganizationResourceDetailedStatus =
| "CREATE_SUCCESSFUL"
| "CREATE_IN_PROGRESS"
| "CREATE_FAILED"
| "DELETE_SUCCESSFUL"
| "DELETE_FAILED"
| "DELETE_IN_PROGRESS"
| "UPDATE_SUCCESSFUL"
| "UPDATE_IN_PROGRESS"
| "UPDATE_FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ChronologicalOrder =
| "Reverse"
| "Forward"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ResourceFilters {
  AccountId?: string | null;
  ResourceId?: string | null;
  ResourceName?: string | null;
  Region?: string | null;
}

// refs: 6 - tags: input, named, interface, output
export interface Tag {
  Key?: string | null;
  Value?: string | null;
}

// refs: 2 - tags: input, named, interface, output
export interface ConfigRule {
  ConfigRuleName?: string | null;
  ConfigRuleArn?: string | null;
  ConfigRuleId?: string | null;
  Description?: string | null;
  Scope?: Scope | null;
  Source: Source;
  InputParameters?: string | null;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | null;
  ConfigRuleState?: ConfigRuleState | null;
  CreatedBy?: string | null;
}

// refs: 2 - tags: input, named, interface, output
export interface Scope {
  ComplianceResourceTypes?: string[] | null;
  TagKey?: string | null;
  TagValue?: string | null;
  ComplianceResourceId?: string | null;
}

// refs: 2 - tags: input, named, interface, output
export interface Source {
  Owner: Owner;
  SourceIdentifier: string;
  SourceDetails?: SourceDetail[] | null;
}

// refs: 2 - tags: input, named, enum, output
export type Owner =
| "CUSTOM_LAMBDA"
| "AWS"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface, output
export interface SourceDetail {
  EventSource?: EventSource | null;
  MessageType?: MessageType | null;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | null;
}

// refs: 2 - tags: input, named, enum, output
export type EventSource =
| "aws.config"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type MessageType =
| "ConfigurationItemChangeNotification"
| "ConfigurationSnapshotDeliveryCompleted"
| "ScheduledNotification"
| "OversizedConfigurationItemChangeNotification"
| cmnP.UnexpectedEnumValue;

// refs: 10 - tags: input, named, enum, output
export type MaximumExecutionFrequency =
| "One_Hour"
| "Three_Hours"
| "Six_Hours"
| "Twelve_Hours"
| "TwentyFour_Hours"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type ConfigRuleState =
| "ACTIVE"
| "DELETING"
| "DELETING_RESULTS"
| "EVALUATING"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface AccountAggregationSource {
  AccountIds: string[];
  AllAwsRegions?: boolean | null;
  AwsRegions?: string[] | null;
}

// refs: 3 - tags: input, named, interface, output
export interface OrganizationAggregationSource {
  RoleArn: string;
  AwsRegions?: string[] | null;
  AllAwsRegions?: boolean | null;
}

// refs: 2 - tags: input, named, interface, output
export interface ConfigurationRecorder {
  name?: string | null;
  roleARN?: string | null;
  recordingGroup?: RecordingGroup | null;
}

// refs: 2 - tags: input, named, interface, output
export interface RecordingGroup {
  allSupported?: boolean | null;
  includeGlobalResourceTypes?: boolean | null;
  resourceTypes?: ResourceType[] | null;
}

// refs: 4 - tags: input, named, interface, output
export interface ConformancePackInputParameter {
  ParameterName: string;
  ParameterValue: string;
}

// refs: 2 - tags: input, named, interface, output
export interface DeliveryChannel {
  name?: string | null;
  s3BucketName?: string | null;
  s3KeyPrefix?: string | null;
  s3KmsKeyArn?: string | null;
  snsTopicARN?: string | null;
  configSnapshotDeliveryProperties?: ConfigSnapshotDeliveryProperties | null;
}

// refs: 2 - tags: input, named, interface, output
export interface ConfigSnapshotDeliveryProperties {
  deliveryFrequency?: MaximumExecutionFrequency | null;
}

// refs: 2 - tags: input, named, interface, output
export interface Evaluation {
  ComplianceResourceType: string;
  ComplianceResourceId: string;
  ComplianceType: ComplianceType;
  Annotation?: string | null;
  OrderingTimestamp: Date | number;
}

// refs: 1 - tags: input, named, interface
export interface ExternalEvaluation {
  ComplianceResourceType: string;
  ComplianceResourceId: string;
  ComplianceType: ComplianceType;
  Annotation?: string | null;
  OrderingTimestamp: Date | number;
}

// refs: 2 - tags: input, named, interface, output
export interface OrganizationManagedRuleMetadata {
  Description?: string | null;
  RuleIdentifier: string;
  InputParameters?: string | null;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | null;
  ResourceTypesScope?: string[] | null;
  ResourceIdScope?: string | null;
  TagKeyScope?: string | null;
  TagValueScope?: string | null;
}

// refs: 2 - tags: input, named, interface, output
export interface OrganizationCustomRuleMetadata {
  Description?: string | null;
  LambdaFunctionArn: string;
  OrganizationConfigRuleTriggerTypes: OrganizationConfigRuleTriggerType[];
  InputParameters?: string | null;
  MaximumExecutionFrequency?: MaximumExecutionFrequency | null;
  ResourceTypesScope?: string[] | null;
  ResourceIdScope?: string | null;
  TagKeyScope?: string | null;
  TagValueScope?: string | null;
}

// refs: 2 - tags: input, named, enum, output
export type OrganizationConfigRuleTriggerType =
| "ConfigurationItemChangeNotification"
| "OversizedConfigurationItemChangeNotification"
| "ScheduledNotification"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface RemediationConfiguration {
  ConfigRuleName: string;
  TargetType: RemediationTargetType;
  TargetId: string;
  TargetVersion?: string | null;
  Parameters?: { [key: string]: RemediationParameterValue | null | undefined } | null;
  ResourceType?: string | null;
  Automatic?: boolean | null;
  ExecutionControls?: ExecutionControls | null;
  MaximumAutomaticAttempts?: number | null;
  RetryAttemptSeconds?: number | null;
  Arn?: string | null;
  CreatedByService?: string | null;
}

// refs: 3 - tags: input, named, enum, output
export type RemediationTargetType =
| "SSM_DOCUMENT"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface RemediationParameterValue {
  ResourceValue?: ResourceValue | null;
  StaticValue?: StaticValue | null;
}

// refs: 3 - tags: input, named, interface, output
export interface ResourceValue {
  Value: ResourceValueType;
}

// refs: 3 - tags: input, named, enum, output
export type ResourceValueType =
| "RESOURCE_ID"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface StaticValue {
  Values: string[];
}

// refs: 3 - tags: input, named, interface, output
export interface ExecutionControls {
  SsmControls?: SsmControls | null;
}

// refs: 3 - tags: input, named, interface, output
export interface SsmControls {
  ConcurrentExecutionRatePercentage?: number | null;
  ErrorPercentage?: number | null;
}

// refs: 2 - tags: input, named, interface, output
export interface StoredQuery {
  QueryId?: string | null;
  QueryArn?: string | null;
  QueryName: string;
  Description?: string | null;
  Expression?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface BaseConfigurationItem {
  version?: string | null;
  accountId?: string | null;
  configurationItemCaptureTime?: Date | number | null;
  configurationItemStatus?: ConfigurationItemStatus | null;
  configurationStateId?: string | null;
  arn?: string | null;
  resourceType?: ResourceType | null;
  resourceId?: string | null;
  resourceName?: string | null;
  awsRegion?: string | null;
  availabilityZone?: string | null;
  resourceCreationTime?: Date | number | null;
  configuration?: string | null;
  supplementaryConfiguration?: { [key: string]: string | null | undefined } | null;
}

// refs: 4 - tags: output, named, enum
export type ConfigurationItemStatus =
| "OK"
| "ResourceDiscovered"
| "ResourceNotRecorded"
| "ResourceDeleted"
| "ResourceDeletedNotRecorded"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface FailedDeleteRemediationExceptionsBatch {
  FailureMessage?: string | null;
  FailedItems?: RemediationExceptionResourceKey[] | null;
}

// refs: 1 - tags: output, named, interface
export interface AggregateComplianceByConfigRule {
  ConfigRuleName?: string | null;
  Compliance?: Compliance | null;
  AccountId?: string | null;
  AwsRegion?: string | null;
}

// refs: 3 - tags: output, named, interface
export interface Compliance {
  ComplianceType?: ComplianceType | null;
  ComplianceContributorCount?: ComplianceContributorCount | null;
}

// refs: 9 - tags: output, named, interface
export interface ComplianceContributorCount {
  CappedCount?: number | null;
  CapExceeded?: boolean | null;
}

// refs: 2 - tags: output, named, interface
export interface AggregationAuthorization {
  AggregationAuthorizationArn?: string | null;
  AuthorizedAccountId?: string | null;
  AuthorizedAwsRegion?: string | null;
  CreationTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface ComplianceByConfigRule {
  ConfigRuleName?: string | null;
  Compliance?: Compliance | null;
}

// refs: 1 - tags: output, named, interface
export interface ComplianceByResource {
  ResourceType?: string | null;
  ResourceId?: string | null;
  Compliance?: Compliance | null;
}

// refs: 1 - tags: output, named, interface
export interface ConfigRuleEvaluationStatus {
  ConfigRuleName?: string | null;
  ConfigRuleArn?: string | null;
  ConfigRuleId?: string | null;
  LastSuccessfulInvocationTime?: Date | number | null;
  LastFailedInvocationTime?: Date | number | null;
  LastSuccessfulEvaluationTime?: Date | number | null;
  LastFailedEvaluationTime?: Date | number | null;
  FirstActivatedTime?: Date | number | null;
  LastDeactivatedTime?: Date | number | null;
  LastErrorCode?: string | null;
  LastErrorMessage?: string | null;
  FirstEvaluationStarted?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface AggregatedSourceStatus {
  SourceId?: string | null;
  SourceType?: AggregatedSourceType | null;
  AwsRegion?: string | null;
  LastUpdateStatus?: AggregatedSourceStatusType | null;
  LastUpdateTime?: Date | number | null;
  LastErrorCode?: string | null;
  LastErrorMessage?: string | null;
}

// refs: 1 - tags: output, named, enum
export type AggregatedSourceType =
| "ACCOUNT"
| "ORGANIZATION"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface ConfigurationAggregator {
  ConfigurationAggregatorName?: string | null;
  ConfigurationAggregatorArn?: string | null;
  AccountAggregationSources?: AccountAggregationSource[] | null;
  OrganizationAggregationSource?: OrganizationAggregationSource | null;
  CreationTime?: Date | number | null;
  LastUpdatedTime?: Date | number | null;
  CreatedBy?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ConfigurationRecorderStatus {
  name?: string | null;
  lastStartTime?: Date | number | null;
  lastStopTime?: Date | number | null;
  recording?: boolean | null;
  lastStatus?: RecorderStatus | null;
  lastErrorCode?: string | null;
  lastErrorMessage?: string | null;
  lastStatusChangeTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type RecorderStatus =
| "Pending"
| "Success"
| "Failure"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ConformancePackRuleCompliance {
  ConfigRuleName?: string | null;
  ComplianceType?: ConformancePackComplianceType | null;
}

// refs: 1 - tags: output, named, interface
export interface ConformancePackStatusDetail {
  ConformancePackName: string;
  ConformancePackId: string;
  ConformancePackArn: string;
  ConformancePackState: ConformancePackState;
  StackArn: string;
  ConformancePackStatusReason?: string | null;
  LastUpdateRequestedTime: Date | number;
  LastUpdateCompletedTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type ConformancePackState =
| "CREATE_IN_PROGRESS"
| "CREATE_COMPLETE"
| "CREATE_FAILED"
| "DELETE_IN_PROGRESS"
| "DELETE_FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ConformancePackDetail {
  ConformancePackName: string;
  ConformancePackArn: string;
  ConformancePackId: string;
  DeliveryS3Bucket?: string | null;
  DeliveryS3KeyPrefix?: string | null;
  ConformancePackInputParameters?: ConformancePackInputParameter[] | null;
  LastUpdateRequestedTime?: Date | number | null;
  CreatedBy?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface DeliveryChannelStatus {
  name?: string | null;
  configSnapshotDeliveryInfo?: ConfigExportDeliveryInfo | null;
  configHistoryDeliveryInfo?: ConfigExportDeliveryInfo | null;
  configStreamDeliveryInfo?: ConfigStreamDeliveryInfo | null;
}

// refs: 2 - tags: output, named, interface
export interface ConfigExportDeliveryInfo {
  lastStatus?: DeliveryStatus | null;
  lastErrorCode?: string | null;
  lastErrorMessage?: string | null;
  lastAttemptTime?: Date | number | null;
  lastSuccessfulTime?: Date | number | null;
  nextDeliveryTime?: Date | number | null;
}

// refs: 3 - tags: output, named, enum
export type DeliveryStatus =
| "Success"
| "Failure"
| "Not_Applicable"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ConfigStreamDeliveryInfo {
  lastStatus?: DeliveryStatus | null;
  lastErrorCode?: string | null;
  lastErrorMessage?: string | null;
  lastStatusChangeTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface OrganizationConfigRuleStatus {
  OrganizationConfigRuleName: string;
  OrganizationRuleStatus: OrganizationRuleStatus;
  ErrorCode?: string | null;
  ErrorMessage?: string | null;
  LastUpdateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type OrganizationRuleStatus =
| "CREATE_SUCCESSFUL"
| "CREATE_IN_PROGRESS"
| "CREATE_FAILED"
| "DELETE_SUCCESSFUL"
| "DELETE_FAILED"
| "DELETE_IN_PROGRESS"
| "UPDATE_SUCCESSFUL"
| "UPDATE_IN_PROGRESS"
| "UPDATE_FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface OrganizationConfigRule {
  OrganizationConfigRuleName: string;
  OrganizationConfigRuleArn: string;
  OrganizationManagedRuleMetadata?: OrganizationManagedRuleMetadata | null;
  OrganizationCustomRuleMetadata?: OrganizationCustomRuleMetadata | null;
  ExcludedAccounts?: string[] | null;
  LastUpdateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface OrganizationConformancePackStatus {
  OrganizationConformancePackName: string;
  Status: OrganizationResourceStatus;
  ErrorCode?: string | null;
  ErrorMessage?: string | null;
  LastUpdateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type OrganizationResourceStatus =
| "CREATE_SUCCESSFUL"
| "CREATE_IN_PROGRESS"
| "CREATE_FAILED"
| "DELETE_SUCCESSFUL"
| "DELETE_FAILED"
| "DELETE_IN_PROGRESS"
| "UPDATE_SUCCESSFUL"
| "UPDATE_IN_PROGRESS"
| "UPDATE_FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface OrganizationConformancePack {
  OrganizationConformancePackName: string;
  OrganizationConformancePackArn: string;
  DeliveryS3Bucket?: string | null;
  DeliveryS3KeyPrefix?: string | null;
  ConformancePackInputParameters?: ConformancePackInputParameter[] | null;
  ExcludedAccounts?: string[] | null;
  LastUpdateTime: Date | number;
}

// refs: 1 - tags: output, named, interface
export interface PendingAggregationRequest {
  RequesterAccountId?: string | null;
  RequesterAwsRegion?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface RemediationException {
  ConfigRuleName: string;
  ResourceType: string;
  ResourceId: string;
  Message?: string | null;
  ExpirationTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface RemediationExecutionStatus {
  ResourceKey?: ResourceKey | null;
  State?: RemediationExecutionState | null;
  StepDetails?: RemediationExecutionStep[] | null;
  InvocationTime?: Date | number | null;
  LastUpdatedTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type RemediationExecutionState =
| "QUEUED"
| "IN_PROGRESS"
| "SUCCEEDED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface RemediationExecutionStep {
  Name?: string | null;
  State?: RemediationExecutionStepState | null;
  ErrorMessage?: string | null;
  StartTime?: Date | number | null;
  StopTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type RemediationExecutionStepState =
| "SUCCEEDED"
| "PENDING"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface RetentionConfiguration {
  Name: string;
  RetentionPeriodInDays: number;
}

// refs: 1 - tags: output, named, interface
export interface AggregateEvaluationResult {
  EvaluationResultIdentifier?: EvaluationResultIdentifier | null;
  ComplianceType?: ComplianceType | null;
  ResultRecordedTime?: Date | number | null;
  ConfigRuleInvokedTime?: Date | number | null;
  Annotation?: string | null;
  AccountId?: string | null;
  AwsRegion?: string | null;
}

// refs: 4 - tags: output, named, interface
export interface EvaluationResultIdentifier {
  EvaluationResultQualifier?: EvaluationResultQualifier | null;
  OrderingTimestamp?: Date | number | null;
}

// refs: 4 - tags: output, named, interface
export interface EvaluationResultQualifier {
  ConfigRuleName?: string | null;
  ResourceType?: string | null;
  ResourceId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface AggregateComplianceCount {
  GroupName?: string | null;
  ComplianceSummary?: ComplianceSummary | null;
}

// refs: 3 - tags: output, named, interface
export interface ComplianceSummary {
  CompliantResourceCount?: ComplianceContributorCount | null;
  NonCompliantResourceCount?: ComplianceContributorCount | null;
  ComplianceSummaryTimestamp?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface GroupedResourceCount {
  GroupName: string;
  ResourceCount: number;
}

// refs: 2 - tags: output, named, interface
export interface ConfigurationItem {
  version?: string | null;
  accountId?: string | null;
  configurationItemCaptureTime?: Date | number | null;
  configurationItemStatus?: ConfigurationItemStatus | null;
  configurationStateId?: string | null;
  configurationItemMD5Hash?: string | null;
  arn?: string | null;
  resourceType?: ResourceType | null;
  resourceId?: string | null;
  resourceName?: string | null;
  awsRegion?: string | null;
  availabilityZone?: string | null;
  resourceCreationTime?: Date | number | null;
  tags?: { [key: string]: string | null | undefined } | null;
  relatedEvents?: string[] | null;
  relationships?: Relationship[] | null;
  configuration?: string | null;
  supplementaryConfiguration?: { [key: string]: string | null | undefined } | null;
}

// refs: 2 - tags: output, named, interface
export interface Relationship {
  resourceType?: ResourceType | null;
  resourceId?: string | null;
  resourceName?: string | null;
  relationshipName?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface EvaluationResult {
  EvaluationResultIdentifier?: EvaluationResultIdentifier | null;
  ComplianceType?: ComplianceType | null;
  ResultRecordedTime?: Date | number | null;
  ConfigRuleInvokedTime?: Date | number | null;
  Annotation?: string | null;
  ResultToken?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ComplianceSummaryByResourceType {
  ResourceType?: string | null;
  ComplianceSummary?: ComplianceSummary | null;
}

// refs: 1 - tags: output, named, interface
export interface ConformancePackEvaluationResult {
  ComplianceType: ConformancePackComplianceType;
  EvaluationResultIdentifier: EvaluationResultIdentifier;
  ConfigRuleInvokedTime: Date | number;
  ResultRecordedTime: Date | number;
  Annotation?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ConformancePackComplianceSummary {
  ConformancePackName: string;
  ConformancePackComplianceStatus: ConformancePackComplianceType;
}

// refs: 1 - tags: output, named, interface
export interface ResourceCount {
  resourceType?: ResourceType | null;
  count?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface MemberAccountStatus {
  AccountId: string;
  ConfigRuleName: string;
  MemberAccountRuleStatus: MemberAccountRuleStatus;
  ErrorCode?: string | null;
  ErrorMessage?: string | null;
  LastUpdateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface OrganizationConformancePackDetailedStatus {
  AccountId: string;
  ConformancePackName: string;
  Status: OrganizationResourceDetailedStatus;
  ErrorCode?: string | null;
  ErrorMessage?: string | null;
  LastUpdateTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface ResourceIdentifier {
  resourceType?: ResourceType | null;
  resourceId?: string | null;
  resourceName?: string | null;
  resourceDeletionTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface StoredQueryMetadata {
  QueryId: string;
  QueryArn: string;
  QueryName: string;
  Description?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface FailedRemediationBatch {
  FailureMessage?: string | null;
  FailedItems?: RemediationConfiguration[] | null;
}

// refs: 1 - tags: output, named, interface
export interface FailedRemediationExceptionBatch {
  FailureMessage?: string | null;
  FailedItems?: RemediationException[] | null;
}

// refs: 2 - tags: output, named, interface
export interface QueryInfo {
  SelectFields?: FieldInfo[] | null;
}

// refs: 2 - tags: output, named, interface
export interface FieldInfo {
  Name?: string | null;
}
