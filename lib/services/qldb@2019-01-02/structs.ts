// Autogenerated API structures for: Amazon QLDB

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface CancelJournalKinesisStreamRequest {
  LedgerName: string;
  StreamId: string;
}

// refs: 1 - tags: named, input
export interface CreateLedgerRequest {
  Name: string;
  Tags?: { [key: string]: string | null | undefined } | null;
  PermissionsMode: PermissionsMode;
  DeletionProtection?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeleteLedgerRequest {
  Name: string;
}

// refs: 1 - tags: named, input
export interface DescribeJournalKinesisStreamRequest {
  LedgerName: string;
  StreamId: string;
}

// refs: 1 - tags: named, input
export interface DescribeJournalS3ExportRequest {
  Name: string;
  ExportId: string;
}

// refs: 1 - tags: named, input
export interface DescribeLedgerRequest {
  Name: string;
}

// refs: 1 - tags: named, input
export interface ExportJournalToS3Request {
  Name: string;
  InclusiveStartTime: Date | number;
  ExclusiveEndTime: Date | number;
  S3ExportConfiguration: S3ExportConfiguration;
  RoleArn: string;
}

// refs: 1 - tags: named, input
export interface GetBlockRequest {
  Name: string;
  BlockAddress: ValueHolder;
  DigestTipAddress?: ValueHolder | null;
}

// refs: 1 - tags: named, input
export interface GetDigestRequest {
  Name: string;
}

// refs: 1 - tags: named, input
export interface GetRevisionRequest {
  Name: string;
  BlockAddress: ValueHolder;
  DocumentId: string;
  DigestTipAddress?: ValueHolder | null;
}

// refs: 1 - tags: named, input
export interface ListJournalKinesisStreamsForLedgerRequest {
  LedgerName: string;
  MaxResults?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListJournalS3ExportsRequest {
  MaxResults?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListJournalS3ExportsForLedgerRequest {
  Name: string;
  MaxResults?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListLedgersRequest {
  MaxResults?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  ResourceArn: string;
}

// refs: 1 - tags: named, input
export interface StreamJournalToKinesisRequest {
  LedgerName: string;
  RoleArn: string;
  Tags?: { [key: string]: string | null | undefined } | null;
  InclusiveStartTime: Date | number;
  ExclusiveEndTime?: Date | number | null;
  KinesisConfiguration: KinesisConfiguration;
  StreamName: string;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  ResourceArn: string;
  Tags: { [key: string]: string | null | undefined };
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  ResourceArn: string;
  TagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateLedgerRequest {
  Name: string;
  DeletionProtection?: boolean | null;
}

// refs: 1 - tags: named, output
export interface CancelJournalKinesisStreamResponse {
  StreamId?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateLedgerResponse {
  Name?: string | null;
  Arn?: string | null;
  State?: LedgerState | null;
  CreationDateTime?: Date | number | null;
  DeletionProtection?: boolean | null;
}

// refs: 1 - tags: named, output
export interface DescribeJournalKinesisStreamResponse {
  Stream?: JournalKinesisStreamDescription | null;
}

// refs: 1 - tags: named, output
export interface DescribeJournalS3ExportResponse {
  ExportDescription: JournalS3ExportDescription;
}

// refs: 1 - tags: named, output
export interface DescribeLedgerResponse {
  Name?: string | null;
  Arn?: string | null;
  State?: LedgerState | null;
  CreationDateTime?: Date | number | null;
  DeletionProtection?: boolean | null;
}

// refs: 1 - tags: named, output
export interface ExportJournalToS3Response {
  ExportId: string;
}

// refs: 1 - tags: named, output
export interface GetBlockResponse {
  Block: ValueHolder;
  Proof?: ValueHolder | null;
}

// refs: 1 - tags: named, output
export interface GetDigestResponse {
  Digest: Uint8Array | string;
  DigestTipAddress: ValueHolder;
}

// refs: 1 - tags: named, output
export interface GetRevisionResponse {
  Proof?: ValueHolder | null;
  Revision: ValueHolder;
}

// refs: 1 - tags: named, output
export interface ListJournalKinesisStreamsForLedgerResponse {
  Streams?: JournalKinesisStreamDescription[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListJournalS3ExportsResponse {
  JournalS3Exports?: JournalS3ExportDescription[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListJournalS3ExportsForLedgerResponse {
  JournalS3Exports?: JournalS3ExportDescription[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListLedgersResponse {
  Ledgers?: LedgerSummary[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  Tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, output
export interface StreamJournalToKinesisResponse {
  StreamId?: string | null;
}

// refs: 1 - tags: named, output
export interface UpdateLedgerResponse {
  Name?: string | null;
  Arn?: string | null;
  State?: LedgerState | null;
  CreationDateTime?: Date | number | null;
  DeletionProtection?: boolean | null;
}

// refs: 1 - tags: input, named, enum
export type PermissionsMode =
| "ALLOW_ALL"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface S3ExportConfiguration {
  Bucket: string;
  Prefix: string;
  EncryptionConfiguration: S3EncryptionConfiguration;
}

// refs: 4 - tags: input, named, interface, output
export interface S3EncryptionConfiguration {
  ObjectEncryptionType: S3ObjectEncryptionType;
  KmsKeyArn?: string | null;
}

// refs: 4 - tags: input, named, enum, output
export type S3ObjectEncryptionType =
| "SSE_KMS"
| "SSE_S3"
| "NO_ENCRYPTION"
| cmnP.UnexpectedEnumValue;

// refs: 9 - tags: input, named, interface, output
export interface ValueHolder {
  IonText?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface KinesisConfiguration {
  StreamArn: string;
  AggregationEnabled?: boolean | null;
}

// refs: 4 - tags: output, named, enum
export type LedgerState =
| "CREATING"
| "ACTIVE"
| "DELETING"
| "DELETED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface JournalKinesisStreamDescription {
  LedgerName: string;
  CreationTime?: Date | number | null;
  InclusiveStartTime?: Date | number | null;
  ExclusiveEndTime?: Date | number | null;
  RoleArn: string;
  StreamId: string;
  Arn?: string | null;
  Status: StreamStatus;
  KinesisConfiguration: KinesisConfiguration;
  ErrorCause?: ErrorCause | null;
  StreamName: string;
}

// refs: 2 - tags: output, named, enum
export type StreamStatus =
| "ACTIVE"
| "COMPLETED"
| "CANCELED"
| "FAILED"
| "IMPAIRED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type ErrorCause =
| "KINESIS_STREAM_NOT_FOUND"
| "IAM_PERMISSION_REVOKED"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface JournalS3ExportDescription {
  LedgerName: string;
  ExportId: string;
  ExportCreationTime: Date | number;
  Status: ExportStatus;
  InclusiveStartTime: Date | number;
  ExclusiveEndTime: Date | number;
  S3ExportConfiguration: S3ExportConfiguration;
  RoleArn: string;
}

// refs: 3 - tags: output, named, enum
export type ExportStatus =
| "IN_PROGRESS"
| "COMPLETED"
| "CANCELLED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface LedgerSummary {
  Name?: string | null;
  State?: LedgerState | null;
  CreationDateTime?: Date | number | null;
}
