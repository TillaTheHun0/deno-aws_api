// Autogenerated API structures for: Amazon Lightsail

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface AllocateStaticIpRequest {
  staticIpName: string;
}

// refs: 1 - tags: named, input
export interface AttachCertificateToDistributionRequest {
  distributionName: string;
  certificateName: string;
}

// refs: 1 - tags: named, input
export interface AttachDiskRequest {
  diskName: string;
  instanceName: string;
  diskPath: string;
}

// refs: 1 - tags: named, input
export interface AttachInstancesToLoadBalancerRequest {
  loadBalancerName: string;
  instanceNames: string[];
}

// refs: 1 - tags: named, input
export interface AttachLoadBalancerTlsCertificateRequest {
  loadBalancerName: string;
  certificateName: string;
}

// refs: 1 - tags: named, input
export interface AttachStaticIpRequest {
  staticIpName: string;
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface CloseInstancePublicPortsRequest {
  portInfo: PortInfo;
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface CopySnapshotRequest {
  sourceSnapshotName?: string | null;
  sourceResourceName?: string | null;
  restoreDate?: string | null;
  useLatestRestorableAutoSnapshot?: boolean | null;
  targetSnapshotName: string;
  sourceRegion: RegionName;
}

// refs: 1 - tags: named, input
export interface CreateCertificateRequest {
  certificateName: string;
  domainName: string;
  subjectAlternativeNames?: string[] | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateCloudFormationStackRequest {
  instances: InstanceEntry[];
}

// refs: 1 - tags: named, input
export interface CreateContactMethodRequest {
  protocol: ContactProtocol;
  contactEndpoint: string;
}

// refs: 1 - tags: named, input
export interface CreateContainerServiceRequest {
  serviceName: string;
  power: ContainerServicePowerName;
  scale: number;
  tags?: Tag[] | null;
  publicDomainNames?: { [key: string]: string[] | null | undefined } | null;
  deployment?: ContainerServiceDeploymentRequest | null;
}

// refs: 1 - tags: named, input
export interface CreateContainerServiceDeploymentRequest {
  serviceName: string;
  containers?: { [key: string]: Container | null | undefined } | null;
  publicEndpoint?: EndpointRequest | null;
}

// refs: 1 - tags: named, input
export interface CreateDiskRequest {
  diskName: string;
  availabilityZone: string;
  sizeInGb: number;
  tags?: Tag[] | null;
  addOns?: AddOnRequest[] | null;
}

// refs: 1 - tags: named, input
export interface CreateDiskFromSnapshotRequest {
  diskName: string;
  diskSnapshotName?: string | null;
  availabilityZone: string;
  sizeInGb: number;
  tags?: Tag[] | null;
  addOns?: AddOnRequest[] | null;
  sourceDiskName?: string | null;
  restoreDate?: string | null;
  useLatestRestorableAutoSnapshot?: boolean | null;
}

// refs: 1 - tags: named, input
export interface CreateDiskSnapshotRequest {
  diskName?: string | null;
  diskSnapshotName: string;
  instanceName?: string | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateDistributionRequest {
  distributionName: string;
  origin: InputOrigin;
  defaultCacheBehavior: CacheBehavior;
  cacheBehaviorSettings?: CacheSettings | null;
  cacheBehaviors?: CacheBehaviorPerPath[] | null;
  bundleId: string;
  ipAddressType?: IpAddressType | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateDomainRequest {
  domainName: string;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateDomainEntryRequest {
  domainName: string;
  domainEntry: DomainEntry;
}

// refs: 1 - tags: named, input
export interface CreateInstanceSnapshotRequest {
  instanceSnapshotName: string;
  instanceName: string;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateInstancesRequest {
  instanceNames: string[];
  availabilityZone: string;
  customImageName?: string | null;
  blueprintId: string;
  bundleId: string;
  userData?: string | null;
  keyPairName?: string | null;
  tags?: Tag[] | null;
  addOns?: AddOnRequest[] | null;
  ipAddressType?: IpAddressType | null;
}

// refs: 1 - tags: named, input
export interface CreateInstancesFromSnapshotRequest {
  instanceNames: string[];
  attachedDiskMapping?: { [key: string]: DiskMap[] | null | undefined } | null;
  availabilityZone: string;
  instanceSnapshotName?: string | null;
  bundleId: string;
  userData?: string | null;
  keyPairName?: string | null;
  tags?: Tag[] | null;
  addOns?: AddOnRequest[] | null;
  ipAddressType?: IpAddressType | null;
  sourceInstanceName?: string | null;
  restoreDate?: string | null;
  useLatestRestorableAutoSnapshot?: boolean | null;
}

// refs: 1 - tags: named, input
export interface CreateKeyPairRequest {
  keyPairName: string;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateLoadBalancerRequest {
  loadBalancerName: string;
  instancePort: number;
  healthCheckPath?: string | null;
  certificateName?: string | null;
  certificateDomainName?: string | null;
  certificateAlternativeNames?: string[] | null;
  tags?: Tag[] | null;
  ipAddressType?: IpAddressType | null;
}

// refs: 1 - tags: named, input
export interface CreateLoadBalancerTlsCertificateRequest {
  loadBalancerName: string;
  certificateName: string;
  certificateDomainName: string;
  certificateAlternativeNames?: string[] | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateRelationalDatabaseRequest {
  relationalDatabaseName: string;
  availabilityZone?: string | null;
  relationalDatabaseBlueprintId: string;
  relationalDatabaseBundleId: string;
  masterDatabaseName: string;
  masterUsername: string;
  masterUserPassword?: string | null;
  preferredBackupWindow?: string | null;
  preferredMaintenanceWindow?: string | null;
  publiclyAccessible?: boolean | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateRelationalDatabaseFromSnapshotRequest {
  relationalDatabaseName: string;
  availabilityZone?: string | null;
  publiclyAccessible?: boolean | null;
  relationalDatabaseSnapshotName?: string | null;
  relationalDatabaseBundleId?: string | null;
  sourceRelationalDatabaseName?: string | null;
  restoreTime?: Date | number | null;
  useLatestRestorableTime?: boolean | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateRelationalDatabaseSnapshotRequest {
  relationalDatabaseName: string;
  relationalDatabaseSnapshotName: string;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface DeleteAlarmRequest {
  alarmName: string;
}

// refs: 1 - tags: named, input
export interface DeleteAutoSnapshotRequest {
  resourceName: string;
  date: string;
}

// refs: 1 - tags: named, input
export interface DeleteCertificateRequest {
  certificateName: string;
}

// refs: 1 - tags: named, input
export interface DeleteContactMethodRequest {
  protocol: ContactProtocol;
}

// refs: 1 - tags: named, input
export interface DeleteContainerImageRequest {
  serviceName: string;
  image: string;
}

// refs: 1 - tags: named, input
export interface DeleteContainerServiceRequest {
  serviceName: string;
}

// refs: 1 - tags: named, input
export interface DeleteDiskRequest {
  diskName: string;
  forceDeleteAddOns?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeleteDiskSnapshotRequest {
  diskSnapshotName: string;
}

// refs: 1 - tags: named, input
export interface DeleteDistributionRequest {
  distributionName?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteDomainRequest {
  domainName: string;
}

// refs: 1 - tags: named, input
export interface DeleteDomainEntryRequest {
  domainName: string;
  domainEntry: DomainEntry;
}

// refs: 1 - tags: named, input
export interface DeleteInstanceRequest {
  instanceName: string;
  forceDeleteAddOns?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeleteInstanceSnapshotRequest {
  instanceSnapshotName: string;
}

// refs: 1 - tags: named, input
export interface DeleteKeyPairRequest {
  keyPairName: string;
}

// refs: 1 - tags: named, input
export interface DeleteKnownHostKeysRequest {
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface DeleteLoadBalancerRequest {
  loadBalancerName: string;
}

// refs: 1 - tags: named, input
export interface DeleteLoadBalancerTlsCertificateRequest {
  loadBalancerName: string;
  certificateName: string;
  force?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeleteRelationalDatabaseRequest {
  relationalDatabaseName: string;
  skipFinalSnapshot?: boolean | null;
  finalRelationalDatabaseSnapshotName?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteRelationalDatabaseSnapshotRequest {
  relationalDatabaseSnapshotName: string;
}

// refs: 1 - tags: named, input
export interface DetachCertificateFromDistributionRequest {
  distributionName: string;
}

// refs: 1 - tags: named, input
export interface DetachDiskRequest {
  diskName: string;
}

// refs: 1 - tags: named, input
export interface DetachInstancesFromLoadBalancerRequest {
  loadBalancerName: string;
  instanceNames: string[];
}

// refs: 1 - tags: named, input
export interface DetachStaticIpRequest {
  staticIpName: string;
}

// refs: 1 - tags: named, input
export interface DisableAddOnRequest {
  addOnType: AddOnType;
  resourceName: string;
}

// refs: 1 - tags: named, input
export interface EnableAddOnRequest {
  resourceName: string;
  addOnRequest: AddOnRequest;
}

// refs: 1 - tags: named, input
export interface ExportSnapshotRequest {
  sourceSnapshotName: string;
}

// refs: 1 - tags: named, input
export interface GetActiveNamesRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetAlarmsRequest {
  alarmName?: string | null;
  pageToken?: string | null;
  monitoredResourceName?: string | null;
}

// refs: 1 - tags: named, input
export interface GetAutoSnapshotsRequest {
  resourceName: string;
}

// refs: 1 - tags: named, input
export interface GetBlueprintsRequest {
  includeInactive?: boolean | null;
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetBundlesRequest {
  includeInactive?: boolean | null;
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetCertificatesRequest {
  certificateStatuses?: CertificateStatus[] | null;
  includeCertificateDetails?: boolean | null;
  certificateName?: string | null;
}

// refs: 1 - tags: named, input
export interface GetCloudFormationStackRecordsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetContactMethodsRequest {
  protocols?: ContactProtocol[] | null;
}

// refs: 1 - tags: named, input
export interface GetContainerImagesRequest {
  serviceName: string;
}

// refs: 1 - tags: named, input
export interface GetContainerLogRequest {
  serviceName: string;
  containerName: string;
  startTime?: Date | number | null;
  endTime?: Date | number | null;
  filterPattern?: string | null;
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetContainerServiceDeploymentsRequest {
  serviceName: string;
}

// refs: 1 - tags: named, input
export interface GetContainerServiceMetricDataRequest {
  serviceName: string;
  metricName: ContainerServiceMetricName;
  startTime: Date | number;
  endTime: Date | number;
  period: number;
  statistics: MetricStatistic[];
}

// refs: 1 - tags: named, input
export interface GetContainerServicesRequest {
  serviceName?: string | null;
}

// refs: 1 - tags: named, input
export interface GetDiskRequest {
  diskName: string;
}

// refs: 1 - tags: named, input
export interface GetDiskSnapshotRequest {
  diskSnapshotName: string;
}

// refs: 1 - tags: named, input
export interface GetDiskSnapshotsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetDisksRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetDistributionLatestCacheResetRequest {
  distributionName?: string | null;
}

// refs: 1 - tags: named, input
export interface GetDistributionMetricDataRequest {
  distributionName: string;
  metricName: DistributionMetricName;
  startTime: Date | number;
  endTime: Date | number;
  period: number;
  unit: MetricUnit;
  statistics: MetricStatistic[];
}

// refs: 1 - tags: named, input
export interface GetDistributionsRequest {
  distributionName?: string | null;
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetDomainRequest {
  domainName: string;
}

// refs: 1 - tags: named, input
export interface GetDomainsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetExportSnapshotRecordsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetInstanceRequest {
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface GetInstanceAccessDetailsRequest {
  instanceName: string;
  protocol?: InstanceAccessProtocol | null;
}

// refs: 1 - tags: named, input
export interface GetInstanceMetricDataRequest {
  instanceName: string;
  metricName: InstanceMetricName;
  period: number;
  startTime: Date | number;
  endTime: Date | number;
  unit: MetricUnit;
  statistics: MetricStatistic[];
}

// refs: 1 - tags: named, input
export interface GetInstancePortStatesRequest {
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface GetInstanceSnapshotRequest {
  instanceSnapshotName: string;
}

// refs: 1 - tags: named, input
export interface GetInstanceSnapshotsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetInstanceStateRequest {
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface GetInstancesRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetKeyPairRequest {
  keyPairName: string;
}

// refs: 1 - tags: named, input
export interface GetKeyPairsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetLoadBalancerRequest {
  loadBalancerName: string;
}

// refs: 1 - tags: named, input
export interface GetLoadBalancerMetricDataRequest {
  loadBalancerName: string;
  metricName: LoadBalancerMetricName;
  period: number;
  startTime: Date | number;
  endTime: Date | number;
  unit: MetricUnit;
  statistics: MetricStatistic[];
}

// refs: 1 - tags: named, input
export interface GetLoadBalancerTlsCertificatesRequest {
  loadBalancerName: string;
}

// refs: 1 - tags: named, input
export interface GetLoadBalancersRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetOperationRequest {
  operationId: string;
}

// refs: 1 - tags: named, input
export interface GetOperationsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetOperationsForResourceRequest {
  resourceName: string;
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetRegionsRequest {
  includeAvailabilityZones?: boolean | null;
  includeRelationalDatabaseAvailabilityZones?: boolean | null;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseRequest {
  relationalDatabaseName: string;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseBlueprintsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseBundlesRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseEventsRequest {
  relationalDatabaseName: string;
  durationInMinutes?: number | null;
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseLogEventsRequest {
  relationalDatabaseName: string;
  logStreamName: string;
  startTime?: Date | number | null;
  endTime?: Date | number | null;
  startFromHead?: boolean | null;
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseLogStreamsRequest {
  relationalDatabaseName: string;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseMasterUserPasswordRequest {
  relationalDatabaseName: string;
  passwordVersion?: RelationalDatabasePasswordVersion | null;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseMetricDataRequest {
  relationalDatabaseName: string;
  metricName: RelationalDatabaseMetricName;
  period: number;
  startTime: Date | number;
  endTime: Date | number;
  unit: MetricUnit;
  statistics: MetricStatistic[];
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseParametersRequest {
  relationalDatabaseName: string;
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseSnapshotRequest {
  relationalDatabaseSnapshotName: string;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabaseSnapshotsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetRelationalDatabasesRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetStaticIpRequest {
  staticIpName: string;
}

// refs: 1 - tags: named, input
export interface GetStaticIpsRequest {
  pageToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ImportKeyPairRequest {
  keyPairName: string;
  publicKeyBase64: string;
}

// refs: 1 - tags: named, input
export interface OpenInstancePublicPortsRequest {
  portInfo: PortInfo;
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface PutAlarmRequest {
  alarmName: string;
  metricName: MetricName;
  monitoredResourceName: string;
  comparisonOperator: ComparisonOperator;
  threshold: number;
  evaluationPeriods: number;
  datapointsToAlarm?: number | null;
  treatMissingData?: TreatMissingData | null;
  contactProtocols?: ContactProtocol[] | null;
  notificationTriggers?: AlarmState[] | null;
  notificationEnabled?: boolean | null;
}

// refs: 1 - tags: named, input
export interface PutInstancePublicPortsRequest {
  portInfos: PortInfo[];
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface RebootInstanceRequest {
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface RebootRelationalDatabaseRequest {
  relationalDatabaseName: string;
}

// refs: 1 - tags: named, input
export interface RegisterContainerImageRequest {
  serviceName: string;
  label: string;
  digest: string;
}

// refs: 1 - tags: named, input
export interface ReleaseStaticIpRequest {
  staticIpName: string;
}

// refs: 1 - tags: named, input
export interface ResetDistributionCacheRequest {
  distributionName?: string | null;
}

// refs: 1 - tags: named, input
export interface SendContactMethodVerificationRequest {
  protocol: ContactMethodVerificationProtocol;
}

// refs: 1 - tags: named, input
export interface SetIpAddressTypeRequest {
  resourceType: ResourceType;
  resourceName: string;
  ipAddressType: IpAddressType;
}

// refs: 1 - tags: named, input
export interface StartInstanceRequest {
  instanceName: string;
}

// refs: 1 - tags: named, input
export interface StartRelationalDatabaseRequest {
  relationalDatabaseName: string;
}

// refs: 1 - tags: named, input
export interface StopInstanceRequest {
  instanceName: string;
  force?: boolean | null;
}

// refs: 1 - tags: named, input
export interface StopRelationalDatabaseRequest {
  relationalDatabaseName: string;
  relationalDatabaseSnapshotName?: string | null;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceName: string;
  resourceArn?: string | null;
  tags: Tag[];
}

// refs: 1 - tags: named, input
export interface TestAlarmRequest {
  alarmName: string;
  state: AlarmState;
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceName: string;
  resourceArn?: string | null;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateContainerServiceRequest {
  serviceName: string;
  power?: ContainerServicePowerName | null;
  scale?: number | null;
  isDisabled?: boolean | null;
  publicDomainNames?: { [key: string]: string[] | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface UpdateDistributionRequest {
  distributionName: string;
  origin?: InputOrigin | null;
  defaultCacheBehavior?: CacheBehavior | null;
  cacheBehaviorSettings?: CacheSettings | null;
  cacheBehaviors?: CacheBehaviorPerPath[] | null;
  isEnabled?: boolean | null;
}

// refs: 1 - tags: named, input
export interface UpdateDistributionBundleRequest {
  distributionName?: string | null;
  bundleId?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateDomainEntryRequest {
  domainName: string;
  domainEntry: DomainEntry;
}

// refs: 1 - tags: named, input
export interface UpdateLoadBalancerAttributeRequest {
  loadBalancerName: string;
  attributeName: LoadBalancerAttributeName;
  attributeValue: string;
}

// refs: 1 - tags: named, input
export interface UpdateRelationalDatabaseRequest {
  relationalDatabaseName: string;
  masterUserPassword?: string | null;
  rotateMasterUserPassword?: boolean | null;
  preferredBackupWindow?: string | null;
  preferredMaintenanceWindow?: string | null;
  enableBackupRetention?: boolean | null;
  disableBackupRetention?: boolean | null;
  publiclyAccessible?: boolean | null;
  applyImmediately?: boolean | null;
  caCertificateIdentifier?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateRelationalDatabaseParametersRequest {
  relationalDatabaseName: string;
  parameters: RelationalDatabaseParameter[];
}

// refs: 1 - tags: named, output
export interface AllocateStaticIpResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface AttachCertificateToDistributionResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface AttachDiskResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface AttachInstancesToLoadBalancerResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface AttachLoadBalancerTlsCertificateResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface AttachStaticIpResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CloseInstancePublicPortsResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface CopySnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateCertificateResult {
  certificate?: CertificateSummary | null;
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateCloudFormationStackResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateContactMethodResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateContainerServiceResult {
  containerService?: ContainerService | null;
}

// refs: 1 - tags: named, output
export interface CreateContainerServiceDeploymentResult {
  containerService?: ContainerService | null;
}

// refs: 1 - tags: named, output
export interface CreateContainerServiceRegistryLoginResult {
  registryLogin?: ContainerServiceRegistryLogin | null;
}

// refs: 1 - tags: named, output
export interface CreateDiskResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateDiskFromSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateDiskSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateDistributionResult {
  distribution?: LightsailDistribution | null;
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface CreateDomainResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface CreateDomainEntryResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface CreateInstanceSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateInstancesResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateInstancesFromSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateKeyPairResult {
  keyPair?: KeyPair | null;
  publicKeyBase64?: string | null;
  privateKeyBase64?: string | null;
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface CreateLoadBalancerResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateLoadBalancerTlsCertificateResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateRelationalDatabaseResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateRelationalDatabaseFromSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface CreateRelationalDatabaseSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteAlarmResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteAutoSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteCertificateResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteContactMethodResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteDiskResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteDiskSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteDistributionResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface DeleteDomainResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface DeleteDomainEntryResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface DeleteInstanceResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteInstanceSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteKeyPairResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface DeleteKnownHostKeysResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteLoadBalancerResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteLoadBalancerTlsCertificateResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteRelationalDatabaseResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteRelationalDatabaseSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DetachCertificateFromDistributionResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface DetachDiskResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DetachInstancesFromLoadBalancerResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DetachStaticIpResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DisableAddOnResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface DownloadDefaultKeyPairResult {
  publicKeyBase64?: string | null;
  privateKeyBase64?: string | null;
}

// refs: 1 - tags: named, output
export interface EnableAddOnResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface ExportSnapshotResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface GetActiveNamesResult {
  activeNames?: string[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAlarmsResult {
  alarms?: Alarm[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAutoSnapshotsResult {
  resourceName?: string | null;
  resourceType?: ResourceType | null;
  autoSnapshots?: AutoSnapshotDetails[] | null;
}

// refs: 1 - tags: named, output
export interface GetBlueprintsResult {
  blueprints?: Blueprint[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetBundlesResult {
  bundles?: Bundle[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetCertificatesResult {
  certificates?: CertificateSummary[] | null;
}

// refs: 1 - tags: named, output
export interface GetCloudFormationStackRecordsResult {
  cloudFormationStackRecords?: CloudFormationStackRecord[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetContactMethodsResult {
  contactMethods?: ContactMethod[] | null;
}

// refs: 1 - tags: named, output
export interface GetContainerAPIMetadataResult {
  metadata?: ({ [key: string]: string | null | undefined })[] | null;
}

// refs: 1 - tags: named, output
export interface GetContainerImagesResult {
  containerImages?: ContainerImage[] | null;
}

// refs: 1 - tags: named, output
export interface GetContainerLogResult {
  logEvents?: ContainerServiceLogEvent[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetContainerServiceDeploymentsResult {
  deployments?: ContainerServiceDeployment[] | null;
}

// refs: 1 - tags: named, output
export interface GetContainerServiceMetricDataResult {
  metricName?: ContainerServiceMetricName | null;
  metricData?: MetricDatapoint[] | null;
}

// refs: 1 - tags: named, output
export interface GetContainerServicePowersResult {
  powers?: ContainerServicePower[] | null;
}

// refs: 1 - tags: named, output
export interface ContainerServicesListResult {
  containerServices?: ContainerService[] | null;
}

// refs: 1 - tags: named, output
export interface GetDiskResult {
  disk?: Disk | null;
}

// refs: 1 - tags: named, output
export interface GetDiskSnapshotResult {
  diskSnapshot?: DiskSnapshot | null;
}

// refs: 1 - tags: named, output
export interface GetDiskSnapshotsResult {
  diskSnapshots?: DiskSnapshot[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetDisksResult {
  disks?: Disk[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetDistributionBundlesResult {
  bundles?: DistributionBundle[] | null;
}

// refs: 1 - tags: named, output
export interface GetDistributionLatestCacheResetResult {
  status?: string | null;
  createTime?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface GetDistributionMetricDataResult {
  metricName?: DistributionMetricName | null;
  metricData?: MetricDatapoint[] | null;
}

// refs: 1 - tags: named, output
export interface GetDistributionsResult {
  distributions?: LightsailDistribution[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetDomainResult {
  domain?: Domain | null;
}

// refs: 1 - tags: named, output
export interface GetDomainsResult {
  domains?: Domain[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetExportSnapshotRecordsResult {
  exportSnapshotRecords?: ExportSnapshotRecord[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetInstanceResult {
  instance?: Instance | null;
}

// refs: 1 - tags: named, output
export interface GetInstanceAccessDetailsResult {
  accessDetails?: InstanceAccessDetails | null;
}

// refs: 1 - tags: named, output
export interface GetInstanceMetricDataResult {
  metricName?: InstanceMetricName | null;
  metricData?: MetricDatapoint[] | null;
}

// refs: 1 - tags: named, output
export interface GetInstancePortStatesResult {
  portStates?: InstancePortState[] | null;
}

// refs: 1 - tags: named, output
export interface GetInstanceSnapshotResult {
  instanceSnapshot?: InstanceSnapshot | null;
}

// refs: 1 - tags: named, output
export interface GetInstanceSnapshotsResult {
  instanceSnapshots?: InstanceSnapshot[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetInstanceStateResult {
  state?: InstanceState | null;
}

// refs: 1 - tags: named, output
export interface GetInstancesResult {
  instances?: Instance[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetKeyPairResult {
  keyPair?: KeyPair | null;
}

// refs: 1 - tags: named, output
export interface GetKeyPairsResult {
  keyPairs?: KeyPair[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetLoadBalancerResult {
  loadBalancer?: LoadBalancer | null;
}

// refs: 1 - tags: named, output
export interface GetLoadBalancerMetricDataResult {
  metricName?: LoadBalancerMetricName | null;
  metricData?: MetricDatapoint[] | null;
}

// refs: 1 - tags: named, output
export interface GetLoadBalancerTlsCertificatesResult {
  tlsCertificates?: LoadBalancerTlsCertificate[] | null;
}

// refs: 1 - tags: named, output
export interface GetLoadBalancersResult {
  loadBalancers?: LoadBalancer[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetOperationResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface GetOperationsResult {
  operations?: Operation[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetOperationsForResourceResult {
  operations?: Operation[] | null;
  nextPageCount?: string | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRegionsResult {
  regions?: Region[] | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseResult {
  relationalDatabase?: RelationalDatabase | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseBlueprintsResult {
  blueprints?: RelationalDatabaseBlueprint[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseBundlesResult {
  bundles?: RelationalDatabaseBundle[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseEventsResult {
  relationalDatabaseEvents?: RelationalDatabaseEvent[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseLogEventsResult {
  resourceLogEvents?: LogEvent[] | null;
  nextBackwardToken?: string | null;
  nextForwardToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseLogStreamsResult {
  logStreams?: string[] | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseMasterUserPasswordResult {
  masterUserPassword?: string | null;
  createdAt?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseMetricDataResult {
  metricName?: RelationalDatabaseMetricName | null;
  metricData?: MetricDatapoint[] | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseParametersResult {
  parameters?: RelationalDatabaseParameter[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseSnapshotResult {
  relationalDatabaseSnapshot?: RelationalDatabaseSnapshot | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabaseSnapshotsResult {
  relationalDatabaseSnapshots?: RelationalDatabaseSnapshot[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRelationalDatabasesResult {
  relationalDatabases?: RelationalDatabase[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetStaticIpResult {
  staticIp?: StaticIp | null;
}

// refs: 1 - tags: named, output
export interface GetStaticIpsResult {
  staticIps?: StaticIp[] | null;
  nextPageToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ImportKeyPairResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface IsVpcPeeredResult {
  isPeered?: boolean | null;
}

// refs: 1 - tags: named, output
export interface OpenInstancePublicPortsResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface PeerVpcResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface PutAlarmResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface PutInstancePublicPortsResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface RebootInstanceResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface RebootRelationalDatabaseResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface RegisterContainerImageResult {
  containerImage?: ContainerImage | null;
}

// refs: 1 - tags: named, output
export interface ReleaseStaticIpResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface ResetDistributionCacheResult {
  status?: string | null;
  createTime?: Date | number | null;
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface SendContactMethodVerificationResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface SetIpAddressTypeResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface StartInstanceResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface StartRelationalDatabaseResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface StopInstanceResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface StopRelationalDatabaseResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface TagResourceResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface TestAlarmResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface UnpeerVpcResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface UntagResourceResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface UpdateContainerServiceResult {
  containerService?: ContainerService | null;
}

// refs: 1 - tags: named, output
export interface UpdateDistributionResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface UpdateDistributionBundleResult {
  operation?: Operation | null;
}

// refs: 1 - tags: named, output
export interface UpdateDomainEntryResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface UpdateLoadBalancerAttributeResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface UpdateRelationalDatabaseResult {
  operations?: Operation[] | null;
}

// refs: 1 - tags: named, output
export interface UpdateRelationalDatabaseParametersResult {
  operations?: Operation[] | null;
}

// refs: 3 - tags: input, named, interface
export interface PortInfo {
  fromPort?: number | null;
  toPort?: number | null;
  protocol?: NetworkProtocol | null;
  cidrs?: string[] | null;
  ipv6Cidrs?: string[] | null;
  cidrListAliases?: string[] | null;
}

// refs: 6 - tags: input, named, enum, output
export type NetworkProtocol =
| "tcp"
| "all"
| "udp"
| "icmp"
| cmnP.UnexpectedEnumValue;

// refs: 120 - tags: input, named, enum, output
export type RegionName =
| "us-east-1"
| "us-east-2"
| "us-west-1"
| "us-west-2"
| "eu-west-1"
| "eu-west-2"
| "eu-west-3"
| "eu-central-1"
| "ca-central-1"
| "ap-south-1"
| "ap-southeast-1"
| "ap-southeast-2"
| "ap-northeast-1"
| "ap-northeast-2"
| cmnP.UnexpectedEnumValue;

// refs: 51 - tags: input, named, interface, output
export interface Tag {
  key?: string | null;
  value?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface InstanceEntry {
  sourceName: string;
  instanceType: string;
  portInfoSource: PortInfoSourceType;
  userData?: string | null;
  availabilityZone: string;
}

// refs: 1 - tags: input, named, enum
export type PortInfoSourceType =
| "DEFAULT"
| "INSTANCE"
| "NONE"
| "CLOSED"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type ContactProtocol =
| "Email"
| "SMS"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type ContainerServicePowerName =
| "nano"
| "micro"
| "small"
| "medium"
| "large"
| "xlarge"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ContainerServiceDeploymentRequest {
  containers?: { [key: string]: Container | null | undefined } | null;
  publicEndpoint?: EndpointRequest | null;
}

// refs: 11 - tags: input, named, interface, output
export interface Container {
  image?: string | null;
  command?: string[] | null;
  environment?: { [key: string]: string | null | undefined } | null;
  ports?: { [key: string]: ContainerServiceProtocol | null | undefined } | null;
}

// refs: 11 - tags: input, named, enum, output
export type ContainerServiceProtocol =
| "HTTP"
| "HTTPS"
| "TCP"
| "UDP"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface
export interface EndpointRequest {
  containerName: string;
  containerPort: number;
  healthCheck?: ContainerServiceHealthCheckConfig | null;
}

// refs: 11 - tags: input, named, interface, output
export interface ContainerServiceHealthCheckConfig {
  healthyThreshold?: number | null;
  unhealthyThreshold?: number | null;
  timeoutSeconds?: number | null;
  intervalSeconds?: number | null;
  path?: string | null;
  successCodes?: string | null;
}

// refs: 5 - tags: input, named, interface
export interface AddOnRequest {
  addOnType: AddOnType;
  autoSnapshotAddOnRequest?: AutoSnapshotAddOnRequest | null;
}

// refs: 6 - tags: input, named, enum
export type AddOnType =
| "AutoSnapshot"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, interface
export interface AutoSnapshotAddOnRequest {
  snapshotTimeOfDay?: string | null;
}

// refs: 2 - tags: input, named, interface
export interface InputOrigin {
  name?: string | null;
  regionName?: RegionName | null;
  protocolPolicy?: OriginProtocolPolicyEnum | null;
}

// refs: 4 - tags: input, named, enum, output
export type OriginProtocolPolicyEnum =
| "http-only"
| "https-only"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface CacheBehavior {
  behavior?: BehaviorEnum | null;
}

// refs: 8 - tags: input, named, enum, output
export type BehaviorEnum =
| "dont-cache"
| "cache"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface CacheSettings {
  defaultTTL?: number | null;
  minimumTTL?: number | null;
  maximumTTL?: number | null;
  allowedHTTPMethods?: string | null;
  cachedHTTPMethods?: string | null;
  forwardedCookies?: CookieObject | null;
  forwardedHeaders?: HeaderObject | null;
  forwardedQueryStrings?: QueryStringObject | null;
}

// refs: 4 - tags: input, named, interface, output
export interface CookieObject {
  option?: ForwardValues | null;
  cookiesAllowList?: string[] | null;
}

// refs: 8 - tags: input, named, enum, output
export type ForwardValues =
| "none"
| "allow-list"
| "all"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface HeaderObject {
  option?: ForwardValues | null;
  headersAllowList?: HeaderEnum[] | null;
}

// refs: 4 - tags: input, named, enum, output
export type HeaderEnum =
| "Accept"
| "Accept-Charset"
| "Accept-Datetime"
| "Accept-Encoding"
| "Accept-Language"
| "Authorization"
| "CloudFront-Forwarded-Proto"
| "CloudFront-Is-Desktop-Viewer"
| "CloudFront-Is-Mobile-Viewer"
| "CloudFront-Is-SmartTV-Viewer"
| "CloudFront-Is-Tablet-Viewer"
| "CloudFront-Viewer-Country"
| "Host"
| "Origin"
| "Referer"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface QueryStringObject {
  option?: boolean | null;
  queryStringsAllowList?: string[] | null;
}

// refs: 4 - tags: input, named, interface, output
export interface CacheBehaviorPerPath {
  path?: string | null;
  behavior?: BehaviorEnum | null;
}

// refs: 11 - tags: input, named, enum, output
export type IpAddressType =
| "dualstack"
| "ipv4"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, interface, output
export interface DomainEntry {
  id?: string | null;
  name?: string | null;
  target?: string | null;
  isAlias?: boolean | null;
  type?: string | null;
  options?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: input, named, interface
export interface DiskMap {
  originalDiskPath?: string | null;
  newDiskName?: string | null;
}

// refs: 3 - tags: input, named, enum, output
export type CertificateStatus =
| "PENDING_VALIDATION"
| "ISSUED"
| "INACTIVE"
| "EXPIRED"
| "VALIDATION_TIMED_OUT"
| "REVOKED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type ContainerServiceMetricName =
| "CPUUtilization"
| "MemoryUtilization"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type MetricStatistic =
| "Minimum"
| "Maximum"
| "Sum"
| "Average"
| "SampleCount"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type DistributionMetricName =
| "Requests"
| "BytesDownloaded"
| "BytesUploaded"
| "TotalErrorRate"
| "Http4xxErrorRate"
| "Http5xxErrorRate"
| cmnP.UnexpectedEnumValue;

// refs: 10 - tags: input, named, enum, output
export type MetricUnit =
| "Seconds"
| "Microseconds"
| "Milliseconds"
| "Bytes"
| "Kilobytes"
| "Megabytes"
| "Gigabytes"
| "Terabytes"
| "Bits"
| "Kilobits"
| "Megabits"
| "Gigabits"
| "Terabits"
| "Percent"
| "Count"
| "Bytes/Second"
| "Kilobytes/Second"
| "Megabytes/Second"
| "Gigabytes/Second"
| "Terabytes/Second"
| "Bits/Second"
| "Kilobits/Second"
| "Megabits/Second"
| "Gigabits/Second"
| "Terabits/Second"
| "Count/Second"
| "None"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type InstanceAccessProtocol =
| "ssh"
| "rdp"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type InstanceMetricName =
| "CPUUtilization"
| "NetworkIn"
| "NetworkOut"
| "StatusCheckFailed"
| "StatusCheckFailed_Instance"
| "StatusCheckFailed_System"
| "BurstCapacityTime"
| "BurstCapacityPercentage"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type LoadBalancerMetricName =
| "ClientTLSNegotiationErrorCount"
| "HealthyHostCount"
| "UnhealthyHostCount"
| "HTTPCode_LB_4XX_Count"
| "HTTPCode_LB_5XX_Count"
| "HTTPCode_Instance_2XX_Count"
| "HTTPCode_Instance_3XX_Count"
| "HTTPCode_Instance_4XX_Count"
| "HTTPCode_Instance_5XX_Count"
| "InstanceResponseTime"
| "RejectedConnectionCount"
| "RequestCount"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type RelationalDatabasePasswordVersion =
| "CURRENT"
| "PREVIOUS"
| "PENDING"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type RelationalDatabaseMetricName =
| "CPUUtilization"
| "DatabaseConnections"
| "DiskQueueDepth"
| "FreeStorageSpace"
| "NetworkReceiveThroughput"
| "NetworkTransmitThroughput"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type MetricName =
| "CPUUtilization"
| "NetworkIn"
| "NetworkOut"
| "StatusCheckFailed"
| "StatusCheckFailed_Instance"
| "StatusCheckFailed_System"
| "ClientTLSNegotiationErrorCount"
| "HealthyHostCount"
| "UnhealthyHostCount"
| "HTTPCode_LB_4XX_Count"
| "HTTPCode_LB_5XX_Count"
| "HTTPCode_Instance_2XX_Count"
| "HTTPCode_Instance_3XX_Count"
| "HTTPCode_Instance_4XX_Count"
| "HTTPCode_Instance_5XX_Count"
| "InstanceResponseTime"
| "RejectedConnectionCount"
| "RequestCount"
| "DatabaseConnections"
| "DiskQueueDepth"
| "FreeStorageSpace"
| "NetworkReceiveThroughput"
| "NetworkTransmitThroughput"
| "BurstCapacityTime"
| "BurstCapacityPercentage"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type ComparisonOperator =
| "GreaterThanOrEqualToThreshold"
| "GreaterThanThreshold"
| "LessThanThreshold"
| "LessThanOrEqualToThreshold"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type TreatMissingData =
| "breaching"
| "notBreaching"
| "ignore"
| "missing"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type AlarmState =
| "OK"
| "ALARM"
| "INSUFFICIENT_DATA"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ContactMethodVerificationProtocol =
| "Email"
| cmnP.UnexpectedEnumValue;

// refs: 119 - tags: input, named, enum, output
export type ResourceType =
| "ContainerService"
| "Instance"
| "StaticIp"
| "KeyPair"
| "InstanceSnapshot"
| "Domain"
| "PeeredVpc"
| "LoadBalancer"
| "LoadBalancerTlsCertificate"
| "Disk"
| "DiskSnapshot"
| "RelationalDatabase"
| "RelationalDatabaseSnapshot"
| "ExportSnapshotRecord"
| "CloudFormationStackRecord"
| "Alarm"
| "ContactMethod"
| "Distribution"
| "Certificate"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, enum, output
export type LoadBalancerAttributeName =
| "HealthCheckPath"
| "SessionStickinessEnabled"
| "SessionStickiness_LB_CookieDurationSeconds"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface, output
export interface RelationalDatabaseParameter {
  allowedValues?: string | null;
  applyMethod?: string | null;
  applyType?: string | null;
  dataType?: string | null;
  description?: string | null;
  isModifiable?: boolean | null;
  parameterName?: string | null;
  parameterValue?: string | null;
}

// refs: 78 - tags: output, named, interface
export interface Operation {
  id?: string | null;
  resourceName?: string | null;
  resourceType?: ResourceType | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  isTerminal?: boolean | null;
  operationDetails?: string | null;
  operationType?: OperationType | null;
  status?: OperationStatus | null;
  statusChangedAt?: Date | number | null;
  errorCode?: string | null;
  errorDetails?: string | null;
}

// refs: 114 - tags: output, named, interface
export interface ResourceLocation {
  availabilityZone?: string | null;
  regionName?: RegionName | null;
}

// refs: 78 - tags: output, named, enum
export type OperationType =
| "DeleteKnownHostKeys"
| "DeleteInstance"
| "CreateInstance"
| "StopInstance"
| "StartInstance"
| "RebootInstance"
| "OpenInstancePublicPorts"
| "PutInstancePublicPorts"
| "CloseInstancePublicPorts"
| "AllocateStaticIp"
| "ReleaseStaticIp"
| "AttachStaticIp"
| "DetachStaticIp"
| "UpdateDomainEntry"
| "DeleteDomainEntry"
| "CreateDomain"
| "DeleteDomain"
| "CreateInstanceSnapshot"
| "DeleteInstanceSnapshot"
| "CreateInstancesFromSnapshot"
| "CreateLoadBalancer"
| "DeleteLoadBalancer"
| "AttachInstancesToLoadBalancer"
| "DetachInstancesFromLoadBalancer"
| "UpdateLoadBalancerAttribute"
| "CreateLoadBalancerTlsCertificate"
| "DeleteLoadBalancerTlsCertificate"
| "AttachLoadBalancerTlsCertificate"
| "CreateDisk"
| "DeleteDisk"
| "AttachDisk"
| "DetachDisk"
| "CreateDiskSnapshot"
| "DeleteDiskSnapshot"
| "CreateDiskFromSnapshot"
| "CreateRelationalDatabase"
| "UpdateRelationalDatabase"
| "DeleteRelationalDatabase"
| "CreateRelationalDatabaseFromSnapshot"
| "CreateRelationalDatabaseSnapshot"
| "DeleteRelationalDatabaseSnapshot"
| "UpdateRelationalDatabaseParameters"
| "StartRelationalDatabase"
| "RebootRelationalDatabase"
| "StopRelationalDatabase"
| "EnableAddOn"
| "DisableAddOn"
| "PutAlarm"
| "GetAlarms"
| "DeleteAlarm"
| "TestAlarm"
| "CreateContactMethod"
| "GetContactMethods"
| "SendContactMethodVerification"
| "DeleteContactMethod"
| "CreateDistribution"
| "UpdateDistribution"
| "DeleteDistribution"
| "ResetDistributionCache"
| "AttachCertificateToDistribution"
| "DetachCertificateFromDistribution"
| "UpdateDistributionBundle"
| "SetIpAddressType"
| "CreateCertificate"
| "DeleteCertificate"
| "CreateContainerService"
| "UpdateContainerService"
| "DeleteContainerService"
| "CreateContainerServiceDeployment"
| "CreateContainerServiceRegistryLogin"
| "RegisterContainerImage"
| "DeleteContainerImage"
| cmnP.UnexpectedEnumValue;

// refs: 78 - tags: output, named, enum
export type OperationStatus =
| "NotStarted"
| "Started"
| "Failed"
| "Completed"
| "Succeeded"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface CertificateSummary {
  certificateArn?: string | null;
  certificateName?: string | null;
  domainName?: string | null;
  certificateDetail?: Certificate | null;
  tags?: Tag[] | null;
}

// refs: 2 - tags: output, named, interface
export interface Certificate {
  arn?: string | null;
  name?: string | null;
  domainName?: string | null;
  status?: CertificateStatus | null;
  serialNumber?: string | null;
  subjectAlternativeNames?: string[] | null;
  domainValidationRecords?: DomainValidationRecord[] | null;
  requestFailureReason?: string | null;
  inUseResourceCount?: number | null;
  keyAlgorithm?: string | null;
  createdAt?: Date | number | null;
  issuedAt?: Date | number | null;
  issuerCA?: string | null;
  notBefore?: Date | number | null;
  notAfter?: Date | number | null;
  eligibleToRenew?: string | null;
  renewalSummary?: RenewalSummary | null;
  revokedAt?: Date | number | null;
  revocationReason?: string | null;
  tags?: Tag[] | null;
  supportCode?: string | null;
}

// refs: 4 - tags: output, named, interface
export interface DomainValidationRecord {
  domainName?: string | null;
  resourceRecord?: ResourceRecord | null;
}

// refs: 4 - tags: output, named, interface
export interface ResourceRecord {
  name?: string | null;
  type?: string | null;
  value?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface RenewalSummary {
  domainValidationRecords?: DomainValidationRecord[] | null;
  renewalStatus?: RenewalStatus | null;
  renewalStatusReason?: string | null;
  updatedAt?: Date | number | null;
}

// refs: 2 - tags: output, named, enum
export type RenewalStatus =
| "PendingAutoRenewal"
| "PendingValidation"
| "Success"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface ContainerService {
  containerServiceName?: string | null;
  arn?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  power?: ContainerServicePowerName | null;
  powerId?: string | null;
  state?: ContainerServiceState | null;
  scale?: number | null;
  currentDeployment?: ContainerServiceDeployment | null;
  nextDeployment?: ContainerServiceDeployment | null;
  isDisabled?: boolean | null;
  principalArn?: string | null;
  privateDomainName?: string | null;
  publicDomainNames?: { [key: string]: string[] | null | undefined } | null;
  url?: string | null;
}

// refs: 4 - tags: output, named, enum
export type ContainerServiceState =
| "PENDING"
| "READY"
| "RUNNING"
| "UPDATING"
| "DELETING"
| "DISABLED"
| cmnP.UnexpectedEnumValue;

// refs: 9 - tags: output, named, interface
export interface ContainerServiceDeployment {
  version?: number | null;
  state?: ContainerServiceDeploymentState | null;
  containers?: { [key: string]: Container | null | undefined } | null;
  publicEndpoint?: ContainerServiceEndpoint | null;
  createdAt?: Date | number | null;
}

// refs: 9 - tags: output, named, enum
export type ContainerServiceDeploymentState =
| "ACTIVATING"
| "ACTIVE"
| "INACTIVE"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 9 - tags: output, named, interface
export interface ContainerServiceEndpoint {
  containerName?: string | null;
  containerPort?: number | null;
  healthCheck?: ContainerServiceHealthCheckConfig | null;
}

// refs: 1 - tags: output, named, interface
export interface ContainerServiceRegistryLogin {
  username?: string | null;
  password?: string | null;
  expiresAt?: Date | number | null;
  registry?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface LightsailDistribution {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  alternativeDomainNames?: string[] | null;
  status?: string | null;
  isEnabled?: boolean | null;
  domainName?: string | null;
  bundleId?: string | null;
  certificateName?: string | null;
  origin?: Origin | null;
  originPublicDNS?: string | null;
  defaultCacheBehavior?: CacheBehavior | null;
  cacheBehaviorSettings?: CacheSettings | null;
  cacheBehaviors?: CacheBehaviorPerPath[] | null;
  ableToUpdateBundle?: boolean | null;
  ipAddressType?: IpAddressType | null;
  tags?: Tag[] | null;
}

// refs: 2 - tags: output, named, interface
export interface Origin {
  name?: string | null;
  resourceType?: ResourceType | null;
  regionName?: RegionName | null;
  protocolPolicy?: OriginProtocolPolicyEnum | null;
}

// refs: 3 - tags: output, named, interface
export interface KeyPair {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  fingerprint?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Alarm {
  name?: string | null;
  arn?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  supportCode?: string | null;
  monitoredResourceInfo?: MonitoredResourceInfo | null;
  comparisonOperator?: ComparisonOperator | null;
  evaluationPeriods?: number | null;
  period?: number | null;
  threshold?: number | null;
  datapointsToAlarm?: number | null;
  treatMissingData?: TreatMissingData | null;
  statistic?: MetricStatistic | null;
  metricName?: MetricName | null;
  state?: AlarmState | null;
  unit?: MetricUnit | null;
  contactProtocols?: ContactProtocol[] | null;
  notificationTriggers?: AlarmState[] | null;
  notificationEnabled?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface MonitoredResourceInfo {
  arn?: string | null;
  name?: string | null;
  resourceType?: ResourceType | null;
}

// refs: 1 - tags: output, named, interface
export interface AutoSnapshotDetails {
  date?: string | null;
  createdAt?: Date | number | null;
  status?: AutoSnapshotStatus | null;
  fromAttachedDisks?: AttachedDisk[] | null;
}

// refs: 1 - tags: output, named, enum
export type AutoSnapshotStatus =
| "Success"
| "Failed"
| "InProgress"
| "NotFound"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface AttachedDisk {
  path?: string | null;
  sizeInGb?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface Blueprint {
  blueprintId?: string | null;
  name?: string | null;
  group?: string | null;
  type?: BlueprintType | null;
  description?: string | null;
  isActive?: boolean | null;
  minPower?: number | null;
  version?: string | null;
  versionCode?: string | null;
  productUrl?: string | null;
  licenseUrl?: string | null;
  platform?: InstancePlatform | null;
}

// refs: 1 - tags: output, named, enum
export type BlueprintType =
| "os"
| "app"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type InstancePlatform =
| "LINUX_UNIX"
| "WINDOWS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Bundle {
  price?: number | null;
  cpuCount?: number | null;
  diskSizeInGb?: number | null;
  bundleId?: string | null;
  instanceType?: string | null;
  isActive?: boolean | null;
  name?: string | null;
  power?: number | null;
  ramSizeInGb?: number | null;
  transferPerMonthInGb?: number | null;
  supportedPlatforms?: InstancePlatform[] | null;
}

// refs: 1 - tags: output, named, interface
export interface CloudFormationStackRecord {
  name?: string | null;
  arn?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  state?: RecordState | null;
  sourceInfo?: CloudFormationStackRecordSourceInfo[] | null;
  destinationInfo?: DestinationInfo | null;
}

// refs: 2 - tags: output, named, enum
export type RecordState =
| "Started"
| "Succeeded"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface CloudFormationStackRecordSourceInfo {
  resourceType?: CloudFormationStackRecordSourceType | null;
  name?: string | null;
  arn?: string | null;
}

// refs: 1 - tags: output, named, enum
export type CloudFormationStackRecordSourceType =
| "ExportSnapshotRecord"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface DestinationInfo {
  id?: string | null;
  service?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ContactMethod {
  contactEndpoint?: string | null;
  status?: ContactMethodStatus | null;
  protocol?: ContactProtocol | null;
  name?: string | null;
  arn?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  supportCode?: string | null;
}

// refs: 1 - tags: output, named, enum
export type ContactMethodStatus =
| "PendingVerification"
| "Valid"
| "Invalid"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface ContainerImage {
  image?: string | null;
  digest?: string | null;
  createdAt?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface ContainerServiceLogEvent {
  createdAt?: Date | number | null;
  message?: string | null;
}

// refs: 5 - tags: output, named, interface
export interface MetricDatapoint {
  average?: number | null;
  maximum?: number | null;
  minimum?: number | null;
  sampleCount?: number | null;
  sum?: number | null;
  timestamp?: Date | number | null;
  unit?: MetricUnit | null;
}

// refs: 1 - tags: output, named, interface
export interface ContainerServicePower {
  powerId?: string | null;
  price?: number | null;
  cpuCount?: number | null;
  ramSizeInGb?: number | null;
  name?: string | null;
  isActive?: boolean | null;
}

// refs: 6 - tags: output, named, interface
export interface Disk {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  addOns?: AddOn[] | null;
  sizeInGb?: number | null;
  isSystemDisk?: boolean | null;
  iops?: number | null;
  path?: string | null;
  state?: DiskState | null;
  attachedTo?: string | null;
  isAttached?: boolean | null;
  attachmentState?: string | null;
  gbInUse?: number | null;
}

// refs: 8 - tags: output, named, interface
export interface AddOn {
  name?: string | null;
  status?: string | null;
  snapshotTimeOfDay?: string | null;
  nextSnapshotTimeOfDay?: string | null;
}

// refs: 6 - tags: output, named, enum
export type DiskState =
| "pending"
| "error"
| "available"
| "in-use"
| "unknown"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface DiskSnapshot {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  sizeInGb?: number | null;
  state?: DiskSnapshotState | null;
  progress?: string | null;
  fromDiskName?: string | null;
  fromDiskArn?: string | null;
  fromInstanceName?: string | null;
  fromInstanceArn?: string | null;
  isFromAutoSnapshot?: boolean | null;
}

// refs: 2 - tags: output, named, enum
export type DiskSnapshotState =
| "pending"
| "completed"
| "error"
| "unknown"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface DistributionBundle {
  bundleId?: string | null;
  name?: string | null;
  price?: number | null;
  transferPerMonthInGb?: number | null;
  isActive?: boolean | null;
}

// refs: 2 - tags: output, named, interface
export interface Domain {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  domainEntries?: DomainEntry[] | null;
}

// refs: 1 - tags: output, named, interface
export interface ExportSnapshotRecord {
  name?: string | null;
  arn?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  state?: RecordState | null;
  sourceInfo?: ExportSnapshotRecordSourceInfo | null;
  destinationInfo?: DestinationInfo | null;
}

// refs: 1 - tags: output, named, interface
export interface ExportSnapshotRecordSourceInfo {
  resourceType?: ExportSnapshotRecordSourceType | null;
  createdAt?: Date | number | null;
  name?: string | null;
  arn?: string | null;
  fromResourceName?: string | null;
  fromResourceArn?: string | null;
  instanceSnapshotInfo?: InstanceSnapshotInfo | null;
  diskSnapshotInfo?: DiskSnapshotInfo | null;
}

// refs: 1 - tags: output, named, enum
export type ExportSnapshotRecordSourceType =
| "InstanceSnapshot"
| "DiskSnapshot"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface InstanceSnapshotInfo {
  fromBundleId?: string | null;
  fromBlueprintId?: string | null;
  fromDiskInfo?: DiskInfo[] | null;
}

// refs: 1 - tags: output, named, interface
export interface DiskInfo {
  name?: string | null;
  path?: string | null;
  sizeInGb?: number | null;
  isSystemDisk?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface DiskSnapshotInfo {
  sizeInGb?: number | null;
}

// refs: 2 - tags: output, named, interface
export interface Instance {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  blueprintId?: string | null;
  blueprintName?: string | null;
  bundleId?: string | null;
  addOns?: AddOn[] | null;
  isStaticIp?: boolean | null;
  privateIpAddress?: string | null;
  publicIpAddress?: string | null;
  ipv6Addresses?: string[] | null;
  ipAddressType?: IpAddressType | null;
  hardware?: InstanceHardware | null;
  networking?: InstanceNetworking | null;
  state?: InstanceState | null;
  username?: string | null;
  sshKeyName?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface InstanceHardware {
  cpuCount?: number | null;
  disks?: Disk[] | null;
  ramSizeInGb?: number | null;
}

// refs: 2 - tags: output, named, interface
export interface InstanceNetworking {
  monthlyTransfer?: MonthlyTransfer | null;
  ports?: InstancePortInfo[] | null;
}

// refs: 2 - tags: output, named, interface
export interface MonthlyTransfer {
  gbPerMonthAllocated?: number | null;
}

// refs: 2 - tags: output, named, interface
export interface InstancePortInfo {
  fromPort?: number | null;
  toPort?: number | null;
  protocol?: NetworkProtocol | null;
  accessFrom?: string | null;
  accessType?: PortAccessType | null;
  commonName?: string | null;
  accessDirection?: AccessDirection | null;
  cidrs?: string[] | null;
  ipv6Cidrs?: string[] | null;
  cidrListAliases?: string[] | null;
}

// refs: 2 - tags: output, named, enum
export type PortAccessType =
| "Public"
| "Private"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type AccessDirection =
| "inbound"
| "outbound"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface InstanceState {
  code?: number | null;
  name?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface InstanceAccessDetails {
  certKey?: string | null;
  expiresAt?: Date | number | null;
  ipAddress?: string | null;
  password?: string | null;
  passwordData?: PasswordData | null;
  privateKey?: string | null;
  protocol?: InstanceAccessProtocol | null;
  instanceName?: string | null;
  username?: string | null;
  hostKeys?: HostKeyAttributes[] | null;
}

// refs: 1 - tags: output, named, interface
export interface PasswordData {
  ciphertext?: string | null;
  keyPairName?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface HostKeyAttributes {
  algorithm?: string | null;
  publicKey?: string | null;
  witnessedAt?: Date | number | null;
  fingerprintSHA1?: string | null;
  fingerprintSHA256?: string | null;
  notValidBefore?: Date | number | null;
  notValidAfter?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface InstancePortState {
  fromPort?: number | null;
  toPort?: number | null;
  protocol?: NetworkProtocol | null;
  state?: PortState | null;
  cidrs?: string[] | null;
  ipv6Cidrs?: string[] | null;
  cidrListAliases?: string[] | null;
}

// refs: 1 - tags: output, named, enum
export type PortState =
| "open"
| "closed"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface InstanceSnapshot {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  state?: InstanceSnapshotState | null;
  progress?: string | null;
  fromAttachedDisks?: Disk[] | null;
  fromInstanceName?: string | null;
  fromInstanceArn?: string | null;
  fromBlueprintId?: string | null;
  fromBundleId?: string | null;
  isFromAutoSnapshot?: boolean | null;
  sizeInGb?: number | null;
}

// refs: 2 - tags: output, named, enum
export type InstanceSnapshotState =
| "pending"
| "error"
| "available"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface LoadBalancer {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  dnsName?: string | null;
  state?: LoadBalancerState | null;
  protocol?: LoadBalancerProtocol | null;
  publicPorts?: number[] | null;
  healthCheckPath?: string | null;
  instancePort?: number | null;
  instanceHealthSummary?: InstanceHealthSummary[] | null;
  tlsCertificateSummaries?: LoadBalancerTlsCertificateSummary[] | null;
  configurationOptions?: { [key in LoadBalancerAttributeName]: string | null | undefined } | null;
  ipAddressType?: IpAddressType | null;
}

// refs: 2 - tags: output, named, enum
export type LoadBalancerState =
| "active"
| "provisioning"
| "active_impaired"
| "failed"
| "unknown"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type LoadBalancerProtocol =
| "HTTP_HTTPS"
| "HTTP"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface InstanceHealthSummary {
  instanceName?: string | null;
  instanceHealth?: InstanceHealthState | null;
  instanceHealthReason?: InstanceHealthReason | null;
}

// refs: 2 - tags: output, named, enum
export type InstanceHealthState =
| "initial"
| "healthy"
| "unhealthy"
| "unused"
| "draining"
| "unavailable"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type InstanceHealthReason =
| "Lb.RegistrationInProgress"
| "Lb.InitialHealthChecking"
| "Lb.InternalError"
| "Instance.ResponseCodeMismatch"
| "Instance.Timeout"
| "Instance.FailedHealthChecks"
| "Instance.NotRegistered"
| "Instance.NotInUse"
| "Instance.DeregistrationInProgress"
| "Instance.InvalidState"
| "Instance.IpUnusable"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface LoadBalancerTlsCertificateSummary {
  name?: string | null;
  isAttached?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface LoadBalancerTlsCertificate {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  loadBalancerName?: string | null;
  isAttached?: boolean | null;
  status?: LoadBalancerTlsCertificateStatus | null;
  domainName?: string | null;
  domainValidationRecords?: LoadBalancerTlsCertificateDomainValidationRecord[] | null;
  failureReason?: LoadBalancerTlsCertificateFailureReason | null;
  issuedAt?: Date | number | null;
  issuer?: string | null;
  keyAlgorithm?: string | null;
  notAfter?: Date | number | null;
  notBefore?: Date | number | null;
  renewalSummary?: LoadBalancerTlsCertificateRenewalSummary | null;
  revocationReason?: LoadBalancerTlsCertificateRevocationReason | null;
  revokedAt?: Date | number | null;
  serial?: string | null;
  signatureAlgorithm?: string | null;
  subject?: string | null;
  subjectAlternativeNames?: string[] | null;
}

// refs: 1 - tags: output, named, enum
export type LoadBalancerTlsCertificateStatus =
| "PENDING_VALIDATION"
| "ISSUED"
| "INACTIVE"
| "EXPIRED"
| "VALIDATION_TIMED_OUT"
| "REVOKED"
| "FAILED"
| "UNKNOWN"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface LoadBalancerTlsCertificateDomainValidationRecord {
  name?: string | null;
  type?: string | null;
  value?: string | null;
  validationStatus?: LoadBalancerTlsCertificateDomainStatus | null;
  domainName?: string | null;
}

// refs: 2 - tags: output, named, enum
export type LoadBalancerTlsCertificateDomainStatus =
| "PENDING_VALIDATION"
| "FAILED"
| "SUCCESS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type LoadBalancerTlsCertificateFailureReason =
| "NO_AVAILABLE_CONTACTS"
| "ADDITIONAL_VERIFICATION_REQUIRED"
| "DOMAIN_NOT_ALLOWED"
| "INVALID_PUBLIC_DOMAIN"
| "OTHER"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface LoadBalancerTlsCertificateRenewalSummary {
  renewalStatus?: LoadBalancerTlsCertificateRenewalStatus | null;
  domainValidationOptions?: LoadBalancerTlsCertificateDomainValidationOption[] | null;
}

// refs: 1 - tags: output, named, enum
export type LoadBalancerTlsCertificateRenewalStatus =
| "PENDING_AUTO_RENEWAL"
| "PENDING_VALIDATION"
| "SUCCESS"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface LoadBalancerTlsCertificateDomainValidationOption {
  domainName?: string | null;
  validationStatus?: LoadBalancerTlsCertificateDomainStatus | null;
}

// refs: 1 - tags: output, named, enum
export type LoadBalancerTlsCertificateRevocationReason =
| "UNSPECIFIED"
| "KEY_COMPROMISE"
| "CA_COMPROMISE"
| "AFFILIATION_CHANGED"
| "SUPERCEDED"
| "CESSATION_OF_OPERATION"
| "CERTIFICATE_HOLD"
| "REMOVE_FROM_CRL"
| "PRIVILEGE_WITHDRAWN"
| "A_A_COMPROMISE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Region {
  continentCode?: string | null;
  description?: string | null;
  displayName?: string | null;
  name?: RegionName | null;
  availabilityZones?: AvailabilityZone[] | null;
  relationalDatabaseAvailabilityZones?: AvailabilityZone[] | null;
}

// refs: 2 - tags: output, named, interface
export interface AvailabilityZone {
  zoneName?: string | null;
  state?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface RelationalDatabase {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  relationalDatabaseBlueprintId?: string | null;
  relationalDatabaseBundleId?: string | null;
  masterDatabaseName?: string | null;
  hardware?: RelationalDatabaseHardware | null;
  state?: string | null;
  secondaryAvailabilityZone?: string | null;
  backupRetentionEnabled?: boolean | null;
  pendingModifiedValues?: PendingModifiedRelationalDatabaseValues | null;
  engine?: string | null;
  engineVersion?: string | null;
  latestRestorableTime?: Date | number | null;
  masterUsername?: string | null;
  parameterApplyStatus?: string | null;
  preferredBackupWindow?: string | null;
  preferredMaintenanceWindow?: string | null;
  publiclyAccessible?: boolean | null;
  masterEndpoint?: RelationalDatabaseEndpoint | null;
  pendingMaintenanceActions?: PendingMaintenanceAction[] | null;
  caCertificateIdentifier?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface RelationalDatabaseHardware {
  cpuCount?: number | null;
  diskSizeInGb?: number | null;
  ramSizeInGb?: number | null;
}

// refs: 2 - tags: output, named, interface
export interface PendingModifiedRelationalDatabaseValues {
  masterUserPassword?: string | null;
  engineVersion?: string | null;
  backupRetentionEnabled?: boolean | null;
}

// refs: 2 - tags: output, named, interface
export interface RelationalDatabaseEndpoint {
  port?: number | null;
  address?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface PendingMaintenanceAction {
  action?: string | null;
  description?: string | null;
  currentApplyDate?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface RelationalDatabaseBlueprint {
  blueprintId?: string | null;
  engine?: RelationalDatabaseEngine | null;
  engineVersion?: string | null;
  engineDescription?: string | null;
  engineVersionDescription?: string | null;
  isEngineDefault?: boolean | null;
}

// refs: 1 - tags: output, named, enum
export type RelationalDatabaseEngine =
| "mysql"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface RelationalDatabaseBundle {
  bundleId?: string | null;
  name?: string | null;
  price?: number | null;
  ramSizeInGb?: number | null;
  diskSizeInGb?: number | null;
  transferPerMonthInGb?: number | null;
  cpuCount?: number | null;
  isEncrypted?: boolean | null;
  isActive?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface RelationalDatabaseEvent {
  resource?: string | null;
  createdAt?: Date | number | null;
  message?: string | null;
  eventCategories?: string[] | null;
}

// refs: 1 - tags: output, named, interface
export interface LogEvent {
  createdAt?: Date | number | null;
  message?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface RelationalDatabaseSnapshot {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  tags?: Tag[] | null;
  engine?: string | null;
  engineVersion?: string | null;
  sizeInGb?: number | null;
  state?: string | null;
  fromRelationalDatabaseName?: string | null;
  fromRelationalDatabaseArn?: string | null;
  fromRelationalDatabaseBundleId?: string | null;
  fromRelationalDatabaseBlueprintId?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface StaticIp {
  name?: string | null;
  arn?: string | null;
  supportCode?: string | null;
  createdAt?: Date | number | null;
  location?: ResourceLocation | null;
  resourceType?: ResourceType | null;
  ipAddress?: string | null;
  attachedTo?: string | null;
  isAttached?: boolean | null;
}
