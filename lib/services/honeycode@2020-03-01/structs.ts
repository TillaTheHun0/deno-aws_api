// Autogenerated API structures for: Amazon Honeycode

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface BatchCreateTableRowsRequest {
  workbookId: string;
  tableId: string;
  rowsToCreate: CreateRowData[];
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface BatchDeleteTableRowsRequest {
  workbookId: string;
  tableId: string;
  rowIds: string[];
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface BatchUpdateTableRowsRequest {
  workbookId: string;
  tableId: string;
  rowsToUpdate: UpdateRowData[];
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface BatchUpsertTableRowsRequest {
  workbookId: string;
  tableId: string;
  rowsToUpsert: UpsertRowData[];
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeTableDataImportJobRequest {
  workbookId: string;
  tableId: string;
  jobId: string;
}

// refs: 1 - tags: named, input
export interface GetScreenDataRequest {
  workbookId: string;
  appId: string;
  screenId: string;
  variables?: { [key: string]: VariableValue | null | undefined } | null;
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface InvokeScreenAutomationRequest {
  workbookId: string;
  appId: string;
  screenId: string;
  screenAutomationId: string;
  variables?: { [key: string]: VariableValue | null | undefined } | null;
  rowId?: string | null;
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListTableColumnsRequest {
  workbookId: string;
  tableId: string;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListTableRowsRequest {
  workbookId: string;
  tableId: string;
  rowIds?: string[] | null;
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListTablesRequest {
  workbookId: string;
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface QueryTableRowsRequest {
  workbookId: string;
  tableId: string;
  filterFormula: Filter;
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface StartTableDataImportJobRequest {
  workbookId: string;
  dataSource: ImportDataSource;
  dataFormat: ImportSourceDataFormat;
  destinationTableId: string;
  importOptions: ImportOptions;
  clientRequestToken: string;
}

// refs: 1 - tags: named, output
export interface BatchCreateTableRowsResult {
  workbookCursor: number;
  createdRows: { [key: string]: string | null | undefined };
  failedBatchItems?: FailedBatchItem[] | null;
}

// refs: 1 - tags: named, output
export interface BatchDeleteTableRowsResult {
  workbookCursor: number;
  failedBatchItems?: FailedBatchItem[] | null;
}

// refs: 1 - tags: named, output
export interface BatchUpdateTableRowsResult {
  workbookCursor: number;
  failedBatchItems?: FailedBatchItem[] | null;
}

// refs: 1 - tags: named, output
export interface BatchUpsertTableRowsResult {
  rows: { [key: string]: UpsertRowsResult | null | undefined };
  workbookCursor: number;
  failedBatchItems?: FailedBatchItem[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeTableDataImportJobResult {
  jobStatus: TableDataImportJobStatus;
  message: string;
  jobMetadata: TableDataImportJobMetadata;
}

// refs: 1 - tags: named, output
export interface GetScreenDataResult {
  results: { [key: string]: ResultSet | null | undefined };
  workbookCursor: number;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface InvokeScreenAutomationResult {
  workbookCursor: number;
}

// refs: 1 - tags: named, output
export interface ListTableColumnsResult {
  tableColumns: TableColumn[];
  nextToken?: string | null;
  workbookCursor?: number | null;
}

// refs: 1 - tags: named, output
export interface ListTableRowsResult {
  columnIds: string[];
  rows: TableRow[];
  rowIdsNotFound?: string[] | null;
  nextToken?: string | null;
  workbookCursor: number;
}

// refs: 1 - tags: named, output
export interface ListTablesResult {
  tables: Table[];
  nextToken?: string | null;
  workbookCursor?: number | null;
}

// refs: 1 - tags: named, output
export interface QueryTableRowsResult {
  columnIds: string[];
  rows: TableRow[];
  nextToken?: string | null;
  workbookCursor: number;
}

// refs: 1 - tags: named, output
export interface StartTableDataImportJobResult {
  jobId: string;
  jobStatus: TableDataImportJobStatus;
}

// refs: 1 - tags: input, named, interface
export interface CreateRowData {
  batchItemId: string;
  cellsToCreate: { [key: string]: CellInput | null | undefined };
}

// refs: 3 - tags: input, named, interface
export interface CellInput {
  fact?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface UpdateRowData {
  rowId: string;
  cellsToUpdate: { [key: string]: CellInput | null | undefined };
}

// refs: 1 - tags: input, named, interface
export interface UpsertRowData {
  batchItemId: string;
  filter: Filter;
  cellsToUpdate: { [key: string]: CellInput | null | undefined };
}

// refs: 2 - tags: input, named, interface
export interface Filter {
  formula: string;
  contextRowId?: string | null;
}

// refs: 2 - tags: input, named, interface
export interface VariableValue {
  rawValue: string;
}

// refs: 2 - tags: input, named, interface, output
export interface ImportDataSource {
  dataSourceConfig: ImportDataSourceConfig;
}

// refs: 2 - tags: input, named, interface, output
export interface ImportDataSourceConfig {
  dataSourceUrl?: string | null;
}

// refs: 1 - tags: input, named, enum
export type ImportSourceDataFormat =
| "DELIMITED_TEXT"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface, output
export interface ImportOptions {
  destinationOptions?: DestinationOptions | null;
  delimitedTextOptions?: DelimitedTextImportOptions | null;
}

// refs: 2 - tags: input, named, interface, output
export interface DestinationOptions {
  columnMap?: { [key: string]: SourceDataColumnProperties | null | undefined } | null;
}

// refs: 2 - tags: input, named, interface, output
export interface SourceDataColumnProperties {
  columnIndex?: number | null;
}

// refs: 2 - tags: input, named, interface, output
export interface DelimitedTextImportOptions {
  delimiter: string;
  hasHeaderRow?: boolean | null;
  ignoreEmptyRows?: boolean | null;
  dataCharacterEncoding?: ImportDataCharacterEncoding | null;
}

// refs: 2 - tags: input, named, enum, output
export type ImportDataCharacterEncoding =
| "UTF-8"
| "US-ASCII"
| "ISO-8859-1"
| "UTF-16BE"
| "UTF-16LE"
| "UTF-16"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface FailedBatchItem {
  id: string;
  errorMessage: string;
}

// refs: 1 - tags: output, named, interface
export interface UpsertRowsResult {
  rowIds: string[];
  upsertAction: UpsertAction;
}

// refs: 1 - tags: output, named, enum
export type UpsertAction =
| "UPDATED"
| "APPENDED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type TableDataImportJobStatus =
| "SUBMITTED"
| "IN_PROGRESS"
| "COMPLETED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface TableDataImportJobMetadata {
  submitter: ImportJobSubmitter;
  submitTime: Date | number;
  importOptions: ImportOptions;
  dataSource: ImportDataSource;
}

// refs: 1 - tags: output, named, interface
export interface ImportJobSubmitter {
  email?: string | null;
  userArn?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ResultSet {
  headers: ColumnMetadata[];
  rows: ResultRow[];
}

// refs: 1 - tags: output, named, interface
export interface ColumnMetadata {
  name: string;
  format: Format;
}

// refs: 5 - tags: output, named, enum
export type Format =
| "AUTO"
| "NUMBER"
| "CURRENCY"
| "DATE"
| "TIME"
| "DATE_TIME"
| "PERCENTAGE"
| "TEXT"
| "ACCOUNTING"
| "CONTACT"
| "ROWLINK"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ResultRow {
  rowId?: string | null;
  dataItems: DataItem[];
}

// refs: 1 - tags: output, named, interface
export interface DataItem {
  overrideFormat?: Format | null;
  rawValue?: string | null;
  formattedValue?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface TableColumn {
  tableColumnId?: string | null;
  tableColumnName?: string | null;
  format?: Format | null;
}

// refs: 2 - tags: output, named, interface
export interface TableRow {
  rowId: string;
  cells: Cell[];
}

// refs: 2 - tags: output, named, interface
export interface Cell {
  formula?: string | null;
  format?: Format | null;
  rawValue?: string | null;
  formattedValue?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Table {
  tableId?: string | null;
  tableName?: string | null;
}
