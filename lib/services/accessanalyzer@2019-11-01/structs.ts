// Autogenerated API structures for: Access Analyzer

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface ApplyArchiveRuleRequest {
  analyzerArn: string;
  clientToken?: string | null;
  ruleName: string;
}

// refs: 1 - tags: named, input
export interface CreateAnalyzerRequest {
  analyzerName: string;
  archiveRules?: InlineArchiveRule[] | null;
  clientToken?: string | null;
  tags?: { [key: string]: string | null | undefined } | null;
  type: Type;
}

// refs: 1 - tags: named, input
export interface CreateArchiveRuleRequest {
  analyzerName: string;
  clientToken?: string | null;
  filter: { [key: string]: Criterion | null | undefined };
  ruleName: string;
}

// refs: 1 - tags: named, input
export interface DeleteAnalyzerRequest {
  analyzerName: string;
  clientToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteArchiveRuleRequest {
  analyzerName: string;
  clientToken?: string | null;
  ruleName: string;
}

// refs: 1 - tags: named, input
export interface GetAnalyzedResourceRequest {
  analyzerArn: string;
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface GetAnalyzerRequest {
  analyzerName: string;
}

// refs: 1 - tags: named, input
export interface GetArchiveRuleRequest {
  analyzerName: string;
  ruleName: string;
}

// refs: 1 - tags: named, input
export interface GetFindingRequest {
  analyzerArn: string;
  id: string;
}

// refs: 1 - tags: named, input
export interface ListAnalyzedResourcesRequest {
  analyzerArn: string;
  maxResults?: number | null;
  nextToken?: string | null;
  resourceType?: ResourceType | null;
}

// refs: 1 - tags: named, input
export interface ListAnalyzersRequest {
  maxResults?: number | null;
  nextToken?: string | null;
  type?: Type | null;
}

// refs: 1 - tags: named, input
export interface ListArchiveRulesRequest {
  analyzerName: string;
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListFindingsRequest {
  analyzerArn: string;
  filter?: { [key: string]: Criterion | null | undefined } | null;
  maxResults?: number | null;
  nextToken?: string | null;
  sort?: SortCriteria | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface StartResourceScanRequest {
  analyzerArn: string;
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceArn: string;
  tags: { [key: string]: string | null | undefined };
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateArchiveRuleRequest {
  analyzerName: string;
  clientToken?: string | null;
  filter: { [key: string]: Criterion | null | undefined };
  ruleName: string;
}

// refs: 1 - tags: named, input
export interface UpdateFindingsRequest {
  analyzerArn: string;
  clientToken?: string | null;
  ids?: string[] | null;
  resourceArn?: string | null;
  status: FindingStatusUpdate;
}

// refs: 1 - tags: named, output
export interface CreateAnalyzerResponse {
  arn?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAnalyzedResourceResponse {
  resource?: AnalyzedResource | null;
}

// refs: 1 - tags: named, output
export interface GetAnalyzerResponse {
  analyzer: AnalyzerSummary;
}

// refs: 1 - tags: named, output
export interface GetArchiveRuleResponse {
  archiveRule: ArchiveRuleSummary;
}

// refs: 1 - tags: named, output
export interface GetFindingResponse {
  finding?: Finding | null;
}

// refs: 1 - tags: named, output
export interface ListAnalyzedResourcesResponse {
  analyzedResources: AnalyzedResourceSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListAnalyzersResponse {
  analyzers: AnalyzerSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListArchiveRulesResponse {
  archiveRules: ArchiveRuleSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListFindingsResponse {
  findings: FindingSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, output
export interface TagResourceResponse {
}

// refs: 1 - tags: named, output
export interface UntagResourceResponse {
}

// refs: 1 - tags: input, named, interface
export interface InlineArchiveRule {
  filter: { [key: string]: Criterion | null | undefined };
  ruleName: string;
}

// refs: 6 - tags: input, named, interface, output
export interface Criterion {
  contains?: string[] | null;
  eq?: string[] | null;
  exists?: boolean | null;
  neq?: string[] | null;
}

// refs: 4 - tags: input, named, enum, output
export type Type =
| "ACCOUNT"
| "ORGANIZATION"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, enum, output
export type ResourceType =
| "AWS::S3::Bucket"
| "AWS::IAM::Role"
| "AWS::SQS::Queue"
| "AWS::Lambda::Function"
| "AWS::Lambda::LayerVersion"
| "AWS::KMS::Key"
| "AWS::SecretsManager::Secret"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface SortCriteria {
  attributeName?: string | null;
  orderBy?: OrderBy | null;
}

// refs: 1 - tags: input, named, enum
export type OrderBy =
| "ASC"
| "DESC"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type FindingStatusUpdate =
| "ACTIVE"
| "ARCHIVED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface AnalyzedResource {
  actions?: string[] | null;
  analyzedAt: Date | number;
  createdAt: Date | number;
  error?: string | null;
  isPublic: boolean;
  resourceArn: string;
  resourceOwnerAccount: string;
  resourceType: ResourceType;
  sharedVia?: string[] | null;
  status?: FindingStatus | null;
  updatedAt: Date | number;
}

// refs: 3 - tags: output, named, enum
export type FindingStatus =
| "ACTIVE"
| "ARCHIVED"
| "RESOLVED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface AnalyzerSummary {
  arn: string;
  createdAt: Date | number;
  lastResourceAnalyzed?: string | null;
  lastResourceAnalyzedAt?: Date | number | null;
  name: string;
  status: AnalyzerStatus;
  statusReason?: StatusReason | null;
  tags?: { [key: string]: string | null | undefined } | null;
  type: Type;
}

// refs: 2 - tags: output, named, enum
export type AnalyzerStatus =
| "ACTIVE"
| "CREATING"
| "DISABLED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface StatusReason {
  code: ReasonCode;
}

// refs: 2 - tags: output, named, enum
export type ReasonCode =
| "AWS_SERVICE_ACCESS_DISABLED"
| "DELEGATED_ADMINISTRATOR_DEREGISTERED"
| "ORGANIZATION_DELETED"
| "SERVICE_LINKED_ROLE_CREATION_FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface ArchiveRuleSummary {
  createdAt: Date | number;
  filter: { [key: string]: Criterion | null | undefined };
  ruleName: string;
  updatedAt: Date | number;
}

// refs: 1 - tags: output, named, interface
export interface Finding {
  action?: string[] | null;
  analyzedAt: Date | number;
  condition: { [key: string]: string | null | undefined };
  createdAt: Date | number;
  error?: string | null;
  id: string;
  isPublic?: boolean | null;
  principal?: { [key: string]: string | null | undefined } | null;
  resource?: string | null;
  resourceOwnerAccount: string;
  resourceType: ResourceType;
  sources?: FindingSource[] | null;
  status: FindingStatus;
  updatedAt: Date | number;
}

// refs: 2 - tags: output, named, interface
export interface FindingSource {
  detail?: FindingSourceDetail | null;
  type: FindingSourceType;
}

// refs: 2 - tags: output, named, interface
export interface FindingSourceDetail {
  accessPointArn?: string | null;
}

// refs: 2 - tags: output, named, enum
export type FindingSourceType =
| "POLICY"
| "BUCKET_ACL"
| "S3_ACCESS_POINT"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface AnalyzedResourceSummary {
  resourceArn: string;
  resourceOwnerAccount: string;
  resourceType: ResourceType;
}

// refs: 1 - tags: output, named, interface
export interface FindingSummary {
  action?: string[] | null;
  analyzedAt: Date | number;
  condition: { [key: string]: string | null | undefined };
  createdAt: Date | number;
  error?: string | null;
  id: string;
  isPublic?: boolean | null;
  principal?: { [key: string]: string | null | undefined } | null;
  resource?: string | null;
  resourceOwnerAccount: string;
  resourceType: ResourceType;
  sources?: FindingSource[] | null;
  status: FindingStatus;
  updatedAt: Date | number;
}
