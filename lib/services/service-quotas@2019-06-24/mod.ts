// Autogenerated API client for: Service Quotas

import type { ServiceClient, ApiFactory, ApiMetadata } from '../../client/common.ts';
interface RequestConfig {
  abortSignal?: AbortSignal;
}

import { JSONObject, JSONValue } from '../../encoding/json.ts';
import * as prt from "../../encoding/json.ts";

export default class ServiceQuotas {
  #client: ServiceClient;
  constructor(apiFactory: ApiFactory) {
    this.#client = apiFactory.buildServiceClient(ServiceQuotas.ApiMetadata);
  }

  static ApiMetadata: ApiMetadata = {
    "apiVersion": "2019-06-24",
    "endpointPrefix": "servicequotas",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceFullName": "Service Quotas",
    "serviceId": "Service Quotas",
    "signatureVersion": "v4",
    "targetPrefix": "ServiceQuotasV20190624",
    "uid": "service-quotas-2019-06-24"
  };

  async associateServiceQuotaTemplate(
    {abortSignal, ...params}: RequestConfig & AssociateServiceQuotaTemplateRequest = {},
  ): Promise<AssociateServiceQuotaTemplateResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "AssociateServiceQuotaTemplate",
    });
    return prt.readObj({
      required: {},
      optional: {},
    }, await resp.json());
  }

  async deleteServiceQuotaIncreaseRequestFromTemplate(
    {abortSignal, ...params}: RequestConfig & DeleteServiceQuotaIncreaseRequestFromTemplateRequest,
  ): Promise<DeleteServiceQuotaIncreaseRequestFromTemplateResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DeleteServiceQuotaIncreaseRequestFromTemplate",
    });
    return prt.readObj({
      required: {},
      optional: {},
    }, await resp.json());
  }

  async disassociateServiceQuotaTemplate(
    {abortSignal, ...params}: RequestConfig & DisassociateServiceQuotaTemplateRequest = {},
  ): Promise<DisassociateServiceQuotaTemplateResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DisassociateServiceQuotaTemplate",
    });
    return prt.readObj({
      required: {},
      optional: {},
    }, await resp.json());
  }

  async getAWSDefaultServiceQuota(
    {abortSignal, ...params}: RequestConfig & GetAWSDefaultServiceQuotaRequest,
  ): Promise<GetAWSDefaultServiceQuotaResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "GetAWSDefaultServiceQuota",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Quota": toServiceQuota,
      },
    }, await resp.json());
  }

  async getAssociationForServiceQuotaTemplate(
    {abortSignal, ...params}: RequestConfig & GetAssociationForServiceQuotaTemplateRequest = {},
  ): Promise<GetAssociationForServiceQuotaTemplateResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "GetAssociationForServiceQuotaTemplate",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ServiceQuotaTemplateAssociationStatus": toServiceQuotaTemplateAssociationStatus,
      },
    }, await resp.json());
  }

  async getRequestedServiceQuotaChange(
    {abortSignal, ...params}: RequestConfig & GetRequestedServiceQuotaChangeRequest,
  ): Promise<GetRequestedServiceQuotaChangeResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "GetRequestedServiceQuotaChange",
    });
    return prt.readObj({
      required: {},
      optional: {
        "RequestedQuota": toRequestedServiceQuotaChange,
      },
    }, await resp.json());
  }

  async getServiceQuota(
    {abortSignal, ...params}: RequestConfig & GetServiceQuotaRequest,
  ): Promise<GetServiceQuotaResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "GetServiceQuota",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Quota": toServiceQuota,
      },
    }, await resp.json());
  }

  async getServiceQuotaIncreaseRequestFromTemplate(
    {abortSignal, ...params}: RequestConfig & GetServiceQuotaIncreaseRequestFromTemplateRequest,
  ): Promise<GetServiceQuotaIncreaseRequestFromTemplateResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "GetServiceQuotaIncreaseRequestFromTemplate",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ServiceQuotaIncreaseRequestInTemplate": toServiceQuotaIncreaseRequestInTemplate,
      },
    }, await resp.json());
  }

  async listAWSDefaultServiceQuotas(
    {abortSignal, ...params}: RequestConfig & ListAWSDefaultServiceQuotasRequest,
  ): Promise<ListAWSDefaultServiceQuotasResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListAWSDefaultServiceQuotas",
    });
    return prt.readObj({
      required: {},
      optional: {
        "NextToken": "s",
        "Quotas": [toServiceQuota],
      },
    }, await resp.json());
  }

  async listRequestedServiceQuotaChangeHistory(
    {abortSignal, ...params}: RequestConfig & ListRequestedServiceQuotaChangeHistoryRequest = {},
  ): Promise<ListRequestedServiceQuotaChangeHistoryResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListRequestedServiceQuotaChangeHistory",
    });
    return prt.readObj({
      required: {},
      optional: {
        "NextToken": "s",
        "RequestedQuotas": [toRequestedServiceQuotaChange],
      },
    }, await resp.json());
  }

  async listRequestedServiceQuotaChangeHistoryByQuota(
    {abortSignal, ...params}: RequestConfig & ListRequestedServiceQuotaChangeHistoryByQuotaRequest,
  ): Promise<ListRequestedServiceQuotaChangeHistoryByQuotaResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListRequestedServiceQuotaChangeHistoryByQuota",
    });
    return prt.readObj({
      required: {},
      optional: {
        "NextToken": "s",
        "RequestedQuotas": [toRequestedServiceQuotaChange],
      },
    }, await resp.json());
  }

  async listServiceQuotaIncreaseRequestsInTemplate(
    {abortSignal, ...params}: RequestConfig & ListServiceQuotaIncreaseRequestsInTemplateRequest = {},
  ): Promise<ListServiceQuotaIncreaseRequestsInTemplateResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListServiceQuotaIncreaseRequestsInTemplate",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ServiceQuotaIncreaseRequestInTemplateList": [toServiceQuotaIncreaseRequestInTemplate],
        "NextToken": "s",
      },
    }, await resp.json());
  }

  async listServiceQuotas(
    {abortSignal, ...params}: RequestConfig & ListServiceQuotasRequest,
  ): Promise<ListServiceQuotasResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListServiceQuotas",
    });
    return prt.readObj({
      required: {},
      optional: {
        "NextToken": "s",
        "Quotas": [toServiceQuota],
      },
    }, await resp.json());
  }

  async listServices(
    {abortSignal, ...params}: RequestConfig & ListServicesRequest = {},
  ): Promise<ListServicesResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListServices",
    });
    return prt.readObj({
      required: {},
      optional: {
        "NextToken": "s",
        "Services": [toServiceInfo],
      },
    }, await resp.json());
  }

  async putServiceQuotaIncreaseRequestIntoTemplate(
    {abortSignal, ...params}: RequestConfig & PutServiceQuotaIncreaseRequestIntoTemplateRequest,
  ): Promise<PutServiceQuotaIncreaseRequestIntoTemplateResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "PutServiceQuotaIncreaseRequestIntoTemplate",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ServiceQuotaIncreaseRequestInTemplate": toServiceQuotaIncreaseRequestInTemplate,
      },
    }, await resp.json());
  }

  async requestServiceQuotaIncrease(
    {abortSignal, ...params}: RequestConfig & RequestServiceQuotaIncreaseRequest,
  ): Promise<RequestServiceQuotaIncreaseResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "RequestServiceQuotaIncrease",
    });
    return prt.readObj({
      required: {},
      optional: {
        "RequestedQuota": toRequestedServiceQuotaChange,
      },
    }, await resp.json());
  }

}

// refs: 1 - tags: named, input
export interface AssociateServiceQuotaTemplateRequest {
}

// refs: 1 - tags: named, input
export interface DeleteServiceQuotaIncreaseRequestFromTemplateRequest {
  ServiceCode: string;
  QuotaCode: string;
  AwsRegion: string;
}

// refs: 1 - tags: named, input
export interface DisassociateServiceQuotaTemplateRequest {
}

// refs: 1 - tags: named, input
export interface GetAWSDefaultServiceQuotaRequest {
  ServiceCode: string;
  QuotaCode: string;
}

// refs: 1 - tags: named, input
export interface GetAssociationForServiceQuotaTemplateRequest {
}

// refs: 1 - tags: named, input
export interface GetRequestedServiceQuotaChangeRequest {
  RequestId: string;
}

// refs: 1 - tags: named, input
export interface GetServiceQuotaRequest {
  ServiceCode: string;
  QuotaCode: string;
}

// refs: 1 - tags: named, input
export interface GetServiceQuotaIncreaseRequestFromTemplateRequest {
  ServiceCode: string;
  QuotaCode: string;
  AwsRegion: string;
}

// refs: 1 - tags: named, input
export interface ListAWSDefaultServiceQuotasRequest {
  ServiceCode: string;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListRequestedServiceQuotaChangeHistoryRequest {
  ServiceCode?: string | null;
  Status?: RequestStatus | null;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListRequestedServiceQuotaChangeHistoryByQuotaRequest {
  ServiceCode: string;
  QuotaCode: string;
  Status?: RequestStatus | null;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListServiceQuotaIncreaseRequestsInTemplateRequest {
  ServiceCode?: string | null;
  AwsRegion?: string | null;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListServiceQuotasRequest {
  ServiceCode: string;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListServicesRequest {
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface PutServiceQuotaIncreaseRequestIntoTemplateRequest {
  QuotaCode: string;
  ServiceCode: string;
  AwsRegion: string;
  DesiredValue: number;
}

// refs: 1 - tags: named, input
export interface RequestServiceQuotaIncreaseRequest {
  ServiceCode: string;
  QuotaCode: string;
  DesiredValue: number;
}

// refs: 1 - tags: named, output
export interface AssociateServiceQuotaTemplateResponse {
}

// refs: 1 - tags: named, output
export interface DeleteServiceQuotaIncreaseRequestFromTemplateResponse {
}

// refs: 1 - tags: named, output
export interface DisassociateServiceQuotaTemplateResponse {
}

// refs: 1 - tags: named, output
export interface GetAWSDefaultServiceQuotaResponse {
  Quota?: ServiceQuota | null;
}

// refs: 1 - tags: named, output
export interface GetAssociationForServiceQuotaTemplateResponse {
  ServiceQuotaTemplateAssociationStatus?: ServiceQuotaTemplateAssociationStatus | null;
}

// refs: 1 - tags: named, output
export interface GetRequestedServiceQuotaChangeResponse {
  RequestedQuota?: RequestedServiceQuotaChange | null;
}

// refs: 1 - tags: named, output
export interface GetServiceQuotaResponse {
  Quota?: ServiceQuota | null;
}

// refs: 1 - tags: named, output
export interface GetServiceQuotaIncreaseRequestFromTemplateResponse {
  ServiceQuotaIncreaseRequestInTemplate?: ServiceQuotaIncreaseRequestInTemplate | null;
}

// refs: 1 - tags: named, output
export interface ListAWSDefaultServiceQuotasResponse {
  NextToken?: string | null;
  Quotas?: ServiceQuota[] | null;
}

// refs: 1 - tags: named, output
export interface ListRequestedServiceQuotaChangeHistoryResponse {
  NextToken?: string | null;
  RequestedQuotas?: RequestedServiceQuotaChange[] | null;
}

// refs: 1 - tags: named, output
export interface ListRequestedServiceQuotaChangeHistoryByQuotaResponse {
  NextToken?: string | null;
  RequestedQuotas?: RequestedServiceQuotaChange[] | null;
}

// refs: 1 - tags: named, output
export interface ListServiceQuotaIncreaseRequestsInTemplateResponse {
  ServiceQuotaIncreaseRequestInTemplateList?: ServiceQuotaIncreaseRequestInTemplate[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListServiceQuotasResponse {
  NextToken?: string | null;
  Quotas?: ServiceQuota[] | null;
}

// refs: 1 - tags: named, output
export interface ListServicesResponse {
  NextToken?: string | null;
  Services?: ServiceInfo[] | null;
}

// refs: 1 - tags: named, output
export interface PutServiceQuotaIncreaseRequestIntoTemplateResponse {
  ServiceQuotaIncreaseRequestInTemplate?: ServiceQuotaIncreaseRequestInTemplate | null;
}

// refs: 1 - tags: named, output
export interface RequestServiceQuotaIncreaseResponse {
  RequestedQuota?: RequestedServiceQuotaChange | null;
}

// refs: 6 - tags: input, named, enum, output
export type RequestStatus =
| "PENDING"
| "CASE_OPENED"
| "APPROVED"
| "DENIED"
| "CASE_CLOSED"
;

function toRequestStatus(root: JSONValue): RequestStatus | null {
  return ( false
    || root == "PENDING"
    || root == "CASE_OPENED"
    || root == "APPROVED"
    || root == "DENIED"
    || root == "CASE_CLOSED"
  ) ? root : null;
}

// refs: 4 - tags: output, named, interface
export interface ServiceQuota {
  ServiceCode?: string | null;
  ServiceName?: string | null;
  QuotaArn?: string | null;
  QuotaCode?: string | null;
  QuotaName?: string | null;
  Value?: number | null;
  Unit?: string | null;
  Adjustable?: boolean | null;
  GlobalQuota?: boolean | null;
  UsageMetric?: MetricInfo | null;
  Period?: QuotaPeriod | null;
  ErrorReason?: ErrorReason | null;
}
function toServiceQuota(root: JSONValue): ServiceQuota {
  return prt.readObj({
    required: {},
    optional: {
      "ServiceCode": "s",
      "ServiceName": "s",
      "QuotaArn": "s",
      "QuotaCode": "s",
      "QuotaName": "s",
      "Value": "n",
      "Unit": "s",
      "Adjustable": "b",
      "GlobalQuota": "b",
      "UsageMetric": toMetricInfo,
      "Period": toQuotaPeriod,
      "ErrorReason": toErrorReason,
    },
  }, root);
}

// refs: 4 - tags: output, named, interface
export interface MetricInfo {
  MetricNamespace?: string | null;
  MetricName?: string | null;
  MetricDimensions?: { [key: string]: string } | null;
  MetricStatisticRecommendation?: string | null;
}
function toMetricInfo(root: JSONValue): MetricInfo {
  return prt.readObj({
    required: {},
    optional: {
      "MetricNamespace": "s",
      "MetricName": "s",
      "MetricDimensions": x => prt.readMap(String, String, x),
      "MetricStatisticRecommendation": "s",
    },
  }, root);
}

// refs: 4 - tags: output, named, interface
export interface QuotaPeriod {
  PeriodValue?: number | null;
  PeriodUnit?: PeriodUnit | null;
}
function toQuotaPeriod(root: JSONValue): QuotaPeriod {
  return prt.readObj({
    required: {},
    optional: {
      "PeriodValue": "n",
      "PeriodUnit": toPeriodUnit,
    },
  }, root);
}

// refs: 4 - tags: output, named, enum
export type PeriodUnit =
| "MICROSECOND"
| "MILLISECOND"
| "SECOND"
| "MINUTE"
| "HOUR"
| "DAY"
| "WEEK"
;
function toPeriodUnit(root: JSONValue): PeriodUnit | null {
  return ( false
    || root == "MICROSECOND"
    || root == "MILLISECOND"
    || root == "SECOND"
    || root == "MINUTE"
    || root == "HOUR"
    || root == "DAY"
    || root == "WEEK"
  ) ? root : null;
}

// refs: 4 - tags: output, named, interface
export interface ErrorReason {
  ErrorCode?: ErrorCode | null;
  ErrorMessage?: string | null;
}
function toErrorReason(root: JSONValue): ErrorReason {
  return prt.readObj({
    required: {},
    optional: {
      "ErrorCode": toErrorCode,
      "ErrorMessage": "s",
    },
  }, root);
}

// refs: 4 - tags: output, named, enum
export type ErrorCode =
| "DEPENDENCY_ACCESS_DENIED_ERROR"
| "DEPENDENCY_THROTTLING_ERROR"
| "DEPENDENCY_SERVICE_ERROR"
| "SERVICE_QUOTA_NOT_AVAILABLE_ERROR"
;
function toErrorCode(root: JSONValue): ErrorCode | null {
  return ( false
    || root == "DEPENDENCY_ACCESS_DENIED_ERROR"
    || root == "DEPENDENCY_THROTTLING_ERROR"
    || root == "DEPENDENCY_SERVICE_ERROR"
    || root == "SERVICE_QUOTA_NOT_AVAILABLE_ERROR"
  ) ? root : null;
}

// refs: 1 - tags: output, named, enum
export type ServiceQuotaTemplateAssociationStatus =
| "ASSOCIATED"
| "DISASSOCIATED"
;
function toServiceQuotaTemplateAssociationStatus(root: JSONValue): ServiceQuotaTemplateAssociationStatus | null {
  return ( false
    || root == "ASSOCIATED"
    || root == "DISASSOCIATED"
  ) ? root : null;
}

// refs: 4 - tags: output, named, interface
export interface RequestedServiceQuotaChange {
  Id?: string | null;
  CaseId?: string | null;
  ServiceCode?: string | null;
  ServiceName?: string | null;
  QuotaCode?: string | null;
  QuotaName?: string | null;
  DesiredValue?: number | null;
  Status?: RequestStatus | null;
  Created?: Date | number | null;
  LastUpdated?: Date | number | null;
  Requester?: string | null;
  QuotaArn?: string | null;
  GlobalQuota?: boolean | null;
  Unit?: string | null;
}
function toRequestedServiceQuotaChange(root: JSONValue): RequestedServiceQuotaChange {
  return prt.readObj({
    required: {},
    optional: {
      "Id": "s",
      "CaseId": "s",
      "ServiceCode": "s",
      "ServiceName": "s",
      "QuotaCode": "s",
      "QuotaName": "s",
      "DesiredValue": "n",
      "Status": toRequestStatus,
      "Created": "d",
      "LastUpdated": "d",
      "Requester": "s",
      "QuotaArn": "s",
      "GlobalQuota": "b",
      "Unit": "s",
    },
  }, root);
}

// refs: 3 - tags: output, named, interface
export interface ServiceQuotaIncreaseRequestInTemplate {
  ServiceCode?: string | null;
  ServiceName?: string | null;
  QuotaCode?: string | null;
  QuotaName?: string | null;
  DesiredValue?: number | null;
  AwsRegion?: string | null;
  Unit?: string | null;
  GlobalQuota?: boolean | null;
}
function toServiceQuotaIncreaseRequestInTemplate(root: JSONValue): ServiceQuotaIncreaseRequestInTemplate {
  return prt.readObj({
    required: {},
    optional: {
      "ServiceCode": "s",
      "ServiceName": "s",
      "QuotaCode": "s",
      "QuotaName": "s",
      "DesiredValue": "n",
      "AwsRegion": "s",
      "Unit": "s",
      "GlobalQuota": "b",
    },
  }, root);
}

// refs: 1 - tags: output, named, interface
export interface ServiceInfo {
  ServiceCode?: string | null;
  ServiceName?: string | null;
}
function toServiceInfo(root: JSONValue): ServiceInfo {
  return prt.readObj({
    required: {},
    optional: {
      "ServiceCode": "s",
      "ServiceName": "s",
    },
  }, root);
}
