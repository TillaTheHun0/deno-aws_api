// Autogenerated API structures for: AWS Data Pipeline

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface ActivatePipelineInput {
  pipelineId: string;
  parameterValues?: ParameterValue[] | null;
  startTimestamp?: Date | number | null;
}

// refs: 1 - tags: named, input
export interface AddTagsInput {
  pipelineId: string;
  tags: Tag[];
}

// refs: 1 - tags: named, input
export interface CreatePipelineInput {
  name: string;
  uniqueId: string;
  description?: string | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface DeactivatePipelineInput {
  pipelineId: string;
  cancelActive?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeletePipelineInput {
  pipelineId: string;
}

// refs: 1 - tags: named, input
export interface DescribeObjectsInput {
  pipelineId: string;
  objectIds: string[];
  evaluateExpressions?: boolean | null;
  marker?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribePipelinesInput {
  pipelineIds: string[];
}

// refs: 1 - tags: named, input
export interface EvaluateExpressionInput {
  pipelineId: string;
  objectId: string;
  expression: string;
}

// refs: 1 - tags: named, input
export interface GetPipelineDefinitionInput {
  pipelineId: string;
  version?: string | null;
}

// refs: 1 - tags: named, input
export interface ListPipelinesInput {
  marker?: string | null;
}

// refs: 1 - tags: named, input
export interface PollForTaskInput {
  workerGroup: string;
  hostname?: string | null;
  instanceIdentity?: InstanceIdentity | null;
}

// refs: 1 - tags: named, input
export interface PutPipelineDefinitionInput {
  pipelineId: string;
  pipelineObjects: PipelineObject[];
  parameterObjects?: ParameterObject[] | null;
  parameterValues?: ParameterValue[] | null;
}

// refs: 1 - tags: named, input
export interface QueryObjectsInput {
  pipelineId: string;
  query?: Query | null;
  sphere: string;
  marker?: string | null;
  limit?: number | null;
}

// refs: 1 - tags: named, input
export interface RemoveTagsInput {
  pipelineId: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface ReportTaskProgressInput {
  taskId: string;
  fields?: Field[] | null;
}

// refs: 1 - tags: named, input
export interface ReportTaskRunnerHeartbeatInput {
  taskrunnerId: string;
  workerGroup?: string | null;
  hostname?: string | null;
}

// refs: 1 - tags: named, input
export interface SetStatusInput {
  pipelineId: string;
  objectIds: string[];
  status: string;
}

// refs: 1 - tags: named, input
export interface SetTaskStatusInput {
  taskId: string;
  taskStatus: TaskStatus;
  errorId?: string | null;
  errorMessage?: string | null;
  errorStackTrace?: string | null;
}

// refs: 1 - tags: named, input
export interface ValidatePipelineDefinitionInput {
  pipelineId: string;
  pipelineObjects: PipelineObject[];
  parameterObjects?: ParameterObject[] | null;
  parameterValues?: ParameterValue[] | null;
}

// refs: 1 - tags: named, output
export interface ActivatePipelineOutput {
}

// refs: 1 - tags: named, output
export interface AddTagsOutput {
}

// refs: 1 - tags: named, output
export interface CreatePipelineOutput {
  pipelineId: string;
}

// refs: 1 - tags: named, output
export interface DeactivatePipelineOutput {
}

// refs: 1 - tags: named, output
export interface DescribeObjectsOutput {
  pipelineObjects: PipelineObject[];
  marker?: string | null;
  hasMoreResults?: boolean | null;
}

// refs: 1 - tags: named, output
export interface DescribePipelinesOutput {
  pipelineDescriptionList: PipelineDescription[];
}

// refs: 1 - tags: named, output
export interface EvaluateExpressionOutput {
  evaluatedExpression: string;
}

// refs: 1 - tags: named, output
export interface GetPipelineDefinitionOutput {
  pipelineObjects?: PipelineObject[] | null;
  parameterObjects?: ParameterObject[] | null;
  parameterValues?: ParameterValue[] | null;
}

// refs: 1 - tags: named, output
export interface ListPipelinesOutput {
  pipelineIdList: PipelineIdName[];
  marker?: string | null;
  hasMoreResults?: boolean | null;
}

// refs: 1 - tags: named, output
export interface PollForTaskOutput {
  taskObject?: TaskObject | null;
}

// refs: 1 - tags: named, output
export interface PutPipelineDefinitionOutput {
  validationErrors?: ValidationError[] | null;
  validationWarnings?: ValidationWarning[] | null;
  errored: boolean;
}

// refs: 1 - tags: named, output
export interface QueryObjectsOutput {
  ids?: string[] | null;
  marker?: string | null;
  hasMoreResults?: boolean | null;
}

// refs: 1 - tags: named, output
export interface RemoveTagsOutput {
}

// refs: 1 - tags: named, output
export interface ReportTaskProgressOutput {
  canceled: boolean;
}

// refs: 1 - tags: named, output
export interface ReportTaskRunnerHeartbeatOutput {
  terminate: boolean;
}

// refs: 1 - tags: named, output
export interface SetTaskStatusOutput {
}

// refs: 1 - tags: named, output
export interface ValidatePipelineDefinitionOutput {
  validationErrors?: ValidationError[] | null;
  validationWarnings?: ValidationWarning[] | null;
  errored: boolean;
}

// refs: 4 - tags: input, named, interface, output
export interface ParameterValue {
  id: string;
  stringValue: string;
}

// refs: 3 - tags: input, named, interface, output
export interface Tag {
  key: string;
  value: string;
}

// refs: 1 - tags: input, named, interface
export interface InstanceIdentity {
  document?: string | null;
  signature?: string | null;
}

// refs: 5 - tags: input, named, interface, output
export interface PipelineObject {
  id: string;
  name: string;
  fields: Field[];
}

// refs: 7 - tags: input, named, interface, output
export interface Field {
  key: string;
  stringValue?: string | null;
  refValue?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface ParameterObject {
  id: string;
  attributes: ParameterAttribute[];
}

// refs: 3 - tags: input, named, interface, output
export interface ParameterAttribute {
  key: string;
  stringValue: string;
}

// refs: 1 - tags: input, named, interface
export interface Query {
  selectors?: Selector[] | null;
}

// refs: 1 - tags: input, named, interface
export interface Selector {
  fieldName?: string | null;
  operator?: Operator | null;
}

// refs: 1 - tags: input, named, interface
export interface Operator {
  type?: OperatorType | null;
  values?: string[] | null;
}

// refs: 1 - tags: input, named, enum
export type OperatorType =
| "EQ"
| "REF_EQ"
| "LE"
| "GE"
| "BETWEEN"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type TaskStatus =
| "FINISHED"
| "FAILED"
| "FALSE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface PipelineDescription {
  pipelineId: string;
  name: string;
  fields: Field[];
  description?: string | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: output, named, interface
export interface PipelineIdName {
  id?: string | null;
  name?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface TaskObject {
  taskId?: string | null;
  pipelineId?: string | null;
  attemptId?: string | null;
  objects?: { [key: string]: PipelineObject | null | undefined } | null;
}

// refs: 2 - tags: output, named, interface
export interface ValidationError {
  id?: string | null;
  errors?: string[] | null;
}

// refs: 2 - tags: output, named, interface
export interface ValidationWarning {
  id?: string | null;
  warnings?: string[] | null;
}
