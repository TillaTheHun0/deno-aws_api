// Autogenerated API structures for: AWS Lake Formation

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface BatchGrantPermissionsRequest {
  CatalogId?: string | null;
  Entries: BatchPermissionsRequestEntry[];
}

// refs: 1 - tags: named, input
export interface BatchRevokePermissionsRequest {
  CatalogId?: string | null;
  Entries: BatchPermissionsRequestEntry[];
}

// refs: 1 - tags: named, input
export interface DeregisterResourceRequest {
  ResourceArn: string;
}

// refs: 1 - tags: named, input
export interface DescribeResourceRequest {
  ResourceArn: string;
}

// refs: 1 - tags: named, input
export interface GetDataLakeSettingsRequest {
  CatalogId?: string | null;
}

// refs: 1 - tags: named, input
export interface GetEffectivePermissionsForPathRequest {
  CatalogId?: string | null;
  ResourceArn: string;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GrantPermissionsRequest {
  CatalogId?: string | null;
  Principal: DataLakePrincipal;
  Resource: Resource;
  Permissions: Permission[];
  PermissionsWithGrantOption?: Permission[] | null;
}

// refs: 1 - tags: named, input
export interface ListPermissionsRequest {
  CatalogId?: string | null;
  Principal?: DataLakePrincipal | null;
  ResourceType?: DataLakeResourceType | null;
  Resource?: Resource | null;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListResourcesRequest {
  FilterConditionList?: FilterCondition[] | null;
  MaxResults?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface PutDataLakeSettingsRequest {
  CatalogId?: string | null;
  DataLakeSettings: DataLakeSettings;
}

// refs: 1 - tags: named, input
export interface RegisterResourceRequest {
  ResourceArn: string;
  UseServiceLinkedRole?: boolean | null;
  RoleArn?: string | null;
}

// refs: 1 - tags: named, input
export interface RevokePermissionsRequest {
  CatalogId?: string | null;
  Principal: DataLakePrincipal;
  Resource: Resource;
  Permissions: Permission[];
  PermissionsWithGrantOption?: Permission[] | null;
}

// refs: 1 - tags: named, input
export interface UpdateResourceRequest {
  RoleArn: string;
  ResourceArn: string;
}

// refs: 1 - tags: named, output
export interface BatchGrantPermissionsResponse {
  Failures?: BatchPermissionsFailureEntry[] | null;
}

// refs: 1 - tags: named, output
export interface BatchRevokePermissionsResponse {
  Failures?: BatchPermissionsFailureEntry[] | null;
}

// refs: 1 - tags: named, output
export interface DeregisterResourceResponse {
}

// refs: 1 - tags: named, output
export interface DescribeResourceResponse {
  ResourceInfo?: ResourceInfo | null;
}

// refs: 1 - tags: named, output
export interface GetDataLakeSettingsResponse {
  DataLakeSettings?: DataLakeSettings | null;
}

// refs: 1 - tags: named, output
export interface GetEffectivePermissionsForPathResponse {
  Permissions?: PrincipalResourcePermissions[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GrantPermissionsResponse {
}

// refs: 1 - tags: named, output
export interface ListPermissionsResponse {
  PrincipalResourcePermissions?: PrincipalResourcePermissions[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListResourcesResponse {
  ResourceInfoList?: ResourceInfo[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface PutDataLakeSettingsResponse {
}

// refs: 1 - tags: named, output
export interface RegisterResourceResponse {
}

// refs: 1 - tags: named, output
export interface RevokePermissionsResponse {
}

// refs: 1 - tags: named, output
export interface UpdateResourceResponse {
}

// refs: 4 - tags: input, named, interface, output
export interface BatchPermissionsRequestEntry {
  Id: string;
  Principal?: DataLakePrincipal | null;
  Resource?: Resource | null;
  Permissions?: Permission[] | null;
  PermissionsWithGrantOption?: Permission[] | null;
}

// refs: 15 - tags: input, named, interface, output
export interface DataLakePrincipal {
  DataLakePrincipalIdentifier?: string | null;
}

// refs: 9 - tags: input, named, interface, output
export interface Resource {
  Catalog?: CatalogResource | null;
  Database?: DatabaseResource | null;
  Table?: TableResource | null;
  TableWithColumns?: TableWithColumnsResource | null;
  DataLocation?: DataLocationResource | null;
}

// refs: 9 - tags: input, named, interface, output
export interface CatalogResource {
}

// refs: 9 - tags: input, named, interface, output
export interface DatabaseResource {
  CatalogId?: string | null;
  Name: string;
}

// refs: 9 - tags: input, named, interface, output
export interface TableResource {
  CatalogId?: string | null;
  DatabaseName: string;
  Name?: string | null;
  TableWildcard?: TableWildcard | null;
}

// refs: 9 - tags: input, named, interface, output
export interface TableWildcard {
}

// refs: 9 - tags: input, named, interface, output
export interface TableWithColumnsResource {
  CatalogId?: string | null;
  DatabaseName: string;
  Name: string;
  ColumnNames?: string[] | null;
  ColumnWildcard?: ColumnWildcard | null;
}

// refs: 9 - tags: input, named, interface, output
export interface ColumnWildcard {
  ExcludedColumnNames?: string[] | null;
}

// refs: 9 - tags: input, named, interface, output
export interface DataLocationResource {
  CatalogId?: string | null;
  ResourceArn: string;
}

// refs: 20 - tags: input, named, enum, output
export type Permission =
| "ALL"
| "SELECT"
| "ALTER"
| "DROP"
| "DELETE"
| "INSERT"
| "DESCRIBE"
| "CREATE_DATABASE"
| "CREATE_TABLE"
| "DATA_LOCATION_ACCESS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type DataLakeResourceType =
| "CATALOG"
| "DATABASE"
| "TABLE"
| "DATA_LOCATION"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface FilterCondition {
  Field?: FieldNameString | null;
  ComparisonOperator?: ComparisonOperator | null;
  StringValueList?: string[] | null;
}

// refs: 1 - tags: input, named, enum
export type FieldNameString =
| "RESOURCE_ARN"
| "ROLE_ARN"
| "LAST_MODIFIED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ComparisonOperator =
| "EQ"
| "NE"
| "LE"
| "LT"
| "GE"
| "GT"
| "CONTAINS"
| "NOT_CONTAINS"
| "BEGINS_WITH"
| "IN"
| "BETWEEN"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface, output
export interface DataLakeSettings {
  DataLakeAdmins?: DataLakePrincipal[] | null;
  CreateDatabaseDefaultPermissions?: PrincipalPermissions[] | null;
  CreateTableDefaultPermissions?: PrincipalPermissions[] | null;
  TrustedResourceOwners?: string[] | null;
}

// refs: 4 - tags: input, named, interface, output
export interface PrincipalPermissions {
  Principal?: DataLakePrincipal | null;
  Permissions?: Permission[] | null;
}

// refs: 2 - tags: output, named, interface
export interface BatchPermissionsFailureEntry {
  RequestEntry?: BatchPermissionsRequestEntry | null;
  Error?: ErrorDetail | null;
}

// refs: 2 - tags: output, named, interface
export interface ErrorDetail {
  ErrorCode?: string | null;
  ErrorMessage?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface ResourceInfo {
  ResourceArn?: string | null;
  RoleArn?: string | null;
  LastModified?: Date | number | null;
}

// refs: 2 - tags: output, named, interface
export interface PrincipalResourcePermissions {
  Principal?: DataLakePrincipal | null;
  Resource?: Resource | null;
  Permissions?: Permission[] | null;
  PermissionsWithGrantOption?: Permission[] | null;
  AdditionalDetails?: DetailsMap | null;
}

// refs: 2 - tags: output, named, interface
export interface DetailsMap {
  ResourceShare?: string[] | null;
}
