// Autogenerated API structures for: Amazon Lex Runtime Service

import * as cmnP from "../../encoding/common.ts";
import * as jsonP from "../../encoding/json.ts";

// refs: 1 - tags: named, input
export interface DeleteSessionRequest {
  botName: string;
  botAlias: string;
  userId: string;
}

// refs: 1 - tags: named, input
export interface GetSessionRequest {
  botName: string;
  botAlias: string;
  userId: string;
  checkpointLabelFilter?: string | null;
}

// refs: 1 - tags: named, input
export interface PostContentRequest {
  botName: string;
  botAlias: string;
  userId: string;
  sessionAttributes?: jsonP.JSONValue | null;
  requestAttributes?: jsonP.JSONValue | null;
  contentType: string;
  accept?: string | null;
  inputStream: Uint8Array | string;
  activeContexts?: jsonP.JSONValue | null;
}

// refs: 1 - tags: named, input
export interface PostTextRequest {
  botName: string;
  botAlias: string;
  userId: string;
  sessionAttributes?: { [key: string]: string | null | undefined } | null;
  requestAttributes?: { [key: string]: string | null | undefined } | null;
  inputText: string;
  activeContexts?: ActiveContext[] | null;
}

// refs: 1 - tags: named, input
export interface PutSessionRequest {
  botName: string;
  botAlias: string;
  userId: string;
  sessionAttributes?: { [key: string]: string | null | undefined } | null;
  dialogAction?: DialogAction | null;
  recentIntentSummaryView?: IntentSummary[] | null;
  accept?: string | null;
  activeContexts?: ActiveContext[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteSessionResponse {
  botName?: string | null;
  botAlias?: string | null;
  userId?: string | null;
  sessionId?: string | null;
}

// refs: 1 - tags: named, output
export interface GetSessionResponse {
  recentIntentSummaryView?: IntentSummary[] | null;
  sessionAttributes?: { [key: string]: string | null | undefined } | null;
  sessionId?: string | null;
  dialogAction?: DialogAction | null;
  activeContexts?: ActiveContext[] | null;
}

// refs: 1 - tags: named, output
export interface PostContentResponse {
  contentType?: string | null;
  intentName?: string | null;
  nluIntentConfidence?: jsonP.JSONValue | null;
  alternativeIntents?: jsonP.JSONValue | null;
  slots?: jsonP.JSONValue | null;
  sessionAttributes?: jsonP.JSONValue | null;
  sentimentResponse?: string | null;
  message?: string | null;
  messageFormat?: MessageFormatType | null;
  dialogState?: DialogState | null;
  slotToElicit?: string | null;
  inputTranscript?: string | null;
  audioStream?: Uint8Array | string | null;
  botVersion?: string | null;
  sessionId?: string | null;
  activeContexts?: jsonP.JSONValue | null;
}

// refs: 1 - tags: named, output
export interface PostTextResponse {
  intentName?: string | null;
  nluIntentConfidence?: IntentConfidence | null;
  alternativeIntents?: PredictedIntent[] | null;
  slots?: { [key: string]: string | null | undefined } | null;
  sessionAttributes?: { [key: string]: string | null | undefined } | null;
  message?: string | null;
  sentimentResponse?: SentimentResponse | null;
  messageFormat?: MessageFormatType | null;
  dialogState?: DialogState | null;
  slotToElicit?: string | null;
  responseCard?: ResponseCard | null;
  sessionId?: string | null;
  botVersion?: string | null;
  activeContexts?: ActiveContext[] | null;
}

// refs: 1 - tags: named, output
export interface PutSessionResponse {
  contentType?: string | null;
  intentName?: string | null;
  slots?: jsonP.JSONValue | null;
  sessionAttributes?: jsonP.JSONValue | null;
  message?: string | null;
  messageFormat?: MessageFormatType | null;
  dialogState?: DialogState | null;
  slotToElicit?: string | null;
  audioStream?: Uint8Array | string | null;
  sessionId?: string | null;
  activeContexts?: jsonP.JSONValue | null;
}

// refs: 4 - tags: input, named, interface, output
export interface ActiveContext {
  name: string;
  timeToLive: ActiveContextTimeToLive;
  parameters: { [key: string]: string | null | undefined };
}

// refs: 4 - tags: input, named, interface, output
export interface ActiveContextTimeToLive {
  timeToLiveInSeconds?: number | null;
  turnsToLive?: number | null;
}

// refs: 2 - tags: input, named, interface, output
export interface DialogAction {
  type: DialogActionType;
  intentName?: string | null;
  slots?: { [key: string]: string | null | undefined } | null;
  slotToElicit?: string | null;
  fulfillmentState?: FulfillmentState | null;
  message?: string | null;
  messageFormat?: MessageFormatType | null;
}

// refs: 4 - tags: input, named, enum, output
export type DialogActionType =
| "ElicitIntent"
| "ConfirmIntent"
| "ElicitSlot"
| "Close"
| "Delegate"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type FulfillmentState =
| "Fulfilled"
| "Failed"
| "ReadyForFulfillment"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, enum, output
export type MessageFormatType =
| "PlainText"
| "CustomPayload"
| "SSML"
| "Composite"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface, output
export interface IntentSummary {
  intentName?: string | null;
  checkpointLabel?: string | null;
  slots?: { [key: string]: string | null | undefined } | null;
  confirmationStatus?: ConfirmationStatus | null;
  dialogActionType: DialogActionType;
  fulfillmentState?: FulfillmentState | null;
  slotToElicit?: string | null;
}

// refs: 2 - tags: input, named, enum, output
export type ConfirmationStatus =
| "None"
| "Confirmed"
| "Denied"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, enum
export type DialogState =
| "ElicitIntent"
| "ConfirmIntent"
| "ElicitSlot"
| "Fulfilled"
| "ReadyForFulfillment"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface IntentConfidence {
  score?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface PredictedIntent {
  intentName?: string | null;
  nluIntentConfidence?: IntentConfidence | null;
  slots?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: output, named, interface
export interface SentimentResponse {
  sentimentLabel?: string | null;
  sentimentScore?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ResponseCard {
  version?: string | null;
  contentType?: ContentType | null;
  genericAttachments?: GenericAttachment[] | null;
}

// refs: 1 - tags: output, named, enum
export type ContentType =
| "application/vnd.amazonaws.card.generic"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface GenericAttachment {
  title?: string | null;
  subTitle?: string | null;
  attachmentLinkUrl?: string | null;
  imageUrl?: string | null;
  buttons?: Button[] | null;
}

// refs: 1 - tags: output, named, interface
export interface Button {
  text: string;
  value: string;
}
