// Autogenerated API client for: Amazon DynamoDB

import type { ServiceClient, ApiFactory, ApiMetadata } from '../../client/common.ts';
interface RequestConfig {
  abortSignal?: AbortSignal;
}

import { JSONObject, JSONValue } from '../../encoding/json.ts';
import * as prt from "../../encoding/json.ts";

import * as uuidv4 from "https://deno.land/std@0.71.0/uuid/v4.ts";
function generateIdemptToken() {
  return uuidv4.generate();
}

export default class DynamoDB {
  #client: ServiceClient;
  constructor(apiFactory: ApiFactory) {
    this.#client = apiFactory.buildServiceClient(DynamoDB.ApiMetadata);
  }

  static ApiMetadata: ApiMetadata = {
    "apiVersion": "2012-08-10",
    "endpointPrefix": "dynamodb",
    "jsonVersion": "1.0",
    "protocol": "json",
    "serviceAbbreviation": "DynamoDB",
    "serviceFullName": "Amazon DynamoDB",
    "serviceId": "DynamoDB",
    "signatureVersion": "v4",
    "targetPrefix": "DynamoDB_20120810",
    "uid": "dynamodb-2012-08-10"
  };

  async batchGetItem(
    {abortSignal, ...params}: RequestConfig & BatchGetItemInput,
  ): Promise<BatchGetItemOutput> {
    const body: JSONObject = {...params,
    RequestItems: prt.serializeMap(params["RequestItems"], x => fromKeysAndAttributes(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "BatchGetItem",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Responses": x => prt.readMap(String, l => Array.isArray(l) ? l.map(y => prt.readMap(String, toAttributeValue, y)!) : [], x),
        "UnprocessedKeys": x => prt.readMap(String, toKeysAndAttributes, x),
        "ConsumedCapacity": [toConsumedCapacity],
      },
    }, await resp.json());
  }

  async batchWriteItem(
    {abortSignal, ...params}: RequestConfig & BatchWriteItemInput,
  ): Promise<BatchWriteItemOutput> {
    const body: JSONObject = {...params,
    RequestItems: prt.serializeMap(params["RequestItems"], x => x.map(fromWriteRequest)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "BatchWriteItem",
    });
    return prt.readObj({
      required: {},
      optional: {
        "UnprocessedItems": x => prt.readMap(String, l => Array.isArray(l) ? l.map(toWriteRequest) : [], x),
        "ItemCollectionMetrics": x => prt.readMap(String, l => Array.isArray(l) ? l.map(toItemCollectionMetrics) : [], x),
        "ConsumedCapacity": [toConsumedCapacity],
      },
    }, await resp.json());
  }

  async createBackup(
    {abortSignal, ...params}: RequestConfig & CreateBackupInput,
  ): Promise<CreateBackupOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "CreateBackup",
    });
    return prt.readObj({
      required: {},
      optional: {
        "BackupDetails": toBackupDetails,
      },
    }, await resp.json());
  }

  async createGlobalTable(
    {abortSignal, ...params}: RequestConfig & CreateGlobalTableInput,
  ): Promise<CreateGlobalTableOutput> {
    const body: JSONObject = {...params,
    ReplicationGroup: params["ReplicationGroup"]?.map(x => fromReplica(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "CreateGlobalTable",
    });
    return prt.readObj({
      required: {},
      optional: {
        "GlobalTableDescription": toGlobalTableDescription,
      },
    }, await resp.json());
  }

  async createTable(
    {abortSignal, ...params}: RequestConfig & CreateTableInput,
  ): Promise<CreateTableOutput> {
    const body: JSONObject = {...params,
    AttributeDefinitions: params["AttributeDefinitions"]?.map(x => fromAttributeDefinition(x)),
    KeySchema: params["KeySchema"]?.map(x => fromKeySchemaElement(x)),
    LocalSecondaryIndexes: params["LocalSecondaryIndexes"]?.map(x => fromLocalSecondaryIndex(x)),
    GlobalSecondaryIndexes: params["GlobalSecondaryIndexes"]?.map(x => fromGlobalSecondaryIndex(x)),
    ProvisionedThroughput: fromProvisionedThroughput(params["ProvisionedThroughput"]),
    StreamSpecification: fromStreamSpecification(params["StreamSpecification"]),
    SSESpecification: fromSSESpecification(params["SSESpecification"]),
    Tags: params["Tags"]?.map(x => fromTag(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "CreateTable",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableDescription": toTableDescription,
      },
    }, await resp.json());
  }

  async deleteBackup(
    {abortSignal, ...params}: RequestConfig & DeleteBackupInput,
  ): Promise<DeleteBackupOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DeleteBackup",
    });
    return prt.readObj({
      required: {},
      optional: {
        "BackupDescription": toBackupDescription,
      },
    }, await resp.json());
  }

  async deleteItem(
    {abortSignal, ...params}: RequestConfig & DeleteItemInput,
  ): Promise<DeleteItemOutput> {
    const body: JSONObject = {...params,
    Key: prt.serializeMap(params["Key"], x => fromAttributeValue(x)),
    Expected: prt.serializeMap(params["Expected"], x => fromExpectedAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(params["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DeleteItem",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Attributes": x => prt.readMap(String, toAttributeValue, x),
        "ConsumedCapacity": toConsumedCapacity,
        "ItemCollectionMetrics": toItemCollectionMetrics,
      },
    }, await resp.json());
  }

  async deleteTable(
    {abortSignal, ...params}: RequestConfig & DeleteTableInput,
  ): Promise<DeleteTableOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DeleteTable",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableDescription": toTableDescription,
      },
    }, await resp.json());
  }

  async describeBackup(
    {abortSignal, ...params}: RequestConfig & DescribeBackupInput,
  ): Promise<DescribeBackupOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeBackup",
    });
    return prt.readObj({
      required: {},
      optional: {
        "BackupDescription": toBackupDescription,
      },
    }, await resp.json());
  }

  async describeContinuousBackups(
    {abortSignal, ...params}: RequestConfig & DescribeContinuousBackupsInput,
  ): Promise<DescribeContinuousBackupsOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeContinuousBackups",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ContinuousBackupsDescription": toContinuousBackupsDescription,
      },
    }, await resp.json());
  }

  async describeContributorInsights(
    {abortSignal, ...params}: RequestConfig & DescribeContributorInsightsInput,
  ): Promise<DescribeContributorInsightsOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeContributorInsights",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableName": "s",
        "IndexName": "s",
        "ContributorInsightsRuleList": ["s"],
        "ContributorInsightsStatus": toContributorInsightsStatus,
        "LastUpdateDateTime": "d",
        "FailureException": toFailureException,
      },
    }, await resp.json());
  }

  async describeEndpoints(
    {abortSignal, ...params}: RequestConfig & DescribeEndpointsRequest = {},
  ): Promise<DescribeEndpointsResponse> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeEndpoints",
    });
    return prt.readObj({
      required: {
        "Endpoints": [toEndpoint],
      },
      optional: {},
    }, await resp.json());
  }

  async describeGlobalTable(
    {abortSignal, ...params}: RequestConfig & DescribeGlobalTableInput,
  ): Promise<DescribeGlobalTableOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeGlobalTable",
    });
    return prt.readObj({
      required: {},
      optional: {
        "GlobalTableDescription": toGlobalTableDescription,
      },
    }, await resp.json());
  }

  async describeGlobalTableSettings(
    {abortSignal, ...params}: RequestConfig & DescribeGlobalTableSettingsInput,
  ): Promise<DescribeGlobalTableSettingsOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeGlobalTableSettings",
    });
    return prt.readObj({
      required: {},
      optional: {
        "GlobalTableName": "s",
        "ReplicaSettings": [toReplicaSettingsDescription],
      },
    }, await resp.json());
  }

  async describeLimits(
    {abortSignal, ...params}: RequestConfig & DescribeLimitsInput = {},
  ): Promise<DescribeLimitsOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeLimits",
    });
    return prt.readObj({
      required: {},
      optional: {
        "AccountMaxReadCapacityUnits": "n",
        "AccountMaxWriteCapacityUnits": "n",
        "TableMaxReadCapacityUnits": "n",
        "TableMaxWriteCapacityUnits": "n",
      },
    }, await resp.json());
  }

  async describeTable(
    {abortSignal, ...params}: RequestConfig & DescribeTableInput,
  ): Promise<DescribeTableOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeTable",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Table": toTableDescription,
      },
    }, await resp.json());
  }

  async describeTableReplicaAutoScaling(
    {abortSignal, ...params}: RequestConfig & DescribeTableReplicaAutoScalingInput,
  ): Promise<DescribeTableReplicaAutoScalingOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeTableReplicaAutoScaling",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableAutoScalingDescription": toTableAutoScalingDescription,
      },
    }, await resp.json());
  }

  async describeTimeToLive(
    {abortSignal, ...params}: RequestConfig & DescribeTimeToLiveInput,
  ): Promise<DescribeTimeToLiveOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "DescribeTimeToLive",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TimeToLiveDescription": toTimeToLiveDescription,
      },
    }, await resp.json());
  }

  async getItem(
    {abortSignal, ...params}: RequestConfig & GetItemInput,
  ): Promise<GetItemOutput> {
    const body: JSONObject = {...params,
    Key: prt.serializeMap(params["Key"], x => fromAttributeValue(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "GetItem",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Item": x => prt.readMap(String, toAttributeValue, x),
        "ConsumedCapacity": toConsumedCapacity,
      },
    }, await resp.json());
  }

  async listBackups(
    {abortSignal, ...params}: RequestConfig & ListBackupsInput = {},
  ): Promise<ListBackupsOutput> {
    const body: JSONObject = {...params,
    TimeRangeLowerBound: prt.serializeDate_unixTimestamp(params["TimeRangeLowerBound"]),
    TimeRangeUpperBound: prt.serializeDate_unixTimestamp(params["TimeRangeUpperBound"]),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListBackups",
    });
    return prt.readObj({
      required: {},
      optional: {
        "BackupSummaries": [toBackupSummary],
        "LastEvaluatedBackupArn": "s",
      },
    }, await resp.json());
  }

  async listContributorInsights(
    {abortSignal, ...params}: RequestConfig & ListContributorInsightsInput = {},
  ): Promise<ListContributorInsightsOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListContributorInsights",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ContributorInsightsSummaries": [toContributorInsightsSummary],
        "NextToken": "s",
      },
    }, await resp.json());
  }

  async listGlobalTables(
    {abortSignal, ...params}: RequestConfig & ListGlobalTablesInput = {},
  ): Promise<ListGlobalTablesOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListGlobalTables",
    });
    return prt.readObj({
      required: {},
      optional: {
        "GlobalTables": [toGlobalTable],
        "LastEvaluatedGlobalTableName": "s",
      },
    }, await resp.json());
  }

  async listTables(
    {abortSignal, ...params}: RequestConfig & ListTablesInput = {},
  ): Promise<ListTablesOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListTables",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableNames": ["s"],
        "LastEvaluatedTableName": "s",
      },
    }, await resp.json());
  }

  async listTagsOfResource(
    {abortSignal, ...params}: RequestConfig & ListTagsOfResourceInput,
  ): Promise<ListTagsOfResourceOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "ListTagsOfResource",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Tags": [toTag],
        "NextToken": "s",
      },
    }, await resp.json());
  }

  async putItem(
    {abortSignal, ...params}: RequestConfig & PutItemInput,
  ): Promise<PutItemOutput> {
    const body: JSONObject = {...params,
    Item: prt.serializeMap(params["Item"], x => fromAttributeValue(x)),
    Expected: prt.serializeMap(params["Expected"], x => fromExpectedAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(params["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "PutItem",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Attributes": x => prt.readMap(String, toAttributeValue, x),
        "ConsumedCapacity": toConsumedCapacity,
        "ItemCollectionMetrics": toItemCollectionMetrics,
      },
    }, await resp.json());
  }

  async query(
    {abortSignal, ...params}: RequestConfig & QueryInput,
  ): Promise<QueryOutput> {
    const body: JSONObject = {...params,
    KeyConditions: prt.serializeMap(params["KeyConditions"], x => fromCondition(x)),
    QueryFilter: prt.serializeMap(params["QueryFilter"], x => fromCondition(x)),
    ExclusiveStartKey: prt.serializeMap(params["ExclusiveStartKey"], x => fromAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(params["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "Query",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Items": [x => prt.readMap(String, toAttributeValue, x)],
        "Count": "n",
        "ScannedCount": "n",
        "LastEvaluatedKey": x => prt.readMap(String, toAttributeValue, x),
        "ConsumedCapacity": toConsumedCapacity,
      },
    }, await resp.json());
  }

  async restoreTableFromBackup(
    {abortSignal, ...params}: RequestConfig & RestoreTableFromBackupInput,
  ): Promise<RestoreTableFromBackupOutput> {
    const body: JSONObject = {...params,
    GlobalSecondaryIndexOverride: params["GlobalSecondaryIndexOverride"]?.map(x => fromGlobalSecondaryIndex(x)),
    LocalSecondaryIndexOverride: params["LocalSecondaryIndexOverride"]?.map(x => fromLocalSecondaryIndex(x)),
    ProvisionedThroughputOverride: fromProvisionedThroughput(params["ProvisionedThroughputOverride"]),
    SSESpecificationOverride: fromSSESpecification(params["SSESpecificationOverride"]),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "RestoreTableFromBackup",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableDescription": toTableDescription,
      },
    }, await resp.json());
  }

  async restoreTableToPointInTime(
    {abortSignal, ...params}: RequestConfig & RestoreTableToPointInTimeInput,
  ): Promise<RestoreTableToPointInTimeOutput> {
    const body: JSONObject = {...params,
    RestoreDateTime: prt.serializeDate_unixTimestamp(params["RestoreDateTime"]),
    GlobalSecondaryIndexOverride: params["GlobalSecondaryIndexOverride"]?.map(x => fromGlobalSecondaryIndex(x)),
    LocalSecondaryIndexOverride: params["LocalSecondaryIndexOverride"]?.map(x => fromLocalSecondaryIndex(x)),
    ProvisionedThroughputOverride: fromProvisionedThroughput(params["ProvisionedThroughputOverride"]),
    SSESpecificationOverride: fromSSESpecification(params["SSESpecificationOverride"]),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "RestoreTableToPointInTime",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableDescription": toTableDescription,
      },
    }, await resp.json());
  }

  async scan(
    {abortSignal, ...params}: RequestConfig & ScanInput,
  ): Promise<ScanOutput> {
    const body: JSONObject = {...params,
    ScanFilter: prt.serializeMap(params["ScanFilter"], x => fromCondition(x)),
    ExclusiveStartKey: prt.serializeMap(params["ExclusiveStartKey"], x => fromAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(params["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "Scan",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Items": [x => prt.readMap(String, toAttributeValue, x)],
        "Count": "n",
        "ScannedCount": "n",
        "LastEvaluatedKey": x => prt.readMap(String, toAttributeValue, x),
        "ConsumedCapacity": toConsumedCapacity,
      },
    }, await resp.json());
  }

  async tagResource(
    {abortSignal, ...params}: RequestConfig & TagResourceInput,
  ): Promise<void> {
    const body: JSONObject = {...params,
    Tags: params["Tags"]?.map(x => fromTag(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "TagResource",
    });
  }

  async transactGetItems(
    {abortSignal, ...params}: RequestConfig & TransactGetItemsInput,
  ): Promise<TransactGetItemsOutput> {
    const body: JSONObject = {...params,
    TransactItems: params["TransactItems"]?.map(x => fromTransactGetItem(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "TransactGetItems",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ConsumedCapacity": [toConsumedCapacity],
        "Responses": [toItemResponse],
      },
    }, await resp.json());
  }

  async transactWriteItems(
    {abortSignal, ...params}: RequestConfig & TransactWriteItemsInput,
  ): Promise<TransactWriteItemsOutput> {
    const body: JSONObject = {...params,
    TransactItems: params["TransactItems"]?.map(x => fromTransactWriteItem(x)),
    ClientRequestToken: params["ClientRequestToken"] ?? generateIdemptToken(),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "TransactWriteItems",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ConsumedCapacity": [toConsumedCapacity],
        "ItemCollectionMetrics": x => prt.readMap(String, l => Array.isArray(l) ? l.map(toItemCollectionMetrics) : [], x),
      },
    }, await resp.json());
  }

  async untagResource(
    {abortSignal, ...params}: RequestConfig & UntagResourceInput,
  ): Promise<void> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UntagResource",
    });
  }

  async updateContinuousBackups(
    {abortSignal, ...params}: RequestConfig & UpdateContinuousBackupsInput,
  ): Promise<UpdateContinuousBackupsOutput> {
    const body: JSONObject = {...params,
    PointInTimeRecoverySpecification: fromPointInTimeRecoverySpecification(params["PointInTimeRecoverySpecification"]),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UpdateContinuousBackups",
    });
    return prt.readObj({
      required: {},
      optional: {
        "ContinuousBackupsDescription": toContinuousBackupsDescription,
      },
    }, await resp.json());
  }

  async updateContributorInsights(
    {abortSignal, ...params}: RequestConfig & UpdateContributorInsightsInput,
  ): Promise<UpdateContributorInsightsOutput> {
    const body: JSONObject = {...params,
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UpdateContributorInsights",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableName": "s",
        "IndexName": "s",
        "ContributorInsightsStatus": toContributorInsightsStatus,
      },
    }, await resp.json());
  }

  async updateGlobalTable(
    {abortSignal, ...params}: RequestConfig & UpdateGlobalTableInput,
  ): Promise<UpdateGlobalTableOutput> {
    const body: JSONObject = {...params,
    ReplicaUpdates: params["ReplicaUpdates"]?.map(x => fromReplicaUpdate(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UpdateGlobalTable",
    });
    return prt.readObj({
      required: {},
      optional: {
        "GlobalTableDescription": toGlobalTableDescription,
      },
    }, await resp.json());
  }

  async updateGlobalTableSettings(
    {abortSignal, ...params}: RequestConfig & UpdateGlobalTableSettingsInput,
  ): Promise<UpdateGlobalTableSettingsOutput> {
    const body: JSONObject = {...params,
    GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: fromAutoScalingSettingsUpdate(params["GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate"]),
    GlobalTableGlobalSecondaryIndexSettingsUpdate: params["GlobalTableGlobalSecondaryIndexSettingsUpdate"]?.map(x => fromGlobalTableGlobalSecondaryIndexSettingsUpdate(x)),
    ReplicaSettingsUpdate: params["ReplicaSettingsUpdate"]?.map(x => fromReplicaSettingsUpdate(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UpdateGlobalTableSettings",
    });
    return prt.readObj({
      required: {},
      optional: {
        "GlobalTableName": "s",
        "ReplicaSettings": [toReplicaSettingsDescription],
      },
    }, await resp.json());
  }

  async updateItem(
    {abortSignal, ...params}: RequestConfig & UpdateItemInput,
  ): Promise<UpdateItemOutput> {
    const body: JSONObject = {...params,
    Key: prt.serializeMap(params["Key"], x => fromAttributeValue(x)),
    AttributeUpdates: prt.serializeMap(params["AttributeUpdates"], x => fromAttributeValueUpdate(x)),
    Expected: prt.serializeMap(params["Expected"], x => fromExpectedAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(params["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UpdateItem",
    });
    return prt.readObj({
      required: {},
      optional: {
        "Attributes": x => prt.readMap(String, toAttributeValue, x),
        "ConsumedCapacity": toConsumedCapacity,
        "ItemCollectionMetrics": toItemCollectionMetrics,
      },
    }, await resp.json());
  }

  async updateTable(
    {abortSignal, ...params}: RequestConfig & UpdateTableInput,
  ): Promise<UpdateTableOutput> {
    const body: JSONObject = {...params,
    AttributeDefinitions: params["AttributeDefinitions"]?.map(x => fromAttributeDefinition(x)),
    ProvisionedThroughput: fromProvisionedThroughput(params["ProvisionedThroughput"]),
    GlobalSecondaryIndexUpdates: params["GlobalSecondaryIndexUpdates"]?.map(x => fromGlobalSecondaryIndexUpdate(x)),
    StreamSpecification: fromStreamSpecification(params["StreamSpecification"]),
    SSESpecification: fromSSESpecification(params["SSESpecification"]),
    ReplicaUpdates: params["ReplicaUpdates"]?.map(x => fromReplicationGroupUpdate(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UpdateTable",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableDescription": toTableDescription,
      },
    }, await resp.json());
  }

  async updateTableReplicaAutoScaling(
    {abortSignal, ...params}: RequestConfig & UpdateTableReplicaAutoScalingInput,
  ): Promise<UpdateTableReplicaAutoScalingOutput> {
    const body: JSONObject = {...params,
    GlobalSecondaryIndexUpdates: params["GlobalSecondaryIndexUpdates"]?.map(x => fromGlobalSecondaryIndexAutoScalingUpdate(x)),
    ProvisionedWriteCapacityAutoScalingUpdate: fromAutoScalingSettingsUpdate(params["ProvisionedWriteCapacityAutoScalingUpdate"]),
    ReplicaUpdates: params["ReplicaUpdates"]?.map(x => fromReplicaAutoScalingUpdate(x)),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UpdateTableReplicaAutoScaling",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TableAutoScalingDescription": toTableAutoScalingDescription,
      },
    }, await resp.json());
  }

  async updateTimeToLive(
    {abortSignal, ...params}: RequestConfig & UpdateTimeToLiveInput,
  ): Promise<UpdateTimeToLiveOutput> {
    const body: JSONObject = {...params,
    TimeToLiveSpecification: fromTimeToLiveSpecification(params["TimeToLiveSpecification"]),
  };
    const resp = await this.#client.performRequest({
      abortSignal, body,
      action: "UpdateTimeToLive",
    });
    return prt.readObj({
      required: {},
      optional: {
        "TimeToLiveSpecification": toTimeToLiveSpecification,
      },
    }, await resp.json());
  }

  // Resource State Waiters

  /** Checks state up to 25 times, 20 seconds apart (about 9 minutes max wait time). */
  async waitForTableExists(
    params: RequestConfig & DescribeTableInput,
  ): Promise<DescribeTableOutput> {
    const errMessage = 'ResourceNotReady: Resource is not in the state TableExists';
    for (let i = 0; i < 25; i++) {
      try {
        const resp = await this.describeTable(params);
        if (resp["Table"]?.["TableStatus"] === "ACTIVE") return resp;
      } catch (err) {
        if (!["ResourceNotFoundException"].includes(err.code)) throw err;
      }
      await new Promise(r => setTimeout(r, 20000));
    }
    throw new Error(errMessage);
  }

  /** Checks state up to 25 times, 20 seconds apart (about 9 minutes max wait time). */
  async waitForTableNotExists(
    params: RequestConfig & DescribeTableInput,
  ): Promise<Error | DescribeTableOutput> {
    const errMessage = 'ResourceNotReady: Resource is not in the state TableNotExists';
    for (let i = 0; i < 25; i++) {
      try {
        const resp = await this.describeTable(params);
      } catch (err) {
        if (["ResourceNotFoundException"].includes(err.code)) return err;
        throw err;
      }
      await new Promise(r => setTimeout(r, 20000));
    }
    throw new Error(errMessage);
  }

}

// refs: 1 - tags: named, input
export interface BatchGetItemInput {
  RequestItems: { [key: string]: KeysAndAttributes };
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
}

// refs: 1 - tags: named, input
export interface BatchWriteItemInput {
  RequestItems: { [key: string]: WriteRequest[] };
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
  ReturnItemCollectionMetrics?: ReturnItemCollectionMetrics | null;
}

// refs: 1 - tags: named, input
export interface CreateBackupInput {
  TableName: string;
  BackupName: string;
}

// refs: 1 - tags: named, input
export interface CreateGlobalTableInput {
  GlobalTableName: string;
  ReplicationGroup: Replica[];
}

// refs: 1 - tags: named, input
export interface CreateTableInput {
  AttributeDefinitions: AttributeDefinition[];
  TableName: string;
  KeySchema: KeySchemaElement[];
  LocalSecondaryIndexes?: LocalSecondaryIndex[] | null;
  GlobalSecondaryIndexes?: GlobalSecondaryIndex[] | null;
  BillingMode?: BillingMode | null;
  ProvisionedThroughput?: ProvisionedThroughput | null;
  StreamSpecification?: StreamSpecification | null;
  SSESpecification?: SSESpecification | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface DeleteBackupInput {
  BackupArn: string;
}

// refs: 1 - tags: named, input
export interface DeleteItemInput {
  TableName: string;
  Key: { [key: string]: AttributeValue };
  Expected?: { [key: string]: ExpectedAttributeValue } | null;
  ConditionalOperator?: ConditionalOperator | null;
  ReturnValues?: ReturnValue | null;
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
  ReturnItemCollectionMetrics?: ReturnItemCollectionMetrics | null;
  ConditionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
}

// refs: 1 - tags: named, input
export interface DeleteTableInput {
  TableName: string;
}

// refs: 1 - tags: named, input
export interface DescribeBackupInput {
  BackupArn: string;
}

// refs: 1 - tags: named, input
export interface DescribeContinuousBackupsInput {
  TableName: string;
}

// refs: 1 - tags: named, input
export interface DescribeContributorInsightsInput {
  TableName: string;
  IndexName?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeEndpointsRequest {
}

// refs: 1 - tags: named, input
export interface DescribeGlobalTableInput {
  GlobalTableName: string;
}

// refs: 1 - tags: named, input
export interface DescribeGlobalTableSettingsInput {
  GlobalTableName: string;
}

// refs: 1 - tags: named, input
export interface DescribeLimitsInput {
}

// refs: 1 - tags: named, input
export interface DescribeTableInput {
  TableName: string;
}

// refs: 1 - tags: named, input
export interface DescribeTableReplicaAutoScalingInput {
  TableName: string;
}

// refs: 1 - tags: named, input
export interface DescribeTimeToLiveInput {
  TableName: string;
}

// refs: 1 - tags: named, input
export interface GetItemInput {
  TableName: string;
  Key: { [key: string]: AttributeValue };
  AttributesToGet?: string[] | null;
  ConsistentRead?: boolean | null;
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
  ProjectionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
}

// refs: 1 - tags: named, input
export interface ListBackupsInput {
  TableName?: string | null;
  Limit?: number | null;
  TimeRangeLowerBound?: Date | number | null;
  TimeRangeUpperBound?: Date | number | null;
  ExclusiveStartBackupArn?: string | null;
  BackupType?: BackupTypeFilter | null;
}

// refs: 1 - tags: named, input
export interface ListContributorInsightsInput {
  TableName?: string | null;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListGlobalTablesInput {
  ExclusiveStartGlobalTableName?: string | null;
  Limit?: number | null;
  RegionName?: string | null;
}

// refs: 1 - tags: named, input
export interface ListTablesInput {
  ExclusiveStartTableName?: string | null;
  Limit?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsOfResourceInput {
  ResourceArn: string;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface PutItemInput {
  TableName: string;
  Item: { [key: string]: AttributeValue };
  Expected?: { [key: string]: ExpectedAttributeValue } | null;
  ReturnValues?: ReturnValue | null;
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
  ReturnItemCollectionMetrics?: ReturnItemCollectionMetrics | null;
  ConditionalOperator?: ConditionalOperator | null;
  ConditionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
}

// refs: 1 - tags: named, input
export interface QueryInput {
  TableName: string;
  IndexName?: string | null;
  Select?: Select | null;
  AttributesToGet?: string[] | null;
  Limit?: number | null;
  ConsistentRead?: boolean | null;
  KeyConditions?: { [key: string]: Condition } | null;
  QueryFilter?: { [key: string]: Condition } | null;
  ConditionalOperator?: ConditionalOperator | null;
  ScanIndexForward?: boolean | null;
  ExclusiveStartKey?: { [key: string]: AttributeValue } | null;
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
  ProjectionExpression?: string | null;
  FilterExpression?: string | null;
  KeyConditionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
}

// refs: 1 - tags: named, input
export interface RestoreTableFromBackupInput {
  TargetTableName: string;
  BackupArn: string;
  BillingModeOverride?: BillingMode | null;
  GlobalSecondaryIndexOverride?: GlobalSecondaryIndex[] | null;
  LocalSecondaryIndexOverride?: LocalSecondaryIndex[] | null;
  ProvisionedThroughputOverride?: ProvisionedThroughput | null;
  SSESpecificationOverride?: SSESpecification | null;
}

// refs: 1 - tags: named, input
export interface RestoreTableToPointInTimeInput {
  SourceTableArn?: string | null;
  SourceTableName?: string | null;
  TargetTableName: string;
  UseLatestRestorableTime?: boolean | null;
  RestoreDateTime?: Date | number | null;
  BillingModeOverride?: BillingMode | null;
  GlobalSecondaryIndexOverride?: GlobalSecondaryIndex[] | null;
  LocalSecondaryIndexOverride?: LocalSecondaryIndex[] | null;
  ProvisionedThroughputOverride?: ProvisionedThroughput | null;
  SSESpecificationOverride?: SSESpecification | null;
}

// refs: 1 - tags: named, input
export interface ScanInput {
  TableName: string;
  IndexName?: string | null;
  AttributesToGet?: string[] | null;
  Limit?: number | null;
  Select?: Select | null;
  ScanFilter?: { [key: string]: Condition } | null;
  ConditionalOperator?: ConditionalOperator | null;
  ExclusiveStartKey?: { [key: string]: AttributeValue } | null;
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
  TotalSegments?: number | null;
  Segment?: number | null;
  ProjectionExpression?: string | null;
  FilterExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
  ConsistentRead?: boolean | null;
}

// refs: 1 - tags: named, input
export interface TagResourceInput {
  ResourceArn: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface TransactGetItemsInput {
  TransactItems: TransactGetItem[];
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
}

// refs: 1 - tags: named, input
export interface TransactWriteItemsInput {
  TransactItems: TransactWriteItem[];
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
  ReturnItemCollectionMetrics?: ReturnItemCollectionMetrics | null;
  ClientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface UntagResourceInput {
  ResourceArn: string;
  TagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateContinuousBackupsInput {
  TableName: string;
  PointInTimeRecoverySpecification: PointInTimeRecoverySpecification;
}

// refs: 1 - tags: named, input
export interface UpdateContributorInsightsInput {
  TableName: string;
  IndexName?: string | null;
  ContributorInsightsAction: ContributorInsightsAction;
}

// refs: 1 - tags: named, input
export interface UpdateGlobalTableInput {
  GlobalTableName: string;
  ReplicaUpdates: ReplicaUpdate[];
}

// refs: 1 - tags: named, input
export interface UpdateGlobalTableSettingsInput {
  GlobalTableName: string;
  GlobalTableBillingMode?: BillingMode | null;
  GlobalTableProvisionedWriteCapacityUnits?: number | null;
  GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate?: AutoScalingSettingsUpdate | null;
  GlobalTableGlobalSecondaryIndexSettingsUpdate?: GlobalTableGlobalSecondaryIndexSettingsUpdate[] | null;
  ReplicaSettingsUpdate?: ReplicaSettingsUpdate[] | null;
}

// refs: 1 - tags: named, input
export interface UpdateItemInput {
  TableName: string;
  Key: { [key: string]: AttributeValue };
  AttributeUpdates?: { [key: string]: AttributeValueUpdate } | null;
  Expected?: { [key: string]: ExpectedAttributeValue } | null;
  ConditionalOperator?: ConditionalOperator | null;
  ReturnValues?: ReturnValue | null;
  ReturnConsumedCapacity?: ReturnConsumedCapacity | null;
  ReturnItemCollectionMetrics?: ReturnItemCollectionMetrics | null;
  UpdateExpression?: string | null;
  ConditionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
}

// refs: 1 - tags: named, input
export interface UpdateTableInput {
  AttributeDefinitions?: AttributeDefinition[] | null;
  TableName: string;
  BillingMode?: BillingMode | null;
  ProvisionedThroughput?: ProvisionedThroughput | null;
  GlobalSecondaryIndexUpdates?: GlobalSecondaryIndexUpdate[] | null;
  StreamSpecification?: StreamSpecification | null;
  SSESpecification?: SSESpecification | null;
  ReplicaUpdates?: ReplicationGroupUpdate[] | null;
}

// refs: 1 - tags: named, input
export interface UpdateTableReplicaAutoScalingInput {
  GlobalSecondaryIndexUpdates?: GlobalSecondaryIndexAutoScalingUpdate[] | null;
  TableName: string;
  ProvisionedWriteCapacityAutoScalingUpdate?: AutoScalingSettingsUpdate | null;
  ReplicaUpdates?: ReplicaAutoScalingUpdate[] | null;
}

// refs: 1 - tags: named, input
export interface UpdateTimeToLiveInput {
  TableName: string;
  TimeToLiveSpecification: TimeToLiveSpecification;
}

// refs: 1 - tags: named, output
export interface BatchGetItemOutput {
  Responses?: { [key: string]: ({ [key: string]: AttributeValue })[] } | null;
  UnprocessedKeys?: { [key: string]: KeysAndAttributes } | null;
  ConsumedCapacity?: ConsumedCapacity[] | null;
}

// refs: 1 - tags: named, output
export interface BatchWriteItemOutput {
  UnprocessedItems?: { [key: string]: WriteRequest[] } | null;
  ItemCollectionMetrics?: { [key: string]: ItemCollectionMetrics[] } | null;
  ConsumedCapacity?: ConsumedCapacity[] | null;
}

// refs: 1 - tags: named, output
export interface CreateBackupOutput {
  BackupDetails?: BackupDetails | null;
}

// refs: 1 - tags: named, output
export interface CreateGlobalTableOutput {
  GlobalTableDescription?: GlobalTableDescription | null;
}

// refs: 1 - tags: named, output
export interface CreateTableOutput {
  TableDescription?: TableDescription | null;
}

// refs: 1 - tags: named, output
export interface DeleteBackupOutput {
  BackupDescription?: BackupDescription | null;
}

// refs: 1 - tags: named, output
export interface DeleteItemOutput {
  Attributes?: { [key: string]: AttributeValue } | null;
  ConsumedCapacity?: ConsumedCapacity | null;
  ItemCollectionMetrics?: ItemCollectionMetrics | null;
}

// refs: 1 - tags: named, output
export interface DeleteTableOutput {
  TableDescription?: TableDescription | null;
}

// refs: 1 - tags: named, output
export interface DescribeBackupOutput {
  BackupDescription?: BackupDescription | null;
}

// refs: 1 - tags: named, output
export interface DescribeContinuousBackupsOutput {
  ContinuousBackupsDescription?: ContinuousBackupsDescription | null;
}

// refs: 1 - tags: named, output
export interface DescribeContributorInsightsOutput {
  TableName?: string | null;
  IndexName?: string | null;
  ContributorInsightsRuleList?: string[] | null;
  ContributorInsightsStatus?: ContributorInsightsStatus | null;
  LastUpdateDateTime?: Date | number | null;
  FailureException?: FailureException | null;
}

// refs: 1 - tags: named, output
export interface DescribeEndpointsResponse {
  Endpoints: Endpoint[];
}

// refs: 1 - tags: named, output
export interface DescribeGlobalTableOutput {
  GlobalTableDescription?: GlobalTableDescription | null;
}

// refs: 1 - tags: named, output
export interface DescribeGlobalTableSettingsOutput {
  GlobalTableName?: string | null;
  ReplicaSettings?: ReplicaSettingsDescription[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeLimitsOutput {
  AccountMaxReadCapacityUnits?: number | null;
  AccountMaxWriteCapacityUnits?: number | null;
  TableMaxReadCapacityUnits?: number | null;
  TableMaxWriteCapacityUnits?: number | null;
}

// refs: 1 - tags: named, output
export interface DescribeTableOutput {
  Table?: TableDescription | null;
}

// refs: 1 - tags: named, output
export interface DescribeTableReplicaAutoScalingOutput {
  TableAutoScalingDescription?: TableAutoScalingDescription | null;
}

// refs: 1 - tags: named, output
export interface DescribeTimeToLiveOutput {
  TimeToLiveDescription?: TimeToLiveDescription | null;
}

// refs: 1 - tags: named, output
export interface GetItemOutput {
  Item?: { [key: string]: AttributeValue } | null;
  ConsumedCapacity?: ConsumedCapacity | null;
}

// refs: 1 - tags: named, output
export interface ListBackupsOutput {
  BackupSummaries?: BackupSummary[] | null;
  LastEvaluatedBackupArn?: string | null;
}

// refs: 1 - tags: named, output
export interface ListContributorInsightsOutput {
  ContributorInsightsSummaries?: ContributorInsightsSummary[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListGlobalTablesOutput {
  GlobalTables?: GlobalTable[] | null;
  LastEvaluatedGlobalTableName?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTablesOutput {
  TableNames?: string[] | null;
  LastEvaluatedTableName?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsOfResourceOutput {
  Tags?: Tag[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface PutItemOutput {
  Attributes?: { [key: string]: AttributeValue } | null;
  ConsumedCapacity?: ConsumedCapacity | null;
  ItemCollectionMetrics?: ItemCollectionMetrics | null;
}

// refs: 1 - tags: named, output
export interface QueryOutput {
  Items?: ({ [key: string]: AttributeValue })[] | null;
  Count?: number | null;
  ScannedCount?: number | null;
  LastEvaluatedKey?: { [key: string]: AttributeValue } | null;
  ConsumedCapacity?: ConsumedCapacity | null;
}

// refs: 1 - tags: named, output
export interface RestoreTableFromBackupOutput {
  TableDescription?: TableDescription | null;
}

// refs: 1 - tags: named, output
export interface RestoreTableToPointInTimeOutput {
  TableDescription?: TableDescription | null;
}

// refs: 1 - tags: named, output
export interface ScanOutput {
  Items?: ({ [key: string]: AttributeValue })[] | null;
  Count?: number | null;
  ScannedCount?: number | null;
  LastEvaluatedKey?: { [key: string]: AttributeValue } | null;
  ConsumedCapacity?: ConsumedCapacity | null;
}

// refs: 1 - tags: named, output
export interface TransactGetItemsOutput {
  ConsumedCapacity?: ConsumedCapacity[] | null;
  Responses?: ItemResponse[] | null;
}

// refs: 1 - tags: named, output
export interface TransactWriteItemsOutput {
  ConsumedCapacity?: ConsumedCapacity[] | null;
  ItemCollectionMetrics?: { [key: string]: ItemCollectionMetrics[] } | null;
}

// refs: 1 - tags: named, output
export interface UpdateContinuousBackupsOutput {
  ContinuousBackupsDescription?: ContinuousBackupsDescription | null;
}

// refs: 1 - tags: named, output
export interface UpdateContributorInsightsOutput {
  TableName?: string | null;
  IndexName?: string | null;
  ContributorInsightsStatus?: ContributorInsightsStatus | null;
}

// refs: 1 - tags: named, output
export interface UpdateGlobalTableOutput {
  GlobalTableDescription?: GlobalTableDescription | null;
}

// refs: 1 - tags: named, output
export interface UpdateGlobalTableSettingsOutput {
  GlobalTableName?: string | null;
  ReplicaSettings?: ReplicaSettingsDescription[] | null;
}

// refs: 1 - tags: named, output
export interface UpdateItemOutput {
  Attributes?: { [key: string]: AttributeValue } | null;
  ConsumedCapacity?: ConsumedCapacity | null;
  ItemCollectionMetrics?: ItemCollectionMetrics | null;
}

// refs: 1 - tags: named, output
export interface UpdateTableOutput {
  TableDescription?: TableDescription | null;
}

// refs: 1 - tags: named, output
export interface UpdateTableReplicaAutoScalingOutput {
  TableAutoScalingDescription?: TableAutoScalingDescription | null;
}

// refs: 1 - tags: named, output
export interface UpdateTimeToLiveOutput {
  TimeToLiveSpecification?: TimeToLiveSpecification | null;
}

// refs: 2 - tags: input, named, interface, output
export interface KeysAndAttributes {
  Keys: ({ [key: string]: AttributeValue })[];
  AttributesToGet?: string[] | null;
  ConsistentRead?: boolean | null;
  ProjectionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
}
function fromKeysAndAttributes(input?: KeysAndAttributes | null): JSONValue {
  if (!input) return input;
  return {...input,
    Keys: input["Keys"]?.map(x => prt.serializeMap(x, fromAttributeValue)),
  }
}
function toKeysAndAttributes(root: JSONValue): KeysAndAttributes {
  return prt.readObj({
    required: {
      "Keys": [x => prt.readMap(String, toAttributeValue, x)],
    },
    optional: {
      "AttributesToGet": ["s"],
      "ConsistentRead": "b",
      "ProjectionExpression": "s",
      "ExpressionAttributeNames": x => prt.readMap(String, String, x),
    },
  }, root);
}

// refs: 153 - tags: input, named, interface, recursed, output
export interface AttributeValue {
  S?: string | null;
  N?: string | null;
  B?: Uint8Array | string | null;
  SS?: string[] | null;
  NS?: string[] | null;
  BS?: (Uint8Array | string)[] | null;
  M?: { [key: string]: AttributeValue } | null;
  L?: AttributeValue[] | null;
  NULL?: boolean | null;
  BOOL?: boolean | null;
}
function fromAttributeValue(input?: AttributeValue | null): JSONValue {
  if (!input) return input;
  return {...input,
    B: prt.serializeBlob(input["B"]),
    BS: input["BS"]?.map(x => prt.serializeBlob(x)),
    M: prt.serializeMap(input["M"], x => fromAttributeValue(x)),
    L: input["L"]?.map(x => fromAttributeValue(x)),
  }
}
function toAttributeValue(root: JSONValue): AttributeValue {
  return prt.readObj({
    required: {},
    optional: {
      "S": "s",
      "N": "s",
      "B": "a",
      "SS": ["s"],
      "NS": ["s"],
      "BS": ["a"],
      "M": x => prt.readMap(String, toAttributeValue, x),
      "L": [toAttributeValue],
      "NULL": "b",
      "BOOL": "b",
    },
  }, root);
}

// refs: 10 - tags: input, named, enum
export type ReturnConsumedCapacity =
| "INDEXES"
| "TOTAL"
| "NONE"
;


// refs: 2 - tags: input, named, interface, output
export interface WriteRequest {
  PutRequest?: PutRequest | null;
  DeleteRequest?: DeleteRequest | null;
}
function fromWriteRequest(input?: WriteRequest | null): JSONValue {
  if (!input) return input;
  return {...input,
    PutRequest: fromPutRequest(input["PutRequest"]),
    DeleteRequest: fromDeleteRequest(input["DeleteRequest"]),
  }
}
function toWriteRequest(root: JSONValue): WriteRequest {
  return prt.readObj({
    required: {},
    optional: {
      "PutRequest": toPutRequest,
      "DeleteRequest": toDeleteRequest,
    },
  }, root);
}

// refs: 2 - tags: input, named, interface, output
export interface PutRequest {
  Item: { [key: string]: AttributeValue };
}
function fromPutRequest(input?: PutRequest | null): JSONValue {
  if (!input) return input;
  return {...input,
    Item: prt.serializeMap(input["Item"], x => fromAttributeValue(x)),
  }
}
function toPutRequest(root: JSONValue): PutRequest {
  return prt.readObj({
    required: {
      "Item": x => prt.readMap(String, toAttributeValue, x),
    },
    optional: {},
  }, root);
}

// refs: 2 - tags: input, named, interface, output
export interface DeleteRequest {
  Key: { [key: string]: AttributeValue };
}
function fromDeleteRequest(input?: DeleteRequest | null): JSONValue {
  if (!input) return input;
  return {...input,
    Key: prt.serializeMap(input["Key"], x => fromAttributeValue(x)),
  }
}
function toDeleteRequest(root: JSONValue): DeleteRequest {
  return prt.readObj({
    required: {
      "Key": x => prt.readMap(String, toAttributeValue, x),
    },
    optional: {},
  }, root);
}

// refs: 5 - tags: input, named, enum
export type ReturnItemCollectionMetrics =
| "SIZE"
| "NONE"
;


// refs: 2 - tags: input, named, interface, output
export interface Replica {
  RegionName?: string | null;
}
function fromReplica(input?: Replica | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toReplica(root: JSONValue): Replica {
  return prt.readObj({
    required: {},
    optional: {
      "RegionName": "s",
    },
  }, root);
}

// refs: 8 - tags: input, named, interface, output
export interface AttributeDefinition {
  AttributeName: string;
  AttributeType: ScalarAttributeType;
}
function fromAttributeDefinition(input?: AttributeDefinition | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toAttributeDefinition(root: JSONValue): AttributeDefinition {
  return prt.readObj({
    required: {
      "AttributeName": "s",
      "AttributeType": toScalarAttributeType,
    },
    optional: {},
  }, root);
}

// refs: 8 - tags: input, named, enum, output
export type ScalarAttributeType =
| "S"
| "N"
| "B"
;

function toScalarAttributeType(root: JSONValue): ScalarAttributeType | null {
  return ( false
    || root == "S"
    || root == "N"
    || root == "B"
  ) ? root : null;
}

// refs: 32 - tags: input, named, interface, output
export interface KeySchemaElement {
  AttributeName: string;
  KeyType: KeyType;
}
function fromKeySchemaElement(input?: KeySchemaElement | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toKeySchemaElement(root: JSONValue): KeySchemaElement {
  return prt.readObj({
    required: {
      "AttributeName": "s",
      "KeyType": toKeyType,
    },
    optional: {},
  }, root);
}

// refs: 32 - tags: input, named, enum, output
export type KeyType =
| "HASH"
| "RANGE"
;

function toKeyType(root: JSONValue): KeyType | null {
  return ( false
    || root == "HASH"
    || root == "RANGE"
  ) ? root : null;
}

// refs: 3 - tags: input, named, interface
export interface LocalSecondaryIndex {
  IndexName: string;
  KeySchema: KeySchemaElement[];
  Projection: Projection;
}
function fromLocalSecondaryIndex(input?: LocalSecondaryIndex | null): JSONValue {
  if (!input) return input;
  return {...input,
    KeySchema: input["KeySchema"]?.map(x => fromKeySchemaElement(x)),
    Projection: fromProjection(input["Projection"]),
  }
}

// refs: 23 - tags: input, named, interface, output
export interface Projection {
  ProjectionType?: ProjectionType | null;
  NonKeyAttributes?: string[] | null;
}
function fromProjection(input?: Projection | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toProjection(root: JSONValue): Projection {
  return prt.readObj({
    required: {},
    optional: {
      "ProjectionType": toProjectionType,
      "NonKeyAttributes": ["s"],
    },
  }, root);
}

// refs: 23 - tags: input, named, enum, output
export type ProjectionType =
| "ALL"
| "KEYS_ONLY"
| "INCLUDE"
;

function toProjectionType(root: JSONValue): ProjectionType | null {
  return ( false
    || root == "ALL"
    || root == "KEYS_ONLY"
    || root == "INCLUDE"
  ) ? root : null;
}

// refs: 3 - tags: input, named, interface
export interface GlobalSecondaryIndex {
  IndexName: string;
  KeySchema: KeySchemaElement[];
  Projection: Projection;
  ProvisionedThroughput?: ProvisionedThroughput | null;
}
function fromGlobalSecondaryIndex(input?: GlobalSecondaryIndex | null): JSONValue {
  if (!input) return input;
  return {...input,
    KeySchema: input["KeySchema"]?.map(x => fromKeySchemaElement(x)),
    Projection: fromProjection(input["Projection"]),
    ProvisionedThroughput: fromProvisionedThroughput(input["ProvisionedThroughput"]),
  }
}

// refs: 13 - tags: input, named, interface, output
export interface ProvisionedThroughput {
  ReadCapacityUnits: number;
  WriteCapacityUnits: number;
}
function fromProvisionedThroughput(input?: ProvisionedThroughput | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toProvisionedThroughput(root: JSONValue): ProvisionedThroughput {
  return prt.readObj({
    required: {
      "ReadCapacityUnits": "n",
      "WriteCapacityUnits": "n",
    },
    optional: {},
  }, root);
}

// refs: 15 - tags: input, named, enum, output
export type BillingMode =
| "PROVISIONED"
| "PAY_PER_REQUEST"
;

function toBillingMode(root: JSONValue): BillingMode | null {
  return ( false
    || root == "PROVISIONED"
    || root == "PAY_PER_REQUEST"
  ) ? root : null;
}

// refs: 10 - tags: input, named, interface, output
export interface StreamSpecification {
  StreamEnabled: boolean;
  StreamViewType?: StreamViewType | null;
}
function fromStreamSpecification(input?: StreamSpecification | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toStreamSpecification(root: JSONValue): StreamSpecification {
  return prt.readObj({
    required: {
      "StreamEnabled": "b",
    },
    optional: {
      "StreamViewType": toStreamViewType,
    },
  }, root);
}

// refs: 10 - tags: input, named, enum, output
export type StreamViewType =
| "NEW_IMAGE"
| "OLD_IMAGE"
| "NEW_AND_OLD_IMAGES"
| "KEYS_ONLY"
;

function toStreamViewType(root: JSONValue): StreamViewType | null {
  return ( false
    || root == "NEW_IMAGE"
    || root == "OLD_IMAGE"
    || root == "NEW_AND_OLD_IMAGES"
    || root == "KEYS_ONLY"
  ) ? root : null;
}

// refs: 4 - tags: input, named, interface
export interface SSESpecification {
  Enabled?: boolean | null;
  SSEType?: SSEType | null;
  KMSMasterKeyId?: string | null;
}
function fromSSESpecification(input?: SSESpecification | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}

// refs: 12 - tags: input, named, enum, output
export type SSEType =
| "AES256"
| "KMS"
;

function toSSEType(root: JSONValue): SSEType | null {
  return ( false
    || root == "AES256"
    || root == "KMS"
  ) ? root : null;
}

// refs: 3 - tags: input, named, interface, output
export interface Tag {
  Key: string;
  Value: string;
}
function fromTag(input?: Tag | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toTag(root: JSONValue): Tag {
  return prt.readObj({
    required: {
      "Key": "s",
      "Value": "s",
    },
    optional: {},
  }, root);
}

// refs: 3 - tags: input, named, interface
export interface ExpectedAttributeValue {
  Value?: AttributeValue | null;
  Exists?: boolean | null;
  ComparisonOperator?: ComparisonOperator | null;
  AttributeValueList?: AttributeValue[] | null;
}
function fromExpectedAttributeValue(input?: ExpectedAttributeValue | null): JSONValue {
  if (!input) return input;
  return {...input,
    Value: fromAttributeValue(input["Value"]),
    AttributeValueList: input["AttributeValueList"]?.map(x => fromAttributeValue(x)),
  }
}

// refs: 6 - tags: input, named, enum
export type ComparisonOperator =
| "EQ"
| "NE"
| "IN"
| "LE"
| "LT"
| "GE"
| "GT"
| "BETWEEN"
| "NOT_NULL"
| "NULL"
| "CONTAINS"
| "NOT_CONTAINS"
| "BEGINS_WITH"
;


// refs: 5 - tags: input, named, enum
export type ConditionalOperator =
| "AND"
| "OR"
;


// refs: 3 - tags: input, named, enum
export type ReturnValue =
| "NONE"
| "ALL_OLD"
| "UPDATED_OLD"
| "ALL_NEW"
| "UPDATED_NEW"
;


// refs: 1 - tags: input, named, enum
export type BackupTypeFilter =
| "USER"
| "SYSTEM"
| "AWS_BACKUP"
| "ALL"
;


// refs: 2 - tags: input, named, enum
export type Select =
| "ALL_ATTRIBUTES"
| "ALL_PROJECTED_ATTRIBUTES"
| "SPECIFIC_ATTRIBUTES"
| "COUNT"
;


// refs: 3 - tags: input, named, interface
export interface Condition {
  AttributeValueList?: AttributeValue[] | null;
  ComparisonOperator: ComparisonOperator;
}
function fromCondition(input?: Condition | null): JSONValue {
  if (!input) return input;
  return {...input,
    AttributeValueList: input["AttributeValueList"]?.map(x => fromAttributeValue(x)),
  }
}

// refs: 1 - tags: input, named, interface
export interface TransactGetItem {
  Get: Get;
}
function fromTransactGetItem(input?: TransactGetItem | null): JSONValue {
  if (!input) return input;
  return {...input,
    Get: fromGet(input["Get"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface Get {
  Key: { [key: string]: AttributeValue };
  TableName: string;
  ProjectionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
}
function fromGet(input?: Get | null): JSONValue {
  if (!input) return input;
  return {...input,
    Key: prt.serializeMap(input["Key"], x => fromAttributeValue(x)),
  }
}

// refs: 1 - tags: input, named, interface
export interface TransactWriteItem {
  ConditionCheck?: ConditionCheck | null;
  Put?: Put | null;
  Delete?: Delete | null;
  Update?: Update | null;
}
function fromTransactWriteItem(input?: TransactWriteItem | null): JSONValue {
  if (!input) return input;
  return {...input,
    ConditionCheck: fromConditionCheck(input["ConditionCheck"]),
    Put: fromPut(input["Put"]),
    Delete: fromDelete(input["Delete"]),
    Update: fromUpdate(input["Update"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface ConditionCheck {
  Key: { [key: string]: AttributeValue };
  TableName: string;
  ConditionExpression: string;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
  ReturnValuesOnConditionCheckFailure?: ReturnValuesOnConditionCheckFailure | null;
}
function fromConditionCheck(input?: ConditionCheck | null): JSONValue {
  if (!input) return input;
  return {...input,
    Key: prt.serializeMap(input["Key"], x => fromAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(input["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  }
}

// refs: 4 - tags: input, named, enum
export type ReturnValuesOnConditionCheckFailure =
| "ALL_OLD"
| "NONE"
;


// refs: 1 - tags: input, named, interface
export interface Put {
  Item: { [key: string]: AttributeValue };
  TableName: string;
  ConditionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
  ReturnValuesOnConditionCheckFailure?: ReturnValuesOnConditionCheckFailure | null;
}
function fromPut(input?: Put | null): JSONValue {
  if (!input) return input;
  return {...input,
    Item: prt.serializeMap(input["Item"], x => fromAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(input["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  }
}

// refs: 1 - tags: input, named, interface
export interface Delete {
  Key: { [key: string]: AttributeValue };
  TableName: string;
  ConditionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
  ReturnValuesOnConditionCheckFailure?: ReturnValuesOnConditionCheckFailure | null;
}
function fromDelete(input?: Delete | null): JSONValue {
  if (!input) return input;
  return {...input,
    Key: prt.serializeMap(input["Key"], x => fromAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(input["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  }
}

// refs: 1 - tags: input, named, interface
export interface Update {
  Key: { [key: string]: AttributeValue };
  UpdateExpression: string;
  TableName: string;
  ConditionExpression?: string | null;
  ExpressionAttributeNames?: { [key: string]: string } | null;
  ExpressionAttributeValues?: { [key: string]: AttributeValue } | null;
  ReturnValuesOnConditionCheckFailure?: ReturnValuesOnConditionCheckFailure | null;
}
function fromUpdate(input?: Update | null): JSONValue {
  if (!input) return input;
  return {...input,
    Key: prt.serializeMap(input["Key"], x => fromAttributeValue(x)),
    ExpressionAttributeValues: prt.serializeMap(input["ExpressionAttributeValues"], x => fromAttributeValue(x)),
  }
}

// refs: 1 - tags: input, named, interface
export interface PointInTimeRecoverySpecification {
  PointInTimeRecoveryEnabled: boolean;
}
function fromPointInTimeRecoverySpecification(input?: PointInTimeRecoverySpecification | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}

// refs: 1 - tags: input, named, enum
export type ContributorInsightsAction =
| "ENABLE"
| "DISABLE"
;


// refs: 1 - tags: input, named, interface
export interface ReplicaUpdate {
  Create?: CreateReplicaAction | null;
  Delete?: DeleteReplicaAction | null;
}
function fromReplicaUpdate(input?: ReplicaUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    Create: fromCreateReplicaAction(input["Create"]),
    Delete: fromDeleteReplicaAction(input["Delete"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface CreateReplicaAction {
  RegionName: string;
}
function fromCreateReplicaAction(input?: CreateReplicaAction | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}

// refs: 1 - tags: input, named, interface
export interface DeleteReplicaAction {
  RegionName: string;
}
function fromDeleteReplicaAction(input?: DeleteReplicaAction | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}

// refs: 8 - tags: input, named, interface
export interface AutoScalingSettingsUpdate {
  MinimumUnits?: number | null;
  MaximumUnits?: number | null;
  AutoScalingDisabled?: boolean | null;
  AutoScalingRoleArn?: string | null;
  ScalingPolicyUpdate?: AutoScalingPolicyUpdate | null;
}
function fromAutoScalingSettingsUpdate(input?: AutoScalingSettingsUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    ScalingPolicyUpdate: fromAutoScalingPolicyUpdate(input["ScalingPolicyUpdate"]),
  }
}

// refs: 8 - tags: input, named, interface
export interface AutoScalingPolicyUpdate {
  PolicyName?: string | null;
  TargetTrackingScalingPolicyConfiguration: AutoScalingTargetTrackingScalingPolicyConfigurationUpdate;
}
function fromAutoScalingPolicyUpdate(input?: AutoScalingPolicyUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    TargetTrackingScalingPolicyConfiguration: fromAutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input["TargetTrackingScalingPolicyConfiguration"]),
  }
}

// refs: 8 - tags: input, named, interface
export interface AutoScalingTargetTrackingScalingPolicyConfigurationUpdate {
  DisableScaleIn?: boolean | null;
  ScaleInCooldown?: number | null;
  ScaleOutCooldown?: number | null;
  TargetValue: number;
}
function fromAutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input?: AutoScalingTargetTrackingScalingPolicyConfigurationUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}

// refs: 1 - tags: input, named, interface
export interface GlobalTableGlobalSecondaryIndexSettingsUpdate {
  IndexName: string;
  ProvisionedWriteCapacityUnits?: number | null;
  ProvisionedWriteCapacityAutoScalingSettingsUpdate?: AutoScalingSettingsUpdate | null;
}
function fromGlobalTableGlobalSecondaryIndexSettingsUpdate(input?: GlobalTableGlobalSecondaryIndexSettingsUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    ProvisionedWriteCapacityAutoScalingSettingsUpdate: fromAutoScalingSettingsUpdate(input["ProvisionedWriteCapacityAutoScalingSettingsUpdate"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface ReplicaSettingsUpdate {
  RegionName: string;
  ReplicaProvisionedReadCapacityUnits?: number | null;
  ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate?: AutoScalingSettingsUpdate | null;
  ReplicaGlobalSecondaryIndexSettingsUpdate?: ReplicaGlobalSecondaryIndexSettingsUpdate[] | null;
}
function fromReplicaSettingsUpdate(input?: ReplicaSettingsUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate: fromAutoScalingSettingsUpdate(input["ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate"]),
    ReplicaGlobalSecondaryIndexSettingsUpdate: input["ReplicaGlobalSecondaryIndexSettingsUpdate"]?.map(x => fromReplicaGlobalSecondaryIndexSettingsUpdate(x)),
  }
}

// refs: 1 - tags: input, named, interface
export interface ReplicaGlobalSecondaryIndexSettingsUpdate {
  IndexName: string;
  ProvisionedReadCapacityUnits?: number | null;
  ProvisionedReadCapacityAutoScalingSettingsUpdate?: AutoScalingSettingsUpdate | null;
}
function fromReplicaGlobalSecondaryIndexSettingsUpdate(input?: ReplicaGlobalSecondaryIndexSettingsUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    ProvisionedReadCapacityAutoScalingSettingsUpdate: fromAutoScalingSettingsUpdate(input["ProvisionedReadCapacityAutoScalingSettingsUpdate"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface AttributeValueUpdate {
  Value?: AttributeValue | null;
  Action?: AttributeAction | null;
}
function fromAttributeValueUpdate(input?: AttributeValueUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    Value: fromAttributeValue(input["Value"]),
  }
}

// refs: 1 - tags: input, named, enum
export type AttributeAction =
| "ADD"
| "PUT"
| "DELETE"
;


// refs: 1 - tags: input, named, interface
export interface GlobalSecondaryIndexUpdate {
  Update?: UpdateGlobalSecondaryIndexAction | null;
  Create?: CreateGlobalSecondaryIndexAction | null;
  Delete?: DeleteGlobalSecondaryIndexAction | null;
}
function fromGlobalSecondaryIndexUpdate(input?: GlobalSecondaryIndexUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    Update: fromUpdateGlobalSecondaryIndexAction(input["Update"]),
    Create: fromCreateGlobalSecondaryIndexAction(input["Create"]),
    Delete: fromDeleteGlobalSecondaryIndexAction(input["Delete"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface UpdateGlobalSecondaryIndexAction {
  IndexName: string;
  ProvisionedThroughput: ProvisionedThroughput;
}
function fromUpdateGlobalSecondaryIndexAction(input?: UpdateGlobalSecondaryIndexAction | null): JSONValue {
  if (!input) return input;
  return {...input,
    ProvisionedThroughput: fromProvisionedThroughput(input["ProvisionedThroughput"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface CreateGlobalSecondaryIndexAction {
  IndexName: string;
  KeySchema: KeySchemaElement[];
  Projection: Projection;
  ProvisionedThroughput?: ProvisionedThroughput | null;
}
function fromCreateGlobalSecondaryIndexAction(input?: CreateGlobalSecondaryIndexAction | null): JSONValue {
  if (!input) return input;
  return {...input,
    KeySchema: input["KeySchema"]?.map(x => fromKeySchemaElement(x)),
    Projection: fromProjection(input["Projection"]),
    ProvisionedThroughput: fromProvisionedThroughput(input["ProvisionedThroughput"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface DeleteGlobalSecondaryIndexAction {
  IndexName: string;
}
function fromDeleteGlobalSecondaryIndexAction(input?: DeleteGlobalSecondaryIndexAction | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}

// refs: 1 - tags: input, named, interface
export interface ReplicationGroupUpdate {
  Create?: CreateReplicationGroupMemberAction | null;
  Update?: UpdateReplicationGroupMemberAction | null;
  Delete?: DeleteReplicationGroupMemberAction | null;
}
function fromReplicationGroupUpdate(input?: ReplicationGroupUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    Create: fromCreateReplicationGroupMemberAction(input["Create"]),
    Update: fromUpdateReplicationGroupMemberAction(input["Update"]),
    Delete: fromDeleteReplicationGroupMemberAction(input["Delete"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface CreateReplicationGroupMemberAction {
  RegionName: string;
  KMSMasterKeyId?: string | null;
  ProvisionedThroughputOverride?: ProvisionedThroughputOverride | null;
  GlobalSecondaryIndexes?: ReplicaGlobalSecondaryIndex[] | null;
}
function fromCreateReplicationGroupMemberAction(input?: CreateReplicationGroupMemberAction | null): JSONValue {
  if (!input) return input;
  return {...input,
    ProvisionedThroughputOverride: fromProvisionedThroughputOverride(input["ProvisionedThroughputOverride"]),
    GlobalSecondaryIndexes: input["GlobalSecondaryIndexes"]?.map(x => fromReplicaGlobalSecondaryIndex(x)),
  }
}

// refs: 22 - tags: input, named, interface, output
export interface ProvisionedThroughputOverride {
  ReadCapacityUnits?: number | null;
}
function fromProvisionedThroughputOverride(input?: ProvisionedThroughputOverride | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toProvisionedThroughputOverride(root: JSONValue): ProvisionedThroughputOverride {
  return prt.readObj({
    required: {},
    optional: {
      "ReadCapacityUnits": "n",
    },
  }, root);
}

// refs: 2 - tags: input, named, interface
export interface ReplicaGlobalSecondaryIndex {
  IndexName: string;
  ProvisionedThroughputOverride?: ProvisionedThroughputOverride | null;
}
function fromReplicaGlobalSecondaryIndex(input?: ReplicaGlobalSecondaryIndex | null): JSONValue {
  if (!input) return input;
  return {...input,
    ProvisionedThroughputOverride: fromProvisionedThroughputOverride(input["ProvisionedThroughputOverride"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface UpdateReplicationGroupMemberAction {
  RegionName: string;
  KMSMasterKeyId?: string | null;
  ProvisionedThroughputOverride?: ProvisionedThroughputOverride | null;
  GlobalSecondaryIndexes?: ReplicaGlobalSecondaryIndex[] | null;
}
function fromUpdateReplicationGroupMemberAction(input?: UpdateReplicationGroupMemberAction | null): JSONValue {
  if (!input) return input;
  return {...input,
    ProvisionedThroughputOverride: fromProvisionedThroughputOverride(input["ProvisionedThroughputOverride"]),
    GlobalSecondaryIndexes: input["GlobalSecondaryIndexes"]?.map(x => fromReplicaGlobalSecondaryIndex(x)),
  }
}

// refs: 1 - tags: input, named, interface
export interface DeleteReplicationGroupMemberAction {
  RegionName: string;
}
function fromDeleteReplicationGroupMemberAction(input?: DeleteReplicationGroupMemberAction | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}

// refs: 1 - tags: input, named, interface
export interface GlobalSecondaryIndexAutoScalingUpdate {
  IndexName?: string | null;
  ProvisionedWriteCapacityAutoScalingUpdate?: AutoScalingSettingsUpdate | null;
}
function fromGlobalSecondaryIndexAutoScalingUpdate(input?: GlobalSecondaryIndexAutoScalingUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    ProvisionedWriteCapacityAutoScalingUpdate: fromAutoScalingSettingsUpdate(input["ProvisionedWriteCapacityAutoScalingUpdate"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface ReplicaAutoScalingUpdate {
  RegionName: string;
  ReplicaGlobalSecondaryIndexUpdates?: ReplicaGlobalSecondaryIndexAutoScalingUpdate[] | null;
  ReplicaProvisionedReadCapacityAutoScalingUpdate?: AutoScalingSettingsUpdate | null;
}
function fromReplicaAutoScalingUpdate(input?: ReplicaAutoScalingUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    ReplicaGlobalSecondaryIndexUpdates: input["ReplicaGlobalSecondaryIndexUpdates"]?.map(x => fromReplicaGlobalSecondaryIndexAutoScalingUpdate(x)),
    ReplicaProvisionedReadCapacityAutoScalingUpdate: fromAutoScalingSettingsUpdate(input["ReplicaProvisionedReadCapacityAutoScalingUpdate"]),
  }
}

// refs: 1 - tags: input, named, interface
export interface ReplicaGlobalSecondaryIndexAutoScalingUpdate {
  IndexName?: string | null;
  ProvisionedReadCapacityAutoScalingUpdate?: AutoScalingSettingsUpdate | null;
}
function fromReplicaGlobalSecondaryIndexAutoScalingUpdate(input?: ReplicaGlobalSecondaryIndexAutoScalingUpdate | null): JSONValue {
  if (!input) return input;
  return {...input,
    ProvisionedReadCapacityAutoScalingUpdate: fromAutoScalingSettingsUpdate(input["ProvisionedReadCapacityAutoScalingUpdate"]),
  }
}

// refs: 2 - tags: input, named, interface, output
export interface TimeToLiveSpecification {
  Enabled: boolean;
  AttributeName: string;
}
function fromTimeToLiveSpecification(input?: TimeToLiveSpecification | null): JSONValue {
  if (!input) return input;
  return {...input,
  }
}
function toTimeToLiveSpecification(root: JSONValue): TimeToLiveSpecification {
  return prt.readObj({
    required: {
      "Enabled": "b",
      "AttributeName": "s",
    },
    optional: {},
  }, root);
}

// refs: 10 - tags: output, named, interface
export interface ConsumedCapacity {
  TableName?: string | null;
  CapacityUnits?: number | null;
  ReadCapacityUnits?: number | null;
  WriteCapacityUnits?: number | null;
  Table?: Capacity | null;
  LocalSecondaryIndexes?: { [key: string]: Capacity } | null;
  GlobalSecondaryIndexes?: { [key: string]: Capacity } | null;
}
function toConsumedCapacity(root: JSONValue): ConsumedCapacity {
  return prt.readObj({
    required: {},
    optional: {
      "TableName": "s",
      "CapacityUnits": "n",
      "ReadCapacityUnits": "n",
      "WriteCapacityUnits": "n",
      "Table": toCapacity,
      "LocalSecondaryIndexes": x => prt.readMap(String, toCapacity, x),
      "GlobalSecondaryIndexes": x => prt.readMap(String, toCapacity, x),
    },
  }, root);
}

// refs: 30 - tags: output, named, interface
export interface Capacity {
  ReadCapacityUnits?: number | null;
  WriteCapacityUnits?: number | null;
  CapacityUnits?: number | null;
}
function toCapacity(root: JSONValue): Capacity {
  return prt.readObj({
    required: {},
    optional: {
      "ReadCapacityUnits": "n",
      "WriteCapacityUnits": "n",
      "CapacityUnits": "n",
    },
  }, root);
}

// refs: 5 - tags: output, named, interface
export interface ItemCollectionMetrics {
  ItemCollectionKey?: { [key: string]: AttributeValue } | null;
  SizeEstimateRangeGB?: number[] | null;
}
function toItemCollectionMetrics(root: JSONValue): ItemCollectionMetrics {
  return prt.readObj({
    required: {},
    optional: {
      "ItemCollectionKey": x => prt.readMap(String, toAttributeValue, x),
      "SizeEstimateRangeGB": ["n"],
    },
  }, root);
}

// refs: 3 - tags: output, named, interface
export interface BackupDetails {
  BackupArn: string;
  BackupName: string;
  BackupSizeBytes?: number | null;
  BackupStatus: BackupStatus;
  BackupType: BackupType;
  BackupCreationDateTime: Date | number;
  BackupExpiryDateTime?: Date | number | null;
}
function toBackupDetails(root: JSONValue): BackupDetails {
  return prt.readObj({
    required: {
      "BackupArn": "s",
      "BackupName": "s",
      "BackupStatus": toBackupStatus,
      "BackupType": toBackupType,
      "BackupCreationDateTime": "d",
    },
    optional: {
      "BackupSizeBytes": "n",
      "BackupExpiryDateTime": "d",
    },
  }, root);
}

// refs: 4 - tags: output, named, enum
export type BackupStatus =
| "CREATING"
| "DELETED"
| "AVAILABLE"
;
function toBackupStatus(root: JSONValue): BackupStatus | null {
  return ( false
    || root == "CREATING"
    || root == "DELETED"
    || root == "AVAILABLE"
  ) ? root : null;
}

// refs: 4 - tags: output, named, enum
export type BackupType =
| "USER"
| "SYSTEM"
| "AWS_BACKUP"
;
function toBackupType(root: JSONValue): BackupType | null {
  return ( false
    || root == "USER"
    || root == "SYSTEM"
    || root == "AWS_BACKUP"
  ) ? root : null;
}

// refs: 3 - tags: output, named, interface
export interface GlobalTableDescription {
  ReplicationGroup?: ReplicaDescription[] | null;
  GlobalTableArn?: string | null;
  CreationDateTime?: Date | number | null;
  GlobalTableStatus?: GlobalTableStatus | null;
  GlobalTableName?: string | null;
}
function toGlobalTableDescription(root: JSONValue): GlobalTableDescription {
  return prt.readObj({
    required: {},
    optional: {
      "ReplicationGroup": [toReplicaDescription],
      "GlobalTableArn": "s",
      "CreationDateTime": "d",
      "GlobalTableStatus": toGlobalTableStatus,
      "GlobalTableName": "s",
    },
  }, root);
}

// refs: 9 - tags: output, named, interface
export interface ReplicaDescription {
  RegionName?: string | null;
  ReplicaStatus?: ReplicaStatus | null;
  ReplicaStatusDescription?: string | null;
  ReplicaStatusPercentProgress?: string | null;
  KMSMasterKeyId?: string | null;
  ProvisionedThroughputOverride?: ProvisionedThroughputOverride | null;
  GlobalSecondaryIndexes?: ReplicaGlobalSecondaryIndexDescription[] | null;
  ReplicaInaccessibleDateTime?: Date | number | null;
}
function toReplicaDescription(root: JSONValue): ReplicaDescription {
  return prt.readObj({
    required: {},
    optional: {
      "RegionName": "s",
      "ReplicaStatus": toReplicaStatus,
      "ReplicaStatusDescription": "s",
      "ReplicaStatusPercentProgress": "s",
      "KMSMasterKeyId": "s",
      "ProvisionedThroughputOverride": toProvisionedThroughputOverride,
      "GlobalSecondaryIndexes": [toReplicaGlobalSecondaryIndexDescription],
      "ReplicaInaccessibleDateTime": "d",
    },
  }, root);
}

// refs: 13 - tags: output, named, enum
export type ReplicaStatus =
| "CREATING"
| "CREATION_FAILED"
| "UPDATING"
| "DELETING"
| "ACTIVE"
| "REGION_DISABLED"
;
function toReplicaStatus(root: JSONValue): ReplicaStatus | null {
  return ( false
    || root == "CREATING"
    || root == "CREATION_FAILED"
    || root == "UPDATING"
    || root == "DELETING"
    || root == "ACTIVE"
    || root == "REGION_DISABLED"
  ) ? root : null;
}

// refs: 9 - tags: output, named, interface
export interface ReplicaGlobalSecondaryIndexDescription {
  IndexName?: string | null;
  ProvisionedThroughputOverride?: ProvisionedThroughputOverride | null;
}
function toReplicaGlobalSecondaryIndexDescription(root: JSONValue): ReplicaGlobalSecondaryIndexDescription {
  return prt.readObj({
    required: {},
    optional: {
      "IndexName": "s",
      "ProvisionedThroughputOverride": toProvisionedThroughputOverride,
    },
  }, root);
}

// refs: 3 - tags: output, named, enum
export type GlobalTableStatus =
| "CREATING"
| "ACTIVE"
| "DELETING"
| "UPDATING"
;
function toGlobalTableStatus(root: JSONValue): GlobalTableStatus | null {
  return ( false
    || root == "CREATING"
    || root == "ACTIVE"
    || root == "DELETING"
    || root == "UPDATING"
  ) ? root : null;
}

// refs: 6 - tags: output, named, interface
export interface TableDescription {
  AttributeDefinitions?: AttributeDefinition[] | null;
  TableName?: string | null;
  KeySchema?: KeySchemaElement[] | null;
  TableStatus?: TableStatus | null;
  CreationDateTime?: Date | number | null;
  ProvisionedThroughput?: ProvisionedThroughputDescription | null;
  TableSizeBytes?: number | null;
  ItemCount?: number | null;
  TableArn?: string | null;
  TableId?: string | null;
  BillingModeSummary?: BillingModeSummary | null;
  LocalSecondaryIndexes?: LocalSecondaryIndexDescription[] | null;
  GlobalSecondaryIndexes?: GlobalSecondaryIndexDescription[] | null;
  StreamSpecification?: StreamSpecification | null;
  LatestStreamLabel?: string | null;
  LatestStreamArn?: string | null;
  GlobalTableVersion?: string | null;
  Replicas?: ReplicaDescription[] | null;
  RestoreSummary?: RestoreSummary | null;
  SSEDescription?: SSEDescription | null;
  ArchivalSummary?: ArchivalSummary | null;
}
function toTableDescription(root: JSONValue): TableDescription {
  return prt.readObj({
    required: {},
    optional: {
      "AttributeDefinitions": [toAttributeDefinition],
      "TableName": "s",
      "KeySchema": [toKeySchemaElement],
      "TableStatus": toTableStatus,
      "CreationDateTime": "d",
      "ProvisionedThroughput": toProvisionedThroughputDescription,
      "TableSizeBytes": "n",
      "ItemCount": "n",
      "TableArn": "s",
      "TableId": "s",
      "BillingModeSummary": toBillingModeSummary,
      "LocalSecondaryIndexes": [toLocalSecondaryIndexDescription],
      "GlobalSecondaryIndexes": [toGlobalSecondaryIndexDescription],
      "StreamSpecification": toStreamSpecification,
      "LatestStreamLabel": "s",
      "LatestStreamArn": "s",
      "GlobalTableVersion": "s",
      "Replicas": [toReplicaDescription],
      "RestoreSummary": toRestoreSummary,
      "SSEDescription": toSSEDescription,
      "ArchivalSummary": toArchivalSummary,
    },
  }, root);
}

// refs: 8 - tags: output, named, enum
export type TableStatus =
| "CREATING"
| "UPDATING"
| "DELETING"
| "ACTIVE"
| "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
| "ARCHIVING"
| "ARCHIVED"
;
function toTableStatus(root: JSONValue): TableStatus | null {
  return ( false
    || root == "CREATING"
    || root == "UPDATING"
    || root == "DELETING"
    || root == "ACTIVE"
    || root == "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
    || root == "ARCHIVING"
    || root == "ARCHIVED"
  ) ? root : null;
}

// refs: 12 - tags: output, named, interface
export interface ProvisionedThroughputDescription {
  LastIncreaseDateTime?: Date | number | null;
  LastDecreaseDateTime?: Date | number | null;
  NumberOfDecreasesToday?: number | null;
  ReadCapacityUnits?: number | null;
  WriteCapacityUnits?: number | null;
}
function toProvisionedThroughputDescription(root: JSONValue): ProvisionedThroughputDescription {
  return prt.readObj({
    required: {},
    optional: {
      "LastIncreaseDateTime": "d",
      "LastDecreaseDateTime": "d",
      "NumberOfDecreasesToday": "n",
      "ReadCapacityUnits": "n",
      "WriteCapacityUnits": "n",
    },
  }, root);
}

// refs: 8 - tags: output, named, interface
export interface BillingModeSummary {
  BillingMode?: BillingMode | null;
  LastUpdateToPayPerRequestDateTime?: Date | number | null;
}
function toBillingModeSummary(root: JSONValue): BillingModeSummary {
  return prt.readObj({
    required: {},
    optional: {
      "BillingMode": toBillingMode,
      "LastUpdateToPayPerRequestDateTime": "d",
    },
  }, root);
}

// refs: 6 - tags: output, named, interface
export interface LocalSecondaryIndexDescription {
  IndexName?: string | null;
  KeySchema?: KeySchemaElement[] | null;
  Projection?: Projection | null;
  IndexSizeBytes?: number | null;
  ItemCount?: number | null;
  IndexArn?: string | null;
}
function toLocalSecondaryIndexDescription(root: JSONValue): LocalSecondaryIndexDescription {
  return prt.readObj({
    required: {},
    optional: {
      "IndexName": "s",
      "KeySchema": [toKeySchemaElement],
      "Projection": toProjection,
      "IndexSizeBytes": "n",
      "ItemCount": "n",
      "IndexArn": "s",
    },
  }, root);
}

// refs: 6 - tags: output, named, interface
export interface GlobalSecondaryIndexDescription {
  IndexName?: string | null;
  KeySchema?: KeySchemaElement[] | null;
  Projection?: Projection | null;
  IndexStatus?: IndexStatus | null;
  Backfilling?: boolean | null;
  ProvisionedThroughput?: ProvisionedThroughputDescription | null;
  IndexSizeBytes?: number | null;
  ItemCount?: number | null;
  IndexArn?: string | null;
}
function toGlobalSecondaryIndexDescription(root: JSONValue): GlobalSecondaryIndexDescription {
  return prt.readObj({
    required: {},
    optional: {
      "IndexName": "s",
      "KeySchema": [toKeySchemaElement],
      "Projection": toProjection,
      "IndexStatus": toIndexStatus,
      "Backfilling": "b",
      "ProvisionedThroughput": toProvisionedThroughputDescription,
      "IndexSizeBytes": "n",
      "ItemCount": "n",
      "IndexArn": "s",
    },
  }, root);
}

// refs: 10 - tags: output, named, enum
export type IndexStatus =
| "CREATING"
| "UPDATING"
| "DELETING"
| "ACTIVE"
;
function toIndexStatus(root: JSONValue): IndexStatus | null {
  return ( false
    || root == "CREATING"
    || root == "UPDATING"
    || root == "DELETING"
    || root == "ACTIVE"
  ) ? root : null;
}

// refs: 6 - tags: output, named, interface
export interface RestoreSummary {
  SourceBackupArn?: string | null;
  SourceTableArn?: string | null;
  RestoreDateTime: Date | number;
  RestoreInProgress: boolean;
}
function toRestoreSummary(root: JSONValue): RestoreSummary {
  return prt.readObj({
    required: {
      "RestoreDateTime": "d",
      "RestoreInProgress": "b",
    },
    optional: {
      "SourceBackupArn": "s",
      "SourceTableArn": "s",
    },
  }, root);
}

// refs: 8 - tags: output, named, interface
export interface SSEDescription {
  Status?: SSEStatus | null;
  SSEType?: SSEType | null;
  KMSMasterKeyArn?: string | null;
  InaccessibleEncryptionDateTime?: Date | number | null;
}
function toSSEDescription(root: JSONValue): SSEDescription {
  return prt.readObj({
    required: {},
    optional: {
      "Status": toSSEStatus,
      "SSEType": toSSEType,
      "KMSMasterKeyArn": "s",
      "InaccessibleEncryptionDateTime": "d",
    },
  }, root);
}

// refs: 8 - tags: output, named, enum
export type SSEStatus =
| "ENABLING"
| "ENABLED"
| "DISABLING"
| "DISABLED"
| "UPDATING"
;
function toSSEStatus(root: JSONValue): SSEStatus | null {
  return ( false
    || root == "ENABLING"
    || root == "ENABLED"
    || root == "DISABLING"
    || root == "DISABLED"
    || root == "UPDATING"
  ) ? root : null;
}

// refs: 6 - tags: output, named, interface
export interface ArchivalSummary {
  ArchivalDateTime?: Date | number | null;
  ArchivalReason?: string | null;
  ArchivalBackupArn?: string | null;
}
function toArchivalSummary(root: JSONValue): ArchivalSummary {
  return prt.readObj({
    required: {},
    optional: {
      "ArchivalDateTime": "d",
      "ArchivalReason": "s",
      "ArchivalBackupArn": "s",
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface BackupDescription {
  BackupDetails?: BackupDetails | null;
  SourceTableDetails?: SourceTableDetails | null;
  SourceTableFeatureDetails?: SourceTableFeatureDetails | null;
}
function toBackupDescription(root: JSONValue): BackupDescription {
  return prt.readObj({
    required: {},
    optional: {
      "BackupDetails": toBackupDetails,
      "SourceTableDetails": toSourceTableDetails,
      "SourceTableFeatureDetails": toSourceTableFeatureDetails,
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface SourceTableDetails {
  TableName: string;
  TableId: string;
  TableArn?: string | null;
  TableSizeBytes?: number | null;
  KeySchema: KeySchemaElement[];
  TableCreationDateTime: Date | number;
  ProvisionedThroughput: ProvisionedThroughput;
  ItemCount?: number | null;
  BillingMode?: BillingMode | null;
}
function toSourceTableDetails(root: JSONValue): SourceTableDetails {
  return prt.readObj({
    required: {
      "TableName": "s",
      "TableId": "s",
      "KeySchema": [toKeySchemaElement],
      "TableCreationDateTime": "d",
      "ProvisionedThroughput": toProvisionedThroughput,
    },
    optional: {
      "TableArn": "s",
      "TableSizeBytes": "n",
      "ItemCount": "n",
      "BillingMode": toBillingMode,
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface SourceTableFeatureDetails {
  LocalSecondaryIndexes?: LocalSecondaryIndexInfo[] | null;
  GlobalSecondaryIndexes?: GlobalSecondaryIndexInfo[] | null;
  StreamDescription?: StreamSpecification | null;
  TimeToLiveDescription?: TimeToLiveDescription | null;
  SSEDescription?: SSEDescription | null;
}
function toSourceTableFeatureDetails(root: JSONValue): SourceTableFeatureDetails {
  return prt.readObj({
    required: {},
    optional: {
      "LocalSecondaryIndexes": [toLocalSecondaryIndexInfo],
      "GlobalSecondaryIndexes": [toGlobalSecondaryIndexInfo],
      "StreamDescription": toStreamSpecification,
      "TimeToLiveDescription": toTimeToLiveDescription,
      "SSEDescription": toSSEDescription,
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface LocalSecondaryIndexInfo {
  IndexName?: string | null;
  KeySchema?: KeySchemaElement[] | null;
  Projection?: Projection | null;
}
function toLocalSecondaryIndexInfo(root: JSONValue): LocalSecondaryIndexInfo {
  return prt.readObj({
    required: {},
    optional: {
      "IndexName": "s",
      "KeySchema": [toKeySchemaElement],
      "Projection": toProjection,
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface GlobalSecondaryIndexInfo {
  IndexName?: string | null;
  KeySchema?: KeySchemaElement[] | null;
  Projection?: Projection | null;
  ProvisionedThroughput?: ProvisionedThroughput | null;
}
function toGlobalSecondaryIndexInfo(root: JSONValue): GlobalSecondaryIndexInfo {
  return prt.readObj({
    required: {},
    optional: {
      "IndexName": "s",
      "KeySchema": [toKeySchemaElement],
      "Projection": toProjection,
      "ProvisionedThroughput": toProvisionedThroughput,
    },
  }, root);
}

// refs: 3 - tags: output, named, interface
export interface TimeToLiveDescription {
  TimeToLiveStatus?: TimeToLiveStatus | null;
  AttributeName?: string | null;
}
function toTimeToLiveDescription(root: JSONValue): TimeToLiveDescription {
  return prt.readObj({
    required: {},
    optional: {
      "TimeToLiveStatus": toTimeToLiveStatus,
      "AttributeName": "s",
    },
  }, root);
}

// refs: 3 - tags: output, named, enum
export type TimeToLiveStatus =
| "ENABLING"
| "DISABLING"
| "ENABLED"
| "DISABLED"
;
function toTimeToLiveStatus(root: JSONValue): TimeToLiveStatus | null {
  return ( false
    || root == "ENABLING"
    || root == "DISABLING"
    || root == "ENABLED"
    || root == "DISABLED"
  ) ? root : null;
}

// refs: 2 - tags: output, named, interface
export interface ContinuousBackupsDescription {
  ContinuousBackupsStatus: ContinuousBackupsStatus;
  PointInTimeRecoveryDescription?: PointInTimeRecoveryDescription | null;
}
function toContinuousBackupsDescription(root: JSONValue): ContinuousBackupsDescription {
  return prt.readObj({
    required: {
      "ContinuousBackupsStatus": toContinuousBackupsStatus,
    },
    optional: {
      "PointInTimeRecoveryDescription": toPointInTimeRecoveryDescription,
    },
  }, root);
}

// refs: 2 - tags: output, named, enum
export type ContinuousBackupsStatus =
| "ENABLED"
| "DISABLED"
;
function toContinuousBackupsStatus(root: JSONValue): ContinuousBackupsStatus | null {
  return ( false
    || root == "ENABLED"
    || root == "DISABLED"
  ) ? root : null;
}

// refs: 2 - tags: output, named, interface
export interface PointInTimeRecoveryDescription {
  PointInTimeRecoveryStatus?: PointInTimeRecoveryStatus | null;
  EarliestRestorableDateTime?: Date | number | null;
  LatestRestorableDateTime?: Date | number | null;
}
function toPointInTimeRecoveryDescription(root: JSONValue): PointInTimeRecoveryDescription {
  return prt.readObj({
    required: {},
    optional: {
      "PointInTimeRecoveryStatus": toPointInTimeRecoveryStatus,
      "EarliestRestorableDateTime": "d",
      "LatestRestorableDateTime": "d",
    },
  }, root);
}

// refs: 2 - tags: output, named, enum
export type PointInTimeRecoveryStatus =
| "ENABLED"
| "DISABLED"
;
function toPointInTimeRecoveryStatus(root: JSONValue): PointInTimeRecoveryStatus | null {
  return ( false
    || root == "ENABLED"
    || root == "DISABLED"
  ) ? root : null;
}

// refs: 3 - tags: output, named, enum
export type ContributorInsightsStatus =
| "ENABLING"
| "ENABLED"
| "DISABLING"
| "DISABLED"
| "FAILED"
;
function toContributorInsightsStatus(root: JSONValue): ContributorInsightsStatus | null {
  return ( false
    || root == "ENABLING"
    || root == "ENABLED"
    || root == "DISABLING"
    || root == "DISABLED"
    || root == "FAILED"
  ) ? root : null;
}

// refs: 1 - tags: output, named, interface
export interface FailureException {
  ExceptionName?: string | null;
  ExceptionDescription?: string | null;
}
function toFailureException(root: JSONValue): FailureException {
  return prt.readObj({
    required: {},
    optional: {
      "ExceptionName": "s",
      "ExceptionDescription": "s",
    },
  }, root);
}

// refs: 1 - tags: output, named, interface
export interface Endpoint {
  Address: string;
  CachePeriodInMinutes: number;
}
function toEndpoint(root: JSONValue): Endpoint {
  return prt.readObj({
    required: {
      "Address": "s",
      "CachePeriodInMinutes": "n",
    },
    optional: {},
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface ReplicaSettingsDescription {
  RegionName: string;
  ReplicaStatus?: ReplicaStatus | null;
  ReplicaBillingModeSummary?: BillingModeSummary | null;
  ReplicaProvisionedReadCapacityUnits?: number | null;
  ReplicaProvisionedReadCapacityAutoScalingSettings?: AutoScalingSettingsDescription | null;
  ReplicaProvisionedWriteCapacityUnits?: number | null;
  ReplicaProvisionedWriteCapacityAutoScalingSettings?: AutoScalingSettingsDescription | null;
  ReplicaGlobalSecondaryIndexSettings?: ReplicaGlobalSecondaryIndexSettingsDescription[] | null;
}
function toReplicaSettingsDescription(root: JSONValue): ReplicaSettingsDescription {
  return prt.readObj({
    required: {
      "RegionName": "s",
    },
    optional: {
      "ReplicaStatus": toReplicaStatus,
      "ReplicaBillingModeSummary": toBillingModeSummary,
      "ReplicaProvisionedReadCapacityUnits": "n",
      "ReplicaProvisionedReadCapacityAutoScalingSettings": toAutoScalingSettingsDescription,
      "ReplicaProvisionedWriteCapacityUnits": "n",
      "ReplicaProvisionedWriteCapacityAutoScalingSettings": toAutoScalingSettingsDescription,
      "ReplicaGlobalSecondaryIndexSettings": [toReplicaGlobalSecondaryIndexSettingsDescription],
    },
  }, root);
}

// refs: 16 - tags: output, named, interface
export interface AutoScalingSettingsDescription {
  MinimumUnits?: number | null;
  MaximumUnits?: number | null;
  AutoScalingDisabled?: boolean | null;
  AutoScalingRoleArn?: string | null;
  ScalingPolicies?: AutoScalingPolicyDescription[] | null;
}
function toAutoScalingSettingsDescription(root: JSONValue): AutoScalingSettingsDescription {
  return prt.readObj({
    required: {},
    optional: {
      "MinimumUnits": "n",
      "MaximumUnits": "n",
      "AutoScalingDisabled": "b",
      "AutoScalingRoleArn": "s",
      "ScalingPolicies": [toAutoScalingPolicyDescription],
    },
  }, root);
}

// refs: 16 - tags: output, named, interface
export interface AutoScalingPolicyDescription {
  PolicyName?: string | null;
  TargetTrackingScalingPolicyConfiguration?: AutoScalingTargetTrackingScalingPolicyConfigurationDescription | null;
}
function toAutoScalingPolicyDescription(root: JSONValue): AutoScalingPolicyDescription {
  return prt.readObj({
    required: {},
    optional: {
      "PolicyName": "s",
      "TargetTrackingScalingPolicyConfiguration": toAutoScalingTargetTrackingScalingPolicyConfigurationDescription,
    },
  }, root);
}

// refs: 16 - tags: output, named, interface
export interface AutoScalingTargetTrackingScalingPolicyConfigurationDescription {
  DisableScaleIn?: boolean | null;
  ScaleInCooldown?: number | null;
  ScaleOutCooldown?: number | null;
  TargetValue: number;
}
function toAutoScalingTargetTrackingScalingPolicyConfigurationDescription(root: JSONValue): AutoScalingTargetTrackingScalingPolicyConfigurationDescription {
  return prt.readObj({
    required: {
      "TargetValue": "n",
    },
    optional: {
      "DisableScaleIn": "b",
      "ScaleInCooldown": "n",
      "ScaleOutCooldown": "n",
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface ReplicaGlobalSecondaryIndexSettingsDescription {
  IndexName: string;
  IndexStatus?: IndexStatus | null;
  ProvisionedReadCapacityUnits?: number | null;
  ProvisionedReadCapacityAutoScalingSettings?: AutoScalingSettingsDescription | null;
  ProvisionedWriteCapacityUnits?: number | null;
  ProvisionedWriteCapacityAutoScalingSettings?: AutoScalingSettingsDescription | null;
}
function toReplicaGlobalSecondaryIndexSettingsDescription(root: JSONValue): ReplicaGlobalSecondaryIndexSettingsDescription {
  return prt.readObj({
    required: {
      "IndexName": "s",
    },
    optional: {
      "IndexStatus": toIndexStatus,
      "ProvisionedReadCapacityUnits": "n",
      "ProvisionedReadCapacityAutoScalingSettings": toAutoScalingSettingsDescription,
      "ProvisionedWriteCapacityUnits": "n",
      "ProvisionedWriteCapacityAutoScalingSettings": toAutoScalingSettingsDescription,
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface TableAutoScalingDescription {
  TableName?: string | null;
  TableStatus?: TableStatus | null;
  Replicas?: ReplicaAutoScalingDescription[] | null;
}
function toTableAutoScalingDescription(root: JSONValue): TableAutoScalingDescription {
  return prt.readObj({
    required: {},
    optional: {
      "TableName": "s",
      "TableStatus": toTableStatus,
      "Replicas": [toReplicaAutoScalingDescription],
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface ReplicaAutoScalingDescription {
  RegionName?: string | null;
  GlobalSecondaryIndexes?: ReplicaGlobalSecondaryIndexAutoScalingDescription[] | null;
  ReplicaProvisionedReadCapacityAutoScalingSettings?: AutoScalingSettingsDescription | null;
  ReplicaProvisionedWriteCapacityAutoScalingSettings?: AutoScalingSettingsDescription | null;
  ReplicaStatus?: ReplicaStatus | null;
}
function toReplicaAutoScalingDescription(root: JSONValue): ReplicaAutoScalingDescription {
  return prt.readObj({
    required: {},
    optional: {
      "RegionName": "s",
      "GlobalSecondaryIndexes": [toReplicaGlobalSecondaryIndexAutoScalingDescription],
      "ReplicaProvisionedReadCapacityAutoScalingSettings": toAutoScalingSettingsDescription,
      "ReplicaProvisionedWriteCapacityAutoScalingSettings": toAutoScalingSettingsDescription,
      "ReplicaStatus": toReplicaStatus,
    },
  }, root);
}

// refs: 2 - tags: output, named, interface
export interface ReplicaGlobalSecondaryIndexAutoScalingDescription {
  IndexName?: string | null;
  IndexStatus?: IndexStatus | null;
  ProvisionedReadCapacityAutoScalingSettings?: AutoScalingSettingsDescription | null;
  ProvisionedWriteCapacityAutoScalingSettings?: AutoScalingSettingsDescription | null;
}
function toReplicaGlobalSecondaryIndexAutoScalingDescription(root: JSONValue): ReplicaGlobalSecondaryIndexAutoScalingDescription {
  return prt.readObj({
    required: {},
    optional: {
      "IndexName": "s",
      "IndexStatus": toIndexStatus,
      "ProvisionedReadCapacityAutoScalingSettings": toAutoScalingSettingsDescription,
      "ProvisionedWriteCapacityAutoScalingSettings": toAutoScalingSettingsDescription,
    },
  }, root);
}

// refs: 1 - tags: output, named, interface
export interface BackupSummary {
  TableName?: string | null;
  TableId?: string | null;
  TableArn?: string | null;
  BackupArn?: string | null;
  BackupName?: string | null;
  BackupCreationDateTime?: Date | number | null;
  BackupExpiryDateTime?: Date | number | null;
  BackupStatus?: BackupStatus | null;
  BackupType?: BackupType | null;
  BackupSizeBytes?: number | null;
}
function toBackupSummary(root: JSONValue): BackupSummary {
  return prt.readObj({
    required: {},
    optional: {
      "TableName": "s",
      "TableId": "s",
      "TableArn": "s",
      "BackupArn": "s",
      "BackupName": "s",
      "BackupCreationDateTime": "d",
      "BackupExpiryDateTime": "d",
      "BackupStatus": toBackupStatus,
      "BackupType": toBackupType,
      "BackupSizeBytes": "n",
    },
  }, root);
}

// refs: 1 - tags: output, named, interface
export interface ContributorInsightsSummary {
  TableName?: string | null;
  IndexName?: string | null;
  ContributorInsightsStatus?: ContributorInsightsStatus | null;
}
function toContributorInsightsSummary(root: JSONValue): ContributorInsightsSummary {
  return prt.readObj({
    required: {},
    optional: {
      "TableName": "s",
      "IndexName": "s",
      "ContributorInsightsStatus": toContributorInsightsStatus,
    },
  }, root);
}

// refs: 1 - tags: output, named, interface
export interface GlobalTable {
  GlobalTableName?: string | null;
  ReplicationGroup?: Replica[] | null;
}
function toGlobalTable(root: JSONValue): GlobalTable {
  return prt.readObj({
    required: {},
    optional: {
      "GlobalTableName": "s",
      "ReplicationGroup": [toReplica],
    },
  }, root);
}

// refs: 1 - tags: output, named, interface
export interface ItemResponse {
  Item?: { [key: string]: AttributeValue } | null;
}
function toItemResponse(root: JSONValue): ItemResponse {
  return prt.readObj({
    required: {},
    optional: {
      "Item": x => prt.readMap(String, toAttributeValue, x),
    },
  }, root);
}
