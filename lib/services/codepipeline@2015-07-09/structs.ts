// Autogenerated API structures for: AWS CodePipeline

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface AcknowledgeJobInput {
  jobId: string;
  nonce: string;
}

// refs: 1 - tags: named, input
export interface AcknowledgeThirdPartyJobInput {
  jobId: string;
  nonce: string;
  clientToken: string;
}

// refs: 1 - tags: named, input
export interface CreateCustomActionTypeInput {
  category: ActionCategory;
  provider: string;
  version: string;
  settings?: ActionTypeSettings | null;
  configurationProperties?: ActionConfigurationProperty[] | null;
  inputArtifactDetails: ArtifactDetails;
  outputArtifactDetails: ArtifactDetails;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreatePipelineInput {
  pipeline: PipelineDeclaration;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface DeleteCustomActionTypeInput {
  category: ActionCategory;
  provider: string;
  version: string;
}

// refs: 1 - tags: named, input
export interface DeletePipelineInput {
  name: string;
}

// refs: 1 - tags: named, input
export interface DeleteWebhookInput {
  name: string;
}

// refs: 1 - tags: named, input
export interface DeregisterWebhookWithThirdPartyInput {
  webhookName?: string | null;
}

// refs: 1 - tags: named, input
export interface DisableStageTransitionInput {
  pipelineName: string;
  stageName: string;
  transitionType: StageTransitionType;
  reason: string;
}

// refs: 1 - tags: named, input
export interface EnableStageTransitionInput {
  pipelineName: string;
  stageName: string;
  transitionType: StageTransitionType;
}

// refs: 1 - tags: named, input
export interface GetJobDetailsInput {
  jobId: string;
}

// refs: 1 - tags: named, input
export interface GetPipelineInput {
  name: string;
  version?: number | null;
}

// refs: 1 - tags: named, input
export interface GetPipelineExecutionInput {
  pipelineName: string;
  pipelineExecutionId: string;
}

// refs: 1 - tags: named, input
export interface GetPipelineStateInput {
  name: string;
}

// refs: 1 - tags: named, input
export interface GetThirdPartyJobDetailsInput {
  jobId: string;
  clientToken: string;
}

// refs: 1 - tags: named, input
export interface ListActionExecutionsInput {
  pipelineName: string;
  filter?: ActionExecutionFilter | null;
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListActionTypesInput {
  actionOwnerFilter?: ActionOwner | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListPipelineExecutionsInput {
  pipelineName: string;
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListPipelinesInput {
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceInput {
  resourceArn: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListWebhooksInput {
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface PollForJobsInput {
  actionTypeId: ActionTypeId;
  maxBatchSize?: number | null;
  queryParam?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface PollForThirdPartyJobsInput {
  actionTypeId: ActionTypeId;
  maxBatchSize?: number | null;
}

// refs: 1 - tags: named, input
export interface PutActionRevisionInput {
  pipelineName: string;
  stageName: string;
  actionName: string;
  actionRevision: ActionRevision;
}

// refs: 1 - tags: named, input
export interface PutApprovalResultInput {
  pipelineName: string;
  stageName: string;
  actionName: string;
  result: ApprovalResult;
  token: string;
}

// refs: 1 - tags: named, input
export interface PutJobFailureResultInput {
  jobId: string;
  failureDetails: FailureDetails;
}

// refs: 1 - tags: named, input
export interface PutJobSuccessResultInput {
  jobId: string;
  currentRevision?: CurrentRevision | null;
  continuationToken?: string | null;
  executionDetails?: ExecutionDetails | null;
  outputVariables?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface PutThirdPartyJobFailureResultInput {
  jobId: string;
  clientToken: string;
  failureDetails: FailureDetails;
}

// refs: 1 - tags: named, input
export interface PutThirdPartyJobSuccessResultInput {
  jobId: string;
  clientToken: string;
  currentRevision?: CurrentRevision | null;
  continuationToken?: string | null;
  executionDetails?: ExecutionDetails | null;
}

// refs: 1 - tags: named, input
export interface PutWebhookInput {
  webhook: WebhookDefinition;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface RegisterWebhookWithThirdPartyInput {
  webhookName?: string | null;
}

// refs: 1 - tags: named, input
export interface RetryStageExecutionInput {
  pipelineName: string;
  stageName: string;
  pipelineExecutionId: string;
  retryMode: StageRetryMode;
}

// refs: 1 - tags: named, input
export interface StartPipelineExecutionInput {
  name: string;
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface StopPipelineExecutionInput {
  pipelineName: string;
  pipelineExecutionId: string;
  abandon?: boolean | null;
  reason?: string | null;
}

// refs: 1 - tags: named, input
export interface TagResourceInput {
  resourceArn: string;
  tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagResourceInput {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdatePipelineInput {
  pipeline: PipelineDeclaration;
}

// refs: 1 - tags: named, output
export interface AcknowledgeJobOutput {
  status?: JobStatus | null;
}

// refs: 1 - tags: named, output
export interface AcknowledgeThirdPartyJobOutput {
  status?: JobStatus | null;
}

// refs: 1 - tags: named, output
export interface CreateCustomActionTypeOutput {
  actionType: ActionType;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface CreatePipelineOutput {
  pipeline?: PipelineDeclaration | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteWebhookOutput {
}

// refs: 1 - tags: named, output
export interface DeregisterWebhookWithThirdPartyOutput {
}

// refs: 1 - tags: named, output
export interface GetJobDetailsOutput {
  jobDetails?: JobDetails | null;
}

// refs: 1 - tags: named, output
export interface GetPipelineOutput {
  pipeline?: PipelineDeclaration | null;
  metadata?: PipelineMetadata | null;
}

// refs: 1 - tags: named, output
export interface GetPipelineExecutionOutput {
  pipelineExecution?: PipelineExecution | null;
}

// refs: 1 - tags: named, output
export interface GetPipelineStateOutput {
  pipelineName?: string | null;
  pipelineVersion?: number | null;
  stageStates?: StageState[] | null;
  created?: Date | number | null;
  updated?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface GetThirdPartyJobDetailsOutput {
  jobDetails?: ThirdPartyJobDetails | null;
}

// refs: 1 - tags: named, output
export interface ListActionExecutionsOutput {
  actionExecutionDetails?: ActionExecutionDetail[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListActionTypesOutput {
  actionTypes: ActionType[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListPipelineExecutionsOutput {
  pipelineExecutionSummaries?: PipelineExecutionSummary[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListPipelinesOutput {
  pipelines?: PipelineSummary[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceOutput {
  tags?: Tag[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListWebhooksOutput {
  webhooks?: ListWebhookItem[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface PollForJobsOutput {
  jobs?: Job[] | null;
}

// refs: 1 - tags: named, output
export interface PollForThirdPartyJobsOutput {
  jobs?: ThirdPartyJob[] | null;
}

// refs: 1 - tags: named, output
export interface PutActionRevisionOutput {
  newRevision?: boolean | null;
  pipelineExecutionId?: string | null;
}

// refs: 1 - tags: named, output
export interface PutApprovalResultOutput {
  approvedAt?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface PutWebhookOutput {
  webhook?: ListWebhookItem | null;
}

// refs: 1 - tags: named, output
export interface RegisterWebhookWithThirdPartyOutput {
}

// refs: 1 - tags: named, output
export interface RetryStageExecutionOutput {
  pipelineExecutionId?: string | null;
}

// refs: 1 - tags: named, output
export interface StartPipelineExecutionOutput {
  pipelineExecutionId?: string | null;
}

// refs: 1 - tags: named, output
export interface StopPipelineExecutionOutput {
  pipelineExecutionId?: string | null;
}

// refs: 1 - tags: named, output
export interface TagResourceOutput {
}

// refs: 1 - tags: named, output
export interface UntagResourceOutput {
}

// refs: 1 - tags: named, output
export interface UpdatePipelineOutput {
  pipeline?: PipelineDeclaration | null;
}

// refs: 15 - tags: input, named, enum, output
export type ActionCategory =
| "Source"
| "Build"
| "Deploy"
| "Test"
| "Invoke"
| "Approval"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface ActionTypeSettings {
  thirdPartyConfigurationUrl?: string | null;
  entityUrlTemplate?: string | null;
  executionUrlTemplate?: string | null;
  revisionUrlTemplate?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface ActionConfigurationProperty {
  name: string;
  required: boolean;
  key: boolean;
  secret: boolean;
  queryable?: boolean | null;
  description?: string | null;
  type?: ActionConfigurationPropertyType | null;
}

// refs: 3 - tags: input, named, enum, output
export type ActionConfigurationPropertyType =
| "String"
| "Number"
| "Boolean"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, interface, output
export interface ArtifactDetails {
  minimumCount: number;
  maximumCount: number;
}

// refs: 9 - tags: input, named, interface, output
export interface Tag {
  key: string;
  value: string;
}

// refs: 5 - tags: input, named, interface, output
export interface PipelineDeclaration {
  name: string;
  roleArn: string;
  artifactStore?: ArtifactStore | null;
  artifactStores?: { [key: string]: ArtifactStore | null | undefined } | null;
  stages: StageDeclaration[];
  version?: number | null;
}

// refs: 10 - tags: input, named, interface, output
export interface ArtifactStore {
  type: ArtifactStoreType;
  location: string;
  encryptionKey?: EncryptionKey | null;
}

// refs: 10 - tags: input, named, enum, output
export type ArtifactStoreType =
| "S3"
| cmnP.UnexpectedEnumValue;

// refs: 13 - tags: input, named, interface, output
export interface EncryptionKey {
  id: string;
  type: EncryptionKeyType;
}

// refs: 13 - tags: input, named, enum, output
export type EncryptionKeyType =
| "KMS"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, interface, output
export interface StageDeclaration {
  name: string;
  blockers?: BlockerDeclaration[] | null;
  actions: ActionDeclaration[];
}

// refs: 5 - tags: input, named, interface, output
export interface BlockerDeclaration {
  name: string;
  type: BlockerType;
}

// refs: 5 - tags: input, named, enum, output
export type BlockerType =
| "Schedule"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, interface, output
export interface ActionDeclaration {
  name: string;
  actionTypeId: ActionTypeId;
  runOrder?: number | null;
  configuration?: { [key: string]: string | null | undefined } | null;
  outputArtifacts?: OutputArtifact[] | null;
  inputArtifacts?: InputArtifact[] | null;
  roleArn?: string | null;
  region?: string | null;
  namespace?: string | null;
}

// refs: 13 - tags: input, named, interface, output
export interface ActionTypeId {
  category: ActionCategory;
  owner: ActionOwner;
  provider: string;
  version: string;
}

// refs: 14 - tags: input, named, enum, output
export type ActionOwner =
| "AWS"
| "ThirdParty"
| "Custom"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, interface, output
export interface OutputArtifact {
  name: string;
}

// refs: 5 - tags: input, named, interface, output
export interface InputArtifact {
  name: string;
}

// refs: 2 - tags: input, named, enum
export type StageTransitionType =
| "Inbound"
| "Outbound"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ActionExecutionFilter {
  pipelineExecutionId?: string | null;
}

// refs: 2 - tags: input, named, interface, output
export interface ActionRevision {
  revisionId: string;
  revisionChangeId: string;
  created: Date | number;
}

// refs: 1 - tags: input, named, interface
export interface ApprovalResult {
  summary: string;
  status: ApprovalStatus;
}

// refs: 1 - tags: input, named, enum
export type ApprovalStatus =
| "Approved"
| "Rejected"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface
export interface FailureDetails {
  type: FailureType;
  message: string;
  externalExecutionId?: string | null;
}

// refs: 2 - tags: input, named, enum
export type FailureType =
| "JobFailed"
| "ConfigurationError"
| "PermissionError"
| "RevisionOutOfSync"
| "RevisionUnavailable"
| "SystemUnavailable"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface
export interface CurrentRevision {
  revision: string;
  changeIdentifier: string;
  created?: Date | number | null;
  revisionSummary?: string | null;
}

// refs: 2 - tags: input, named, interface
export interface ExecutionDetails {
  summary?: string | null;
  externalExecutionId?: string | null;
  percentComplete?: number | null;
}

// refs: 3 - tags: input, named, interface, output
export interface WebhookDefinition {
  name: string;
  targetPipeline: string;
  targetAction: string;
  filters: WebhookFilterRule[];
  authentication: WebhookAuthenticationType;
  authenticationConfiguration: WebhookAuthConfiguration;
}

// refs: 3 - tags: input, named, interface, output
export interface WebhookFilterRule {
  jsonPath: string;
  matchEquals?: string | null;
}

// refs: 3 - tags: input, named, enum, output
export type WebhookAuthenticationType =
| "GITHUB_HMAC"
| "IP"
| "UNAUTHENTICATED"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface WebhookAuthConfiguration {
  AllowedIPRange?: string | null;
  SecretToken?: string | null;
}

// refs: 1 - tags: input, named, enum
export type StageRetryMode =
| "FAILED_ACTIONS"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type JobStatus =
| "Created"
| "Queued"
| "Dispatched"
| "InProgress"
| "TimedOut"
| "Succeeded"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface ActionType {
  id: ActionTypeId;
  settings?: ActionTypeSettings | null;
  actionConfigurationProperties?: ActionConfigurationProperty[] | null;
  inputArtifactDetails: ArtifactDetails;
  outputArtifactDetails: ArtifactDetails;
}

// refs: 1 - tags: output, named, interface
export interface JobDetails {
  id?: string | null;
  data?: JobData | null;
  accountId?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface JobData {
  actionTypeId?: ActionTypeId | null;
  actionConfiguration?: ActionConfiguration | null;
  pipelineContext?: PipelineContext | null;
  inputArtifacts?: Artifact[] | null;
  outputArtifacts?: Artifact[] | null;
  artifactCredentials?: AWSSessionCredentials | null;
  continuationToken?: string | null;
  encryptionKey?: EncryptionKey | null;
}

// refs: 3 - tags: output, named, interface
export interface ActionConfiguration {
  configuration?: { [key: string]: string | null | undefined } | null;
}

// refs: 3 - tags: output, named, interface
export interface PipelineContext {
  pipelineName?: string | null;
  stage?: StageContext | null;
  action?: ActionContext | null;
  pipelineArn?: string | null;
  pipelineExecutionId?: string | null;
}

// refs: 3 - tags: output, named, interface
export interface StageContext {
  name?: string | null;
}

// refs: 3 - tags: output, named, interface
export interface ActionContext {
  name?: string | null;
  actionExecutionId?: string | null;
}

// refs: 6 - tags: output, named, interface
export interface Artifact {
  name?: string | null;
  revision?: string | null;
  location?: ArtifactLocation | null;
}

// refs: 6 - tags: output, named, interface
export interface ArtifactLocation {
  type?: ArtifactLocationType | null;
  s3Location?: S3ArtifactLocation | null;
}

// refs: 6 - tags: output, named, enum
export type ArtifactLocationType =
| "S3"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: output, named, interface
export interface S3ArtifactLocation {
  bucketName: string;
  objectKey: string;
}

// refs: 3 - tags: output, named, interface
export interface AWSSessionCredentials {
  accessKeyId: string;
  secretAccessKey: string;
  sessionToken: string;
}

// refs: 1 - tags: output, named, interface
export interface PipelineMetadata {
  pipelineArn?: string | null;
  created?: Date | number | null;
  updated?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface PipelineExecution {
  pipelineName?: string | null;
  pipelineVersion?: number | null;
  pipelineExecutionId?: string | null;
  status?: PipelineExecutionStatus | null;
  statusSummary?: string | null;
  artifactRevisions?: ArtifactRevision[] | null;
}

// refs: 2 - tags: output, named, enum
export type PipelineExecutionStatus =
| "Cancelled"
| "InProgress"
| "Stopped"
| "Stopping"
| "Succeeded"
| "Superseded"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ArtifactRevision {
  name?: string | null;
  revisionId?: string | null;
  revisionChangeIdentifier?: string | null;
  revisionSummary?: string | null;
  created?: Date | number | null;
  revisionUrl?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface StageState {
  stageName?: string | null;
  inboundExecution?: StageExecution | null;
  inboundTransitionState?: TransitionState | null;
  actionStates?: ActionState[] | null;
  latestExecution?: StageExecution | null;
}

// refs: 2 - tags: output, named, interface
export interface StageExecution {
  pipelineExecutionId: string;
  status: StageExecutionStatus;
}

// refs: 2 - tags: output, named, enum
export type StageExecutionStatus =
| "Cancelled"
| "InProgress"
| "Failed"
| "Stopped"
| "Stopping"
| "Succeeded"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface TransitionState {
  enabled?: boolean | null;
  lastChangedBy?: string | null;
  lastChangedAt?: Date | number | null;
  disabledReason?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ActionState {
  actionName?: string | null;
  currentRevision?: ActionRevision | null;
  latestExecution?: ActionExecution | null;
  entityUrl?: string | null;
  revisionUrl?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ActionExecution {
  actionExecutionId?: string | null;
  status?: ActionExecutionStatus | null;
  summary?: string | null;
  lastStatusChange?: Date | number | null;
  token?: string | null;
  lastUpdatedBy?: string | null;
  externalExecutionId?: string | null;
  externalExecutionUrl?: string | null;
  percentComplete?: number | null;
  errorDetails?: ErrorDetails | null;
}

// refs: 2 - tags: output, named, enum
export type ActionExecutionStatus =
| "InProgress"
| "Abandoned"
| "Succeeded"
| "Failed"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ErrorDetails {
  code?: string | null;
  message?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ThirdPartyJobDetails {
  id?: string | null;
  data?: ThirdPartyJobData | null;
  nonce?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ThirdPartyJobData {
  actionTypeId?: ActionTypeId | null;
  actionConfiguration?: ActionConfiguration | null;
  pipelineContext?: PipelineContext | null;
  inputArtifacts?: Artifact[] | null;
  outputArtifacts?: Artifact[] | null;
  artifactCredentials?: AWSSessionCredentials | null;
  continuationToken?: string | null;
  encryptionKey?: EncryptionKey | null;
}

// refs: 1 - tags: output, named, interface
export interface ActionExecutionDetail {
  pipelineExecutionId?: string | null;
  actionExecutionId?: string | null;
  pipelineVersion?: number | null;
  stageName?: string | null;
  actionName?: string | null;
  startTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
  status?: ActionExecutionStatus | null;
  input?: ActionExecutionInput | null;
  output?: ActionExecutionOutput | null;
}

// refs: 1 - tags: output, named, interface
export interface ActionExecutionInput {
  actionTypeId?: ActionTypeId | null;
  configuration?: { [key: string]: string | null | undefined } | null;
  resolvedConfiguration?: { [key: string]: string | null | undefined } | null;
  roleArn?: string | null;
  region?: string | null;
  inputArtifacts?: ArtifactDetail[] | null;
  namespace?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface ArtifactDetail {
  name?: string | null;
  s3location?: S3Location | null;
}

// refs: 2 - tags: output, named, interface
export interface S3Location {
  bucket?: string | null;
  key?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ActionExecutionOutput {
  outputArtifacts?: ArtifactDetail[] | null;
  executionResult?: ActionExecutionResult | null;
  outputVariables?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: output, named, interface
export interface ActionExecutionResult {
  externalExecutionId?: string | null;
  externalExecutionSummary?: string | null;
  externalExecutionUrl?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PipelineExecutionSummary {
  pipelineExecutionId?: string | null;
  status?: PipelineExecutionStatus | null;
  startTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
  sourceRevisions?: SourceRevision[] | null;
  trigger?: ExecutionTrigger | null;
  stopTrigger?: StopExecutionTrigger | null;
}

// refs: 1 - tags: output, named, interface
export interface SourceRevision {
  actionName: string;
  revisionId?: string | null;
  revisionSummary?: string | null;
  revisionUrl?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ExecutionTrigger {
  triggerType?: TriggerType | null;
  triggerDetail?: string | null;
}

// refs: 1 - tags: output, named, enum
export type TriggerType =
| "CreatePipeline"
| "StartPipelineExecution"
| "PollForSourceChanges"
| "Webhook"
| "CloudWatchEvent"
| "PutActionRevision"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface StopExecutionTrigger {
  reason?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PipelineSummary {
  name?: string | null;
  version?: number | null;
  created?: Date | number | null;
  updated?: Date | number | null;
}

// refs: 2 - tags: output, named, interface
export interface ListWebhookItem {
  definition: WebhookDefinition;
  url: string;
  errorMessage?: string | null;
  errorCode?: string | null;
  lastTriggered?: Date | number | null;
  arn?: string | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: output, named, interface
export interface Job {
  id?: string | null;
  data?: JobData | null;
  nonce?: string | null;
  accountId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ThirdPartyJob {
  clientId?: string | null;
  jobId?: string | null;
}
