// Autogenerated API structures for: Amazon Interactive Video Service

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface BatchGetChannelRequest {
  arns: string[];
}

// refs: 1 - tags: named, input
export interface BatchGetStreamKeyRequest {
  arns: string[];
}

// refs: 1 - tags: named, input
export interface CreateChannelRequest {
  name?: string | null;
  latencyMode?: ChannelLatencyMode | null;
  type?: ChannelType | null;
  authorized?: boolean | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface CreateStreamKeyRequest {
  channelArn: string;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface DeleteChannelRequest {
  arn: string;
}

// refs: 1 - tags: named, input
export interface DeletePlaybackKeyPairRequest {
  arn: string;
}

// refs: 1 - tags: named, input
export interface DeleteStreamKeyRequest {
  arn: string;
}

// refs: 1 - tags: named, input
export interface GetChannelRequest {
  arn: string;
}

// refs: 1 - tags: named, input
export interface GetPlaybackKeyPairRequest {
  arn: string;
}

// refs: 1 - tags: named, input
export interface GetStreamRequest {
  channelArn: string;
}

// refs: 1 - tags: named, input
export interface GetStreamKeyRequest {
  arn: string;
}

// refs: 1 - tags: named, input
export interface ImportPlaybackKeyPairRequest {
  publicKeyMaterial: string;
  name?: string | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface ListChannelsRequest {
  filterByName?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListPlaybackKeyPairsRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListStreamKeysRequest {
  channelArn: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListStreamsRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  resourceArn: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface PutMetadataRequest {
  channelArn: string;
  metadata: string;
}

// refs: 1 - tags: named, input
export interface StopStreamRequest {
  channelArn: string;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceArn: string;
  tags: { [key: string]: string | null | undefined };
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateChannelRequest {
  arn: string;
  name?: string | null;
  latencyMode?: ChannelLatencyMode | null;
  type?: ChannelType | null;
  authorized?: boolean | null;
}

// refs: 1 - tags: named, output
export interface BatchGetChannelResponse {
  channels?: Channel[] | null;
  errors?: BatchError[] | null;
}

// refs: 1 - tags: named, output
export interface BatchGetStreamKeyResponse {
  streamKeys?: StreamKey[] | null;
  errors?: BatchError[] | null;
}

// refs: 1 - tags: named, output
export interface CreateChannelResponse {
  channel?: Channel | null;
  streamKey?: StreamKey | null;
}

// refs: 1 - tags: named, output
export interface CreateStreamKeyResponse {
  streamKey?: StreamKey | null;
}

// refs: 1 - tags: named, output
export interface DeletePlaybackKeyPairResponse {
}

// refs: 1 - tags: named, output
export interface GetChannelResponse {
  channel?: Channel | null;
}

// refs: 1 - tags: named, output
export interface GetPlaybackKeyPairResponse {
  keyPair?: PlaybackKeyPair | null;
}

// refs: 1 - tags: named, output
export interface GetStreamResponse {
  stream?: Stream | null;
}

// refs: 1 - tags: named, output
export interface GetStreamKeyResponse {
  streamKey?: StreamKey | null;
}

// refs: 1 - tags: named, output
export interface ImportPlaybackKeyPairResponse {
  keyPair?: PlaybackKeyPair | null;
}

// refs: 1 - tags: named, output
export interface ListChannelsResponse {
  channels: ChannelSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListPlaybackKeyPairsResponse {
  keyPairs: PlaybackKeyPairSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListStreamKeysResponse {
  streamKeys: StreamKeySummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListStreamsResponse {
  streams: StreamSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  tags: { [key: string]: string | null | undefined };
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface StopStreamResponse {
}

// refs: 1 - tags: named, output
export interface TagResourceResponse {
}

// refs: 1 - tags: named, output
export interface UntagResourceResponse {
}

// refs: 1 - tags: named, output
export interface UpdateChannelResponse {
  channel?: Channel | null;
}

// refs: 7 - tags: input, named, enum, output
export type ChannelLatencyMode =
| "NORMAL"
| "LOW"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type ChannelType =
| "BASIC"
| "STANDARD"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface Channel {
  arn?: string | null;
  name?: string | null;
  latencyMode?: ChannelLatencyMode | null;
  type?: ChannelType | null;
  ingestEndpoint?: string | null;
  playbackUrl?: string | null;
  authorized?: boolean | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 2 - tags: output, named, interface
export interface BatchError {
  arn?: string | null;
  code?: string | null;
  message?: string | null;
}

// refs: 4 - tags: output, named, interface
export interface StreamKey {
  arn?: string | null;
  value?: string | null;
  channelArn?: string | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 2 - tags: output, named, interface
export interface PlaybackKeyPair {
  arn?: string | null;
  name?: string | null;
  fingerprint?: string | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: output, named, interface
export interface Stream {
  channelArn?: string | null;
  playbackUrl?: string | null;
  startTime?: Date | number | null;
  state?: StreamState | null;
  health?: StreamHealth | null;
  viewerCount?: number | null;
}

// refs: 2 - tags: output, named, enum
export type StreamState =
| "LIVE"
| "OFFLINE"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type StreamHealth =
| "HEALTHY"
| "STARVING"
| "UNKNOWN"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ChannelSummary {
  arn?: string | null;
  name?: string | null;
  latencyMode?: ChannelLatencyMode | null;
  authorized?: boolean | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: output, named, interface
export interface PlaybackKeyPairSummary {
  arn?: string | null;
  name?: string | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: output, named, interface
export interface StreamKeySummary {
  arn?: string | null;
  channelArn?: string | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: output, named, interface
export interface StreamSummary {
  channelArn?: string | null;
  state?: StreamState | null;
  health?: StreamHealth | null;
  viewerCount?: number | null;
  startTime?: Date | number | null;
}
