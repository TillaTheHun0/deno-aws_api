// Autogenerated API structures for: Braket

import * as cmnP from "../../encoding/common.ts";
import * as jsonP from "../../encoding/json.ts";

// refs: 1 - tags: named, input
export interface CancelQuantumTaskRequest {
  clientToken: string;
  quantumTaskArn: string;
}

// refs: 1 - tags: named, input
export interface CreateQuantumTaskRequest {
  action: jsonP.JSONValue;
  clientToken: string;
  deviceArn: string;
  deviceParameters?: jsonP.JSONValue | null;
  outputS3Bucket: string;
  outputS3KeyPrefix: string;
  shots: number;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface GetDeviceRequest {
  deviceArn: string;
}

// refs: 1 - tags: named, input
export interface GetQuantumTaskRequest {
  quantumTaskArn: string;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface SearchDevicesRequest {
  filters: SearchDevicesFilter[];
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface SearchQuantumTasksRequest {
  filters: SearchQuantumTasksFilter[];
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceArn: string;
  tags: { [key: string]: string | null | undefined };
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, output
export interface CancelQuantumTaskResponse {
  cancellationStatus: CancellationStatus;
  quantumTaskArn: string;
}

// refs: 1 - tags: named, output
export interface CreateQuantumTaskResponse {
  quantumTaskArn: string;
}

// refs: 1 - tags: named, output
export interface GetDeviceResponse {
  deviceArn: string;
  deviceCapabilities: jsonP.JSONValue;
  deviceName: string;
  deviceStatus: DeviceStatus;
  deviceType: DeviceType;
  providerName: string;
}

// refs: 1 - tags: named, output
export interface GetQuantumTaskResponse {
  createdAt: Date | number;
  deviceArn: string;
  deviceParameters: jsonP.JSONValue;
  endedAt?: Date | number | null;
  failureReason?: string | null;
  outputS3Bucket: string;
  outputS3Directory: string;
  quantumTaskArn: string;
  shots: number;
  status: QuantumTaskStatus;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, output
export interface SearchDevicesResponse {
  devices: DeviceSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface SearchQuantumTasksResponse {
  nextToken?: string | null;
  quantumTasks: QuantumTaskSummary[];
}

// refs: 1 - tags: input, named, interface
export interface SearchDevicesFilter {
  name: string;
  values: string[];
}

// refs: 1 - tags: input, named, interface
export interface SearchQuantumTasksFilter {
  name: string;
  operator: SearchQuantumTasksFilterOperator;
  values: string[];
}

// refs: 1 - tags: input, named, enum
export type SearchQuantumTasksFilterOperator =
| "LT"
| "LTE"
| "EQUAL"
| "GT"
| "GTE"
| "BETWEEN"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type CancellationStatus =
| "CANCELLING"
| "CANCELLED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type DeviceStatus =
| "ONLINE"
| "OFFLINE"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type DeviceType =
| "QPU"
| "SIMULATOR"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type QuantumTaskStatus =
| "CREATED"
| "QUEUED"
| "RUNNING"
| "COMPLETED"
| "FAILED"
| "CANCELLING"
| "CANCELLED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface DeviceSummary {
  deviceArn: string;
  deviceName: string;
  deviceStatus: DeviceStatus;
  deviceType: DeviceType;
  providerName: string;
}

// refs: 1 - tags: output, named, interface
export interface QuantumTaskSummary {
  createdAt: Date | number;
  deviceArn: string;
  endedAt?: Date | number | null;
  outputS3Bucket: string;
  outputS3Directory: string;
  quantumTaskArn: string;
  shots: number;
  status: QuantumTaskStatus;
  tags?: { [key: string]: string | null | undefined } | null;
}
