// Autogenerated API client for: Amazon SageMaker Runtime

import type { ServiceClient, ApiFactory, ApiMetadata } from '../../client/common.ts';
interface RequestConfig {
  abortSignal?: AbortSignal;
}

import * as cmnP from "../../encoding/common.ts";
import * as jsonP from "../../encoding/json.ts";

export default class SageMakerRuntime {
  #client: ServiceClient;
  constructor(apiFactory: ApiFactory) {
    this.#client = apiFactory.buildServiceClient(SageMakerRuntime.ApiMetadata);
  }

  static ApiMetadata: ApiMetadata = {
    "apiVersion": "2017-05-13",
    "endpointPrefix": "runtime.sagemaker",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Amazon SageMaker Runtime",
    "serviceId": "SageMaker Runtime",
    "signatureVersion": "v4",
    "signingName": "sagemaker",
    "uid": "runtime.sagemaker-2017-05-13"
  };

  async invokeEndpoint(
    {abortSignal, ...params}: RequestConfig & InvokeEndpointInput,
  ): Promise<InvokeEndpointOutput> {
    const headers = new Headers;
    if (params["ContentType"] != null) headers.append("Content-Type", params["ContentType"]);
    if (params["Accept"] != null) headers.append("Accept", params["Accept"]);
    if (params["CustomAttributes"] != null) headers.append("X-Amzn-SageMaker-Custom-Attributes", params["CustomAttributes"]);
    if (params["TargetModel"] != null) headers.append("X-Amzn-SageMaker-Target-Model", params["TargetModel"]);
    if (params["TargetVariant"] != null) headers.append("X-Amzn-SageMaker-Target-Variant", params["TargetVariant"]);
    const body = typeof params["Body"] === 'string' ? new TextEncoder().encode(params["Body"]) : params["Body"];
    const resp = await this.#client.performRequest({
      abortSignal, headers, body,
      action: "InvokeEndpoint",
      requestUri: cmnP.encodePath`/endpoints/${params["EndpointName"]}/invocations`,
    });
  return {
    ContentType: resp.headers.get("Content-Type"),
    InvokedProductionVariant: resp.headers.get("x-Amzn-Invoked-Production-Variant"),
    CustomAttributes: resp.headers.get("X-Amzn-SageMaker-Custom-Attributes"),
    Body: await resp.text(), // TODO: maybe allow proper body streaming,
  };
  }

}

// refs: 1 - tags: named, input
export interface InvokeEndpointInput {
  EndpointName: string;
  Body: Uint8Array | string;
  ContentType?: string | null;
  Accept?: string | null;
  CustomAttributes?: string | null;
  TargetModel?: string | null;
  TargetVariant?: string | null;
}

// refs: 1 - tags: named, output
export interface InvokeEndpointOutput {
  Body: Uint8Array | string;
  ContentType?: string | null;
  InvokedProductionVariant?: string | null;
  CustomAttributes?: string | null;
}
