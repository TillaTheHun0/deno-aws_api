// Autogenerated API structures for: AWS Certificate Manager Private Certificate Authority

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface CreateCertificateAuthorityRequest {
  CertificateAuthorityConfiguration: CertificateAuthorityConfiguration;
  RevocationConfiguration?: RevocationConfiguration | null;
  CertificateAuthorityType: CertificateAuthorityType;
  IdempotencyToken?: string | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateCertificateAuthorityAuditReportRequest {
  CertificateAuthorityArn: string;
  S3BucketName: string;
  AuditReportResponseFormat: AuditReportResponseFormat;
}

// refs: 1 - tags: named, input
export interface CreatePermissionRequest {
  CertificateAuthorityArn: string;
  Principal: string;
  SourceAccount?: string | null;
  Actions: ActionType[];
}

// refs: 1 - tags: named, input
export interface DeleteCertificateAuthorityRequest {
  CertificateAuthorityArn: string;
  PermanentDeletionTimeInDays?: number | null;
}

// refs: 1 - tags: named, input
export interface DeletePermissionRequest {
  CertificateAuthorityArn: string;
  Principal: string;
  SourceAccount?: string | null;
}

// refs: 1 - tags: named, input
export interface DeletePolicyRequest {
  ResourceArn: string;
}

// refs: 1 - tags: named, input
export interface DescribeCertificateAuthorityRequest {
  CertificateAuthorityArn: string;
}

// refs: 1 - tags: named, input
export interface DescribeCertificateAuthorityAuditReportRequest {
  CertificateAuthorityArn: string;
  AuditReportId: string;
}

// refs: 1 - tags: named, input
export interface GetCertificateRequest {
  CertificateAuthorityArn: string;
  CertificateArn: string;
}

// refs: 1 - tags: named, input
export interface GetCertificateAuthorityCertificateRequest {
  CertificateAuthorityArn: string;
}

// refs: 1 - tags: named, input
export interface GetCertificateAuthorityCsrRequest {
  CertificateAuthorityArn: string;
}

// refs: 1 - tags: named, input
export interface GetPolicyRequest {
  ResourceArn: string;
}

// refs: 1 - tags: named, input
export interface ImportCertificateAuthorityCertificateRequest {
  CertificateAuthorityArn: string;
  Certificate: Uint8Array | string;
  CertificateChain?: Uint8Array | string | null;
}

// refs: 1 - tags: named, input
export interface IssueCertificateRequest {
  ApiPassthrough?: ApiPassthrough | null;
  CertificateAuthorityArn: string;
  Csr: Uint8Array | string;
  SigningAlgorithm: SigningAlgorithm;
  TemplateArn?: string | null;
  Validity: Validity;
  ValidityNotBefore?: Validity | null;
  IdempotencyToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListCertificateAuthoritiesRequest {
  NextToken?: string | null;
  MaxResults?: number | null;
  ResourceOwner?: ResourceOwner | null;
}

// refs: 1 - tags: named, input
export interface ListPermissionsRequest {
  CertificateAuthorityArn: string;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsRequest {
  CertificateAuthorityArn: string;
  NextToken?: string | null;
  MaxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface PutPolicyRequest {
  ResourceArn: string;
  Policy: string;
}

// refs: 1 - tags: named, input
export interface RestoreCertificateAuthorityRequest {
  CertificateAuthorityArn: string;
}

// refs: 1 - tags: named, input
export interface RevokeCertificateRequest {
  CertificateAuthorityArn: string;
  CertificateSerial: string;
  RevocationReason: RevocationReason;
}

// refs: 1 - tags: named, input
export interface TagCertificateAuthorityRequest {
  CertificateAuthorityArn: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagCertificateAuthorityRequest {
  CertificateAuthorityArn: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UpdateCertificateAuthorityRequest {
  CertificateAuthorityArn: string;
  RevocationConfiguration?: RevocationConfiguration | null;
  Status?: CertificateAuthorityStatus | null;
}

// refs: 1 - tags: named, output
export interface CreateCertificateAuthorityResponse {
  CertificateAuthorityArn?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateCertificateAuthorityAuditReportResponse {
  AuditReportId?: string | null;
  S3Key?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeCertificateAuthorityResponse {
  CertificateAuthority?: CertificateAuthority | null;
}

// refs: 1 - tags: named, output
export interface DescribeCertificateAuthorityAuditReportResponse {
  AuditReportStatus?: AuditReportStatus | null;
  S3BucketName?: string | null;
  S3Key?: string | null;
  CreatedAt?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface GetCertificateResponse {
  Certificate?: string | null;
  CertificateChain?: string | null;
}

// refs: 1 - tags: named, output
export interface GetCertificateAuthorityCertificateResponse {
  Certificate?: string | null;
  CertificateChain?: string | null;
}

// refs: 1 - tags: named, output
export interface GetCertificateAuthorityCsrResponse {
  Csr?: string | null;
}

// refs: 1 - tags: named, output
export interface GetPolicyResponse {
  Policy?: string | null;
}

// refs: 1 - tags: named, output
export interface IssueCertificateResponse {
  CertificateArn?: string | null;
}

// refs: 1 - tags: named, output
export interface ListCertificateAuthoritiesResponse {
  CertificateAuthorities?: CertificateAuthority[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListPermissionsResponse {
  Permissions?: Permission[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsResponse {
  Tags?: Tag[] | null;
  NextToken?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface CertificateAuthorityConfiguration {
  KeyAlgorithm: KeyAlgorithm;
  SigningAlgorithm: SigningAlgorithm;
  Subject: ASN1Subject;
  CsrExtensions?: CsrExtensions | null;
}

// refs: 3 - tags: input, named, enum, output
export type KeyAlgorithm =
| "RSA_2048"
| "RSA_4096"
| "EC_prime256v1"
| "EC_secp384r1"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type SigningAlgorithm =
| "SHA256WITHECDSA"
| "SHA384WITHECDSA"
| "SHA512WITHECDSA"
| "SHA256WITHRSA"
| "SHA384WITHRSA"
| "SHA512WITHRSA"
| cmnP.UnexpectedEnumValue;

// refs: 8 - tags: input, named, interface, output
export interface ASN1Subject {
  Country?: string | null;
  Organization?: string | null;
  OrganizationalUnit?: string | null;
  DistinguishedNameQualifier?: string | null;
  State?: string | null;
  CommonName?: string | null;
  SerialNumber?: string | null;
  Locality?: string | null;
  Title?: string | null;
  Surname?: string | null;
  GivenName?: string | null;
  Initials?: string | null;
  Pseudonym?: string | null;
  GenerationQualifier?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface CsrExtensions {
  KeyUsage?: KeyUsage | null;
  SubjectInformationAccess?: AccessDescription[] | null;
}

// refs: 4 - tags: input, named, interface, output
export interface KeyUsage {
  DigitalSignature?: boolean | null;
  NonRepudiation?: boolean | null;
  KeyEncipherment?: boolean | null;
  DataEncipherment?: boolean | null;
  KeyAgreement?: boolean | null;
  KeyCertSign?: boolean | null;
  CRLSign?: boolean | null;
  EncipherOnly?: boolean | null;
  DecipherOnly?: boolean | null;
}

// refs: 3 - tags: input, named, interface, output
export interface AccessDescription {
  AccessMethod: AccessMethod;
  AccessLocation: GeneralName;
}

// refs: 3 - tags: input, named, interface, output
export interface AccessMethod {
  CustomObjectIdentifier?: string | null;
  AccessMethodType?: AccessMethodType | null;
}

// refs: 3 - tags: input, named, enum, output
export type AccessMethodType =
| "CA_REPOSITORY"
| "RESOURCE_PKI_MANIFEST"
| "RESOURCE_PKI_NOTIFY"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface GeneralName {
  OtherName?: OtherName | null;
  Rfc822Name?: string | null;
  DnsName?: string | null;
  DirectoryName?: ASN1Subject | null;
  EdiPartyName?: EdiPartyName | null;
  UniformResourceIdentifier?: string | null;
  IpAddress?: string | null;
  RegisteredId?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface OtherName {
  TypeId: string;
  Value: string;
}

// refs: 4 - tags: input, named, interface, output
export interface EdiPartyName {
  PartyName: string;
  NameAssigner?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface RevocationConfiguration {
  CrlConfiguration?: CrlConfiguration | null;
}

// refs: 4 - tags: input, named, interface, output
export interface CrlConfiguration {
  Enabled: boolean;
  ExpirationInDays?: number | null;
  CustomCname?: string | null;
  S3BucketName?: string | null;
}

// refs: 3 - tags: input, named, enum, output
export type CertificateAuthorityType =
| "ROOT"
| "SUBORDINATE"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface Tag {
  Key: string;
  Value?: string | null;
}

// refs: 1 - tags: input, named, enum
export type AuditReportResponseFormat =
| "JSON"
| "CSV"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type ActionType =
| "IssueCertificate"
| "GetCertificate"
| "ListPermissions"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ApiPassthrough {
  Extensions?: Extensions | null;
  Subject?: ASN1Subject | null;
}

// refs: 1 - tags: input, named, interface
export interface Extensions {
  CertificatePolicies?: PolicyInformation[] | null;
  ExtendedKeyUsage?: ExtendedKeyUsage[] | null;
  KeyUsage?: KeyUsage | null;
  SubjectAlternativeNames?: GeneralName[] | null;
}

// refs: 1 - tags: input, named, interface
export interface PolicyInformation {
  CertPolicyId: string;
  PolicyQualifiers?: PolicyQualifierInfo[] | null;
}

// refs: 1 - tags: input, named, interface
export interface PolicyQualifierInfo {
  PolicyQualifierId: PolicyQualifierId;
  Qualifier: Qualifier;
}

// refs: 1 - tags: input, named, enum
export type PolicyQualifierId =
| "CPS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface Qualifier {
  CpsUri: string;
}

// refs: 1 - tags: input, named, interface
export interface ExtendedKeyUsage {
  ExtendedKeyUsageType?: ExtendedKeyUsageType | null;
  ExtendedKeyUsageObjectIdentifier?: string | null;
}

// refs: 1 - tags: input, named, enum
export type ExtendedKeyUsageType =
| "SERVER_AUTH"
| "CLIENT_AUTH"
| "CODE_SIGNING"
| "EMAIL_PROTECTION"
| "TIME_STAMPING"
| "OCSP_SIGNING"
| "SMART_CARD_LOGIN"
| "DOCUMENT_SIGNING"
| "CERTIFICATE_TRANSPARENCY"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface
export interface Validity {
  Value: number;
  Type: ValidityPeriodType;
}

// refs: 2 - tags: input, named, enum
export type ValidityPeriodType =
| "END_DATE"
| "ABSOLUTE"
| "DAYS"
| "MONTHS"
| "YEARS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ResourceOwner =
| "SELF"
| "OTHER_ACCOUNTS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type RevocationReason =
| "UNSPECIFIED"
| "KEY_COMPROMISE"
| "CERTIFICATE_AUTHORITY_COMPROMISE"
| "AFFILIATION_CHANGED"
| "SUPERSEDED"
| "CESSATION_OF_OPERATION"
| "PRIVILEGE_WITHDRAWN"
| "A_A_COMPROMISE"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, enum, output
export type CertificateAuthorityStatus =
| "CREATING"
| "PENDING_CERTIFICATE"
| "ACTIVE"
| "DELETED"
| "DISABLED"
| "EXPIRED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface CertificateAuthority {
  Arn?: string | null;
  OwnerAccount?: string | null;
  CreatedAt?: Date | number | null;
  LastStateChangeAt?: Date | number | null;
  Type?: CertificateAuthorityType | null;
  Serial?: string | null;
  Status?: CertificateAuthorityStatus | null;
  NotBefore?: Date | number | null;
  NotAfter?: Date | number | null;
  FailureReason?: FailureReason | null;
  CertificateAuthorityConfiguration?: CertificateAuthorityConfiguration | null;
  RevocationConfiguration?: RevocationConfiguration | null;
  RestorableUntil?: Date | number | null;
}

// refs: 2 - tags: output, named, enum
export type FailureReason =
| "REQUEST_TIMED_OUT"
| "UNSUPPORTED_ALGORITHM"
| "OTHER"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type AuditReportStatus =
| "CREATING"
| "SUCCESS"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Permission {
  CertificateAuthorityArn?: string | null;
  CreatedAt?: Date | number | null;
  Principal?: string | null;
  SourceAccount?: string | null;
  Actions?: ActionType[] | null;
  Policy?: string | null;
}
