// Autogenerated API structures for: AWS RDS DataService

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface BatchExecuteStatementRequest {
  database?: string | null;
  parameterSets?: SqlParameter[][] | null;
  resourceArn: string;
  schema?: string | null;
  secretArn: string;
  sql: string;
  transactionId?: string | null;
}

// refs: 1 - tags: named, input
export interface BeginTransactionRequest {
  database?: string | null;
  resourceArn: string;
  schema?: string | null;
  secretArn: string;
}

// refs: 1 - tags: named, input
export interface CommitTransactionRequest {
  resourceArn: string;
  secretArn: string;
  transactionId: string;
}

// refs: 1 - tags: named, input
export interface ExecuteSqlRequest {
  awsSecretStoreArn: string;
  database?: string | null;
  dbClusterOrInstanceArn: string;
  schema?: string | null;
  sqlStatements: string;
}

// refs: 1 - tags: named, input
export interface ExecuteStatementRequest {
  continueAfterTimeout?: boolean | null;
  database?: string | null;
  includeResultMetadata?: boolean | null;
  parameters?: SqlParameter[] | null;
  resourceArn: string;
  resultSetOptions?: ResultSetOptions | null;
  schema?: string | null;
  secretArn: string;
  sql: string;
  transactionId?: string | null;
}

// refs: 1 - tags: named, input
export interface RollbackTransactionRequest {
  resourceArn: string;
  secretArn: string;
  transactionId: string;
}

// refs: 1 - tags: named, output
export interface BatchExecuteStatementResponse {
  updateResults?: UpdateResult[] | null;
}

// refs: 1 - tags: named, output
export interface BeginTransactionResponse {
  transactionId?: string | null;
}

// refs: 1 - tags: named, output
export interface CommitTransactionResponse {
  transactionStatus?: string | null;
}

// refs: 1 - tags: named, output
export interface ExecuteSqlResponse {
  sqlStatementResults?: SqlStatementResult[] | null;
}

// refs: 1 - tags: named, output
export interface ExecuteStatementResponse {
  columnMetadata?: ColumnMetadata[] | null;
  generatedFields?: Field[] | null;
  numberOfRecordsUpdated?: number | null;
  records?: Field[][] | null;
}

// refs: 1 - tags: named, output
export interface RollbackTransactionResponse {
  transactionStatus?: string | null;
}

// refs: 2 - tags: input, named, interface
export interface SqlParameter {
  name?: string | null;
  typeHint?: TypeHint | null;
  value?: Field | null;
}

// refs: 2 - tags: input, named, enum
export type TypeHint =
| "JSON"
| "UUID"
| "TIMESTAMP"
| "DATE"
| "TIME"
| "DECIMAL"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, interface, output
export interface Field {
  arrayValue?: ArrayValue | null;
  blobValue?: Uint8Array | string | null;
  booleanValue?: boolean | null;
  doubleValue?: number | null;
  isNull?: boolean | null;
  longValue?: number | null;
  stringValue?: string | null;
}

// refs: 10 - tags: input, named, interface, recursed, output
export interface ArrayValue {
  arrayValues?: ArrayValue[] | null;
  booleanValues?: boolean[] | null;
  doubleValues?: number[] | null;
  longValues?: number[] | null;
  stringValues?: string[] | null;
}

// refs: 1 - tags: input, named, interface
export interface ResultSetOptions {
  decimalReturnType?: DecimalReturnType | null;
}

// refs: 1 - tags: input, named, enum
export type DecimalReturnType =
| "STRING"
| "DOUBLE_OR_LONG"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface UpdateResult {
  generatedFields?: Field[] | null;
}

// refs: 1 - tags: output, named, interface
export interface SqlStatementResult {
  numberOfRecordsUpdated?: number | null;
  resultFrame?: ResultFrame | null;
}

// refs: 1 - tags: output, named, interface
export interface ResultFrame {
  records?: Record[] | null;
  resultSetMetadata?: ResultSetMetadata | null;
}

// refs: 1 - tags: output, named, interface
export interface Record {
  values?: Value[] | null;
}

// refs: 3 - tags: output, named, interface, recursed
export interface Value {
  arrayValues?: Value[] | null;
  bigIntValue?: number | null;
  bitValue?: boolean | null;
  blobValue?: Uint8Array | string | null;
  doubleValue?: number | null;
  intValue?: number | null;
  isNull?: boolean | null;
  realValue?: number | null;
  stringValue?: string | null;
  structValue?: StructValue | null;
}

// refs: 1 - tags: output, named, interface
export interface StructValue {
  attributes?: Value[] | null;
}

// refs: 1 - tags: output, named, interface
export interface ResultSetMetadata {
  columnCount?: number | null;
  columnMetadata?: ColumnMetadata[] | null;
}

// refs: 2 - tags: output, named, interface
export interface ColumnMetadata {
  arrayBaseColumnType?: number | null;
  isAutoIncrement?: boolean | null;
  isCaseSensitive?: boolean | null;
  isCurrency?: boolean | null;
  isSigned?: boolean | null;
  label?: string | null;
  name?: string | null;
  nullable?: number | null;
  precision?: number | null;
  scale?: number | null;
  schemaName?: string | null;
  tableName?: string | null;
  type?: number | null;
  typeName?: string | null;
}
