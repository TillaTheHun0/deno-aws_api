// Autogenerated API structures for: Elastic Load Balancing

import * as cmnP from "../../encoding/common.ts";
import * as xmlP from "../../encoding/xml.ts";
import * as qsP from "../../encoding/querystring.ts";

// refs: 1 - tags: named, input
export interface AddTagsInput {
  LoadBalancerNames: string[];
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface ApplySecurityGroupsToLoadBalancerInput {
  LoadBalancerName: string;
  SecurityGroups: string[];
}

// refs: 1 - tags: named, input
export interface AttachLoadBalancerToSubnetsInput {
  LoadBalancerName: string;
  Subnets: string[];
}

// refs: 1 - tags: named, input
export interface ConfigureHealthCheckInput {
  LoadBalancerName: string;
  HealthCheck: HealthCheck;
}

// refs: 1 - tags: named, input
export interface CreateAppCookieStickinessPolicyInput {
  LoadBalancerName: string;
  PolicyName: string;
  CookieName: string;
}

// refs: 1 - tags: named, input
export interface CreateLBCookieStickinessPolicyInput {
  LoadBalancerName: string;
  PolicyName: string;
  CookieExpirationPeriod?: number | null;
}

// refs: 1 - tags: named, input
export interface CreateAccessPointInput {
  LoadBalancerName: string;
  Listeners: Listener[];
  AvailabilityZones?: string[] | null;
  Subnets?: string[] | null;
  SecurityGroups?: string[] | null;
  Scheme?: string | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateLoadBalancerListenerInput {
  LoadBalancerName: string;
  Listeners: Listener[];
}

// refs: 1 - tags: named, input
export interface CreateLoadBalancerPolicyInput {
  LoadBalancerName: string;
  PolicyName: string;
  PolicyTypeName: string;
  PolicyAttributes?: PolicyAttribute[] | null;
}

// refs: 1 - tags: named, input
export interface DeleteAccessPointInput {
  LoadBalancerName: string;
}

// refs: 1 - tags: named, input
export interface DeleteLoadBalancerListenerInput {
  LoadBalancerName: string;
  LoadBalancerPorts: number[];
}

// refs: 1 - tags: named, input
export interface DeleteLoadBalancerPolicyInput {
  LoadBalancerName: string;
  PolicyName: string;
}

// refs: 1 - tags: named, input
export interface DeregisterEndPointsInput {
  LoadBalancerName: string;
  Instances: Instance[];
}

// refs: 1 - tags: named, input
export interface DescribeAccountLimitsInput {
  Marker?: string | null;
  PageSize?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeEndPointStateInput {
  LoadBalancerName: string;
  Instances?: Instance[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeLoadBalancerAttributesInput {
  LoadBalancerName: string;
}

// refs: 1 - tags: named, input
export interface DescribeLoadBalancerPoliciesInput {
  LoadBalancerName?: string | null;
  PolicyNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeLoadBalancerPolicyTypesInput {
  PolicyTypeNames?: string[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeAccessPointsInput {
  LoadBalancerNames?: string[] | null;
  Marker?: string | null;
  PageSize?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeTagsInput {
  LoadBalancerNames: string[];
}

// refs: 1 - tags: named, input
export interface DetachLoadBalancerFromSubnetsInput {
  LoadBalancerName: string;
  Subnets: string[];
}

// refs: 1 - tags: named, input
export interface RemoveAvailabilityZonesInput {
  LoadBalancerName: string;
  AvailabilityZones: string[];
}

// refs: 1 - tags: named, input
export interface AddAvailabilityZonesInput {
  LoadBalancerName: string;
  AvailabilityZones: string[];
}

// refs: 1 - tags: named, input
export interface ModifyLoadBalancerAttributesInput {
  LoadBalancerName: string;
  LoadBalancerAttributes: LoadBalancerAttributes;
}

// refs: 1 - tags: named, input
export interface RegisterEndPointsInput {
  LoadBalancerName: string;
  Instances: Instance[];
}

// refs: 1 - tags: named, input
export interface RemoveTagsInput {
  LoadBalancerNames: string[];
  Tags: TagKeyOnly[];
}

// refs: 1 - tags: named, input
export interface SetLoadBalancerListenerSSLCertificateInput {
  LoadBalancerName: string;
  LoadBalancerPort: number;
  SSLCertificateId: string;
}

// refs: 1 - tags: named, input
export interface SetLoadBalancerPoliciesForBackendServerInput {
  LoadBalancerName: string;
  InstancePort: number;
  PolicyNames: string[];
}

// refs: 1 - tags: named, input
export interface SetLoadBalancerPoliciesOfListenerInput {
  LoadBalancerName: string;
  LoadBalancerPort: number;
  PolicyNames: string[];
}

// refs: 1 - tags: named, output
export interface AddTagsOutput {
}

// refs: 1 - tags: named, output
export interface ApplySecurityGroupsToLoadBalancerOutput {
  SecurityGroups: string[];
}

// refs: 1 - tags: named, output
export interface AttachLoadBalancerToSubnetsOutput {
  Subnets: string[];
}

// refs: 1 - tags: named, output
export interface ConfigureHealthCheckOutput {
  HealthCheck?: HealthCheck | null;
}

// refs: 1 - tags: named, output
export interface CreateAppCookieStickinessPolicyOutput {
}

// refs: 1 - tags: named, output
export interface CreateLBCookieStickinessPolicyOutput {
}

// refs: 1 - tags: named, output
export interface CreateAccessPointOutput {
  DNSName?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateLoadBalancerListenerOutput {
}

// refs: 1 - tags: named, output
export interface CreateLoadBalancerPolicyOutput {
}

// refs: 1 - tags: named, output
export interface DeleteAccessPointOutput {
}

// refs: 1 - tags: named, output
export interface DeleteLoadBalancerListenerOutput {
}

// refs: 1 - tags: named, output
export interface DeleteLoadBalancerPolicyOutput {
}

// refs: 1 - tags: named, output
export interface DeregisterEndPointsOutput {
  Instances: Instance[];
}

// refs: 1 - tags: named, output
export interface DescribeAccountLimitsOutput {
  Limits: Limit[];
  NextMarker?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeEndPointStateOutput {
  InstanceStates: InstanceState[];
}

// refs: 1 - tags: named, output
export interface DescribeLoadBalancerAttributesOutput {
  LoadBalancerAttributes?: LoadBalancerAttributes | null;
}

// refs: 1 - tags: named, output
export interface DescribeLoadBalancerPoliciesOutput {
  PolicyDescriptions: PolicyDescription[];
}

// refs: 1 - tags: named, output
export interface DescribeLoadBalancerPolicyTypesOutput {
  PolicyTypeDescriptions: PolicyTypeDescription[];
}

// refs: 1 - tags: named, output
export interface DescribeAccessPointsOutput {
  LoadBalancerDescriptions: LoadBalancerDescription[];
  NextMarker?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeTagsOutput {
  TagDescriptions: TagDescription[];
}

// refs: 1 - tags: named, output
export interface DetachLoadBalancerFromSubnetsOutput {
  Subnets: string[];
}

// refs: 1 - tags: named, output
export interface RemoveAvailabilityZonesOutput {
  AvailabilityZones: string[];
}

// refs: 1 - tags: named, output
export interface AddAvailabilityZonesOutput {
  AvailabilityZones: string[];
}

// refs: 1 - tags: named, output
export interface ModifyLoadBalancerAttributesOutput {
  LoadBalancerName?: string | null;
  LoadBalancerAttributes?: LoadBalancerAttributes | null;
}

// refs: 1 - tags: named, output
export interface RegisterEndPointsOutput {
  Instances: Instance[];
}

// refs: 1 - tags: named, output
export interface RemoveTagsOutput {
}

// refs: 1 - tags: named, output
export interface SetLoadBalancerListenerSSLCertificateOutput {
}

// refs: 1 - tags: named, output
export interface SetLoadBalancerPoliciesForBackendServerOutput {
}

// refs: 1 - tags: named, output
export interface SetLoadBalancerPoliciesOfListenerOutput {
}

// refs: 3 - tags: input, named, interface, output
export interface Tag {
  Key: string;
  Value?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface HealthCheck {
  Target: string;
  Interval: number;
  Timeout: number;
  UnhealthyThreshold: number;
  HealthyThreshold: number;
}

// refs: 3 - tags: input, named, interface, output
export interface Listener {
  Protocol: string;
  LoadBalancerPort: number;
  InstanceProtocol?: string | null;
  InstancePort: number;
  SSLCertificateId?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface PolicyAttribute {
  AttributeName?: string | null;
  AttributeValue?: string | null;
}

// refs: 6 - tags: input, named, interface, output
export interface Instance {
  InstanceId?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface LoadBalancerAttributes {
  CrossZoneLoadBalancing?: CrossZoneLoadBalancing | null;
  AccessLog?: AccessLog | null;
  ConnectionDraining?: ConnectionDraining | null;
  ConnectionSettings?: ConnectionSettings | null;
  AdditionalAttributes: AdditionalAttribute[];
}

// refs: 3 - tags: input, named, interface, output
export interface CrossZoneLoadBalancing {
  Enabled: boolean;
}

// refs: 3 - tags: input, named, interface, output
export interface AccessLog {
  Enabled: boolean;
  S3BucketName?: string | null;
  EmitInterval?: number | null;
  S3BucketPrefix?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface ConnectionDraining {
  Enabled: boolean;
  Timeout?: number | null;
}

// refs: 3 - tags: input, named, interface, output
export interface ConnectionSettings {
  IdleTimeout: number;
}

// refs: 3 - tags: input, named, interface, output
export interface AdditionalAttribute {
  Key?: string | null;
  Value?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface TagKeyOnly {
  Key?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Limit {
  Name?: string | null;
  Max?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface InstanceState {
  InstanceId?: string | null;
  State?: string | null;
  ReasonCode?: string | null;
  Description?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PolicyDescription {
  PolicyName?: string | null;
  PolicyTypeName?: string | null;
  PolicyAttributeDescriptions: PolicyAttributeDescription[];
}

// refs: 1 - tags: output, named, interface
export interface PolicyAttributeDescription {
  AttributeName?: string | null;
  AttributeValue?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PolicyTypeDescription {
  PolicyTypeName?: string | null;
  Description?: string | null;
  PolicyAttributeTypeDescriptions: PolicyAttributeTypeDescription[];
}

// refs: 1 - tags: output, named, interface
export interface PolicyAttributeTypeDescription {
  AttributeName?: string | null;
  AttributeType?: string | null;
  Description?: string | null;
  DefaultValue?: string | null;
  Cardinality?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface LoadBalancerDescription {
  LoadBalancerName?: string | null;
  DNSName?: string | null;
  CanonicalHostedZoneName?: string | null;
  CanonicalHostedZoneNameID?: string | null;
  ListenerDescriptions: ListenerDescription[];
  Policies?: Policies | null;
  BackendServerDescriptions: BackendServerDescription[];
  AvailabilityZones: string[];
  Subnets: string[];
  VPCId?: string | null;
  Instances: Instance[];
  HealthCheck?: HealthCheck | null;
  SourceSecurityGroup?: SourceSecurityGroup | null;
  SecurityGroups: string[];
  CreatedTime?: Date | number | null;
  Scheme?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ListenerDescription {
  Listener?: Listener | null;
  PolicyNames: string[];
}

// refs: 1 - tags: output, named, interface
export interface Policies {
  AppCookieStickinessPolicies: AppCookieStickinessPolicy[];
  LBCookieStickinessPolicies: LBCookieStickinessPolicy[];
  OtherPolicies: string[];
}

// refs: 1 - tags: output, named, interface
export interface AppCookieStickinessPolicy {
  PolicyName?: string | null;
  CookieName?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface LBCookieStickinessPolicy {
  PolicyName?: string | null;
  CookieExpirationPeriod?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface BackendServerDescription {
  InstancePort?: number | null;
  PolicyNames: string[];
}

// refs: 1 - tags: output, named, interface
export interface SourceSecurityGroup {
  OwnerAlias?: string | null;
  GroupName?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface TagDescription {
  LoadBalancerName?: string | null;
  Tags: Tag[];
}
