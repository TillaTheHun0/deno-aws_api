// Autogenerated API client for: Amazon WorkMail Message Flow

interface RequestConfig {
  abortSignal?: AbortSignal;
}

import * as cmnP from "../../encoding/common.ts";
import * as client from "../../client/common.ts";
import type * as s from "./structs.ts";

export default class WorkMailMessageFlow {
  #client: client.ServiceClient;
  constructor(apiFactory: client.ApiFactory) {
    this.#client = apiFactory.buildServiceClient(WorkMailMessageFlow.ApiMetadata);
  }

  static ApiMetadata: client.ApiMetadata = {
    "apiVersion": "2019-05-01",
    "endpointPrefix": "workmailmessageflow",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Amazon WorkMail Message Flow",
    "serviceId": "WorkMailMessageFlow",
    "signatureVersion": "v4",
    "uid": "workmailmessageflow-2019-05-01"
  };

  async getRawMessageContent(
    {abortSignal, ...params}: RequestConfig & s.GetRawMessageContentRequest,
  ): Promise<s.GetRawMessageContentResponse> {

    const resp = await this.#client.performRequest({
      abortSignal,
      action: "GetRawMessageContent",
      method: "GET",
      requestUri: cmnP.encodePath`/messages/${params["messageId"]}`,
    });
  return {
    messageContent: await resp.text(), // TODO: maybe allow proper body streaming,
  };
  }

}

