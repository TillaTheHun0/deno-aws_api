// Autogenerated API structures for: Amazon Elastic Container Registry Public

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface BatchCheckLayerAvailabilityRequest {
  registryId?: string | null;
  repositoryName: string;
  layerDigests: string[];
}

// refs: 1 - tags: named, input
export interface BatchDeleteImageRequest {
  registryId?: string | null;
  repositoryName: string;
  imageIds: ImageIdentifier[];
}

// refs: 1 - tags: named, input
export interface CompleteLayerUploadRequest {
  registryId?: string | null;
  repositoryName: string;
  uploadId: string;
  layerDigests: string[];
}

// refs: 1 - tags: named, input
export interface CreateRepositoryRequest {
  repositoryName: string;
  catalogData?: RepositoryCatalogDataInput | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface DeleteRepositoryRequest {
  registryId?: string | null;
  repositoryName: string;
  force?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeleteRepositoryPolicyRequest {
  registryId?: string | null;
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface DescribeImageTagsRequest {
  registryId?: string | null;
  repositoryName: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeImagesRequest {
  registryId?: string | null;
  repositoryName: string;
  imageIds?: ImageIdentifier[] | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeRegistriesRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface DescribeRepositoriesRequest {
  registryId?: string | null;
  repositoryNames?: string[] | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetRepositoryCatalogDataRequest {
  registryId?: string | null;
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface GetRepositoryPolicyRequest {
  registryId?: string | null;
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface InitiateLayerUploadRequest {
  registryId?: string | null;
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface PutImageRequest {
  registryId?: string | null;
  repositoryName: string;
  imageManifest: string;
  imageManifestMediaType?: string | null;
  imageTag?: string | null;
  imageDigest?: string | null;
}

// refs: 1 - tags: named, input
export interface PutRegistryCatalogDataRequest {
  displayName?: string | null;
}

// refs: 1 - tags: named, input
export interface PutRepositoryCatalogDataRequest {
  registryId?: string | null;
  repositoryName: string;
  catalogData: RepositoryCatalogDataInput;
}

// refs: 1 - tags: named, input
export interface SetRepositoryPolicyRequest {
  registryId?: string | null;
  repositoryName: string;
  policyText: string;
  force?: boolean | null;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceArn: string;
  tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UploadLayerPartRequest {
  registryId?: string | null;
  repositoryName: string;
  uploadId: string;
  partFirstByte: number;
  partLastByte: number;
  layerPartBlob: Uint8Array | string;
}

// refs: 1 - tags: named, output
export interface BatchCheckLayerAvailabilityResponse {
  layers?: Layer[] | null;
  failures?: LayerFailure[] | null;
}

// refs: 1 - tags: named, output
export interface BatchDeleteImageResponse {
  imageIds?: ImageIdentifier[] | null;
  failures?: ImageFailure[] | null;
}

// refs: 1 - tags: named, output
export interface CompleteLayerUploadResponse {
  registryId?: string | null;
  repositoryName?: string | null;
  uploadId?: string | null;
  layerDigest?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateRepositoryResponse {
  repository?: Repository | null;
  catalogData?: RepositoryCatalogData | null;
}

// refs: 1 - tags: named, output
export interface DeleteRepositoryResponse {
  repository?: Repository | null;
}

// refs: 1 - tags: named, output
export interface DeleteRepositoryPolicyResponse {
  registryId?: string | null;
  repositoryName?: string | null;
  policyText?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeImageTagsResponse {
  imageTagDetails?: ImageTagDetail[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeImagesResponse {
  imageDetails?: ImageDetail[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeRegistriesResponse {
  registries: Registry[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeRepositoriesResponse {
  repositories?: Repository[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAuthorizationTokenResponse {
  authorizationData?: AuthorizationData | null;
}

// refs: 1 - tags: named, output
export interface GetRegistryCatalogDataResponse {
  registryCatalogData: RegistryCatalogData;
}

// refs: 1 - tags: named, output
export interface GetRepositoryCatalogDataResponse {
  catalogData?: RepositoryCatalogData | null;
}

// refs: 1 - tags: named, output
export interface GetRepositoryPolicyResponse {
  registryId?: string | null;
  repositoryName?: string | null;
  policyText?: string | null;
}

// refs: 1 - tags: named, output
export interface InitiateLayerUploadResponse {
  uploadId?: string | null;
  partSize?: number | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface PutImageResponse {
  image?: Image | null;
}

// refs: 1 - tags: named, output
export interface PutRegistryCatalogDataResponse {
  registryCatalogData: RegistryCatalogData;
}

// refs: 1 - tags: named, output
export interface PutRepositoryCatalogDataResponse {
  catalogData?: RepositoryCatalogData | null;
}

// refs: 1 - tags: named, output
export interface SetRepositoryPolicyResponse {
  registryId?: string | null;
  repositoryName?: string | null;
  policyText?: string | null;
}

// refs: 1 - tags: named, output
export interface UploadLayerPartResponse {
  registryId?: string | null;
  repositoryName?: string | null;
  uploadId?: string | null;
  lastByteReceived?: number | null;
}

// refs: 5 - tags: input, named, interface, output
export interface ImageIdentifier {
  imageDigest?: string | null;
  imageTag?: string | null;
}

// refs: 2 - tags: input, named, interface
export interface RepositoryCatalogDataInput {
  description?: string | null;
  architectures?: string[] | null;
  operatingSystems?: string[] | null;
  logoImageBlob?: Uint8Array | string | null;
  aboutText?: string | null;
  usageText?: string | null;
}

// refs: 3 - tags: input, named, interface, output
export interface Tag {
  Key?: string | null;
  Value?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Layer {
  layerDigest?: string | null;
  layerAvailability?: LayerAvailability | null;
  layerSize?: number | null;
  mediaType?: string | null;
}

// refs: 1 - tags: output, named, enum
export type LayerAvailability =
| "AVAILABLE"
| "UNAVAILABLE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface LayerFailure {
  layerDigest?: string | null;
  failureCode?: LayerFailureCode | null;
  failureReason?: string | null;
}

// refs: 1 - tags: output, named, enum
export type LayerFailureCode =
| "InvalidLayerDigest"
| "MissingLayerDigest"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ImageFailure {
  imageId?: ImageIdentifier | null;
  failureCode?: ImageFailureCode | null;
  failureReason?: string | null;
}

// refs: 1 - tags: output, named, enum
export type ImageFailureCode =
| "InvalidImageDigest"
| "InvalidImageTag"
| "ImageTagDoesNotMatchDigest"
| "ImageNotFound"
| "MissingDigestAndTag"
| "ImageReferencedByManifestList"
| "KmsError"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface Repository {
  repositoryArn?: string | null;
  registryId?: string | null;
  repositoryName?: string | null;
  repositoryUri?: string | null;
  createdAt?: Date | number | null;
}

// refs: 3 - tags: output, named, interface
export interface RepositoryCatalogData {
  description?: string | null;
  architectures?: string[] | null;
  operatingSystems?: string[] | null;
  logoUrl?: string | null;
  aboutText?: string | null;
  usageText?: string | null;
  marketplaceCertified?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface ImageTagDetail {
  imageTag?: string | null;
  createdAt?: Date | number | null;
  imageDetail?: ReferencedImageDetail | null;
}

// refs: 1 - tags: output, named, interface
export interface ReferencedImageDetail {
  imageDigest?: string | null;
  imageSizeInBytes?: number | null;
  imagePushedAt?: Date | number | null;
  imageManifestMediaType?: string | null;
  artifactMediaType?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ImageDetail {
  registryId?: string | null;
  repositoryName?: string | null;
  imageDigest?: string | null;
  imageTags?: string[] | null;
  imageSizeInBytes?: number | null;
  imagePushedAt?: Date | number | null;
  imageManifestMediaType?: string | null;
  artifactMediaType?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Registry {
  registryId: string;
  registryArn: string;
  registryUri: string;
  verified: boolean;
  aliases: RegistryAlias[];
}

// refs: 1 - tags: output, named, interface
export interface RegistryAlias {
  name: string;
  status: RegistryAliasStatus;
  primaryRegistryAlias: boolean;
  defaultRegistryAlias: boolean;
}

// refs: 1 - tags: output, named, enum
export type RegistryAliasStatus =
| "ACTIVE"
| "PENDING"
| "REJECTED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface AuthorizationData {
  authorizationToken?: string | null;
  expiresAt?: Date | number | null;
}

// refs: 2 - tags: output, named, interface
export interface RegistryCatalogData {
  displayName?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Image {
  registryId?: string | null;
  repositoryName?: string | null;
  imageId?: ImageIdentifier | null;
  imageManifest?: string | null;
  imageManifestMediaType?: string | null;
}
