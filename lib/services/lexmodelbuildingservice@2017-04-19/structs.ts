// Autogenerated API structures for: Amazon Lex Model Building Service

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface CreateBotVersionRequest {
  name: string;
  checksum?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateIntentVersionRequest {
  name: string;
  checksum?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateSlotTypeVersionRequest {
  name: string;
  checksum?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteBotRequest {
  name: string;
}

// refs: 1 - tags: named, input
export interface DeleteBotAliasRequest {
  name: string;
  botName: string;
}

// refs: 1 - tags: named, input
export interface DeleteBotChannelAssociationRequest {
  name: string;
  botName: string;
  botAlias: string;
}

// refs: 1 - tags: named, input
export interface DeleteBotVersionRequest {
  name: string;
  version: string;
}

// refs: 1 - tags: named, input
export interface DeleteIntentRequest {
  name: string;
}

// refs: 1 - tags: named, input
export interface DeleteIntentVersionRequest {
  name: string;
  version: string;
}

// refs: 1 - tags: named, input
export interface DeleteSlotTypeRequest {
  name: string;
}

// refs: 1 - tags: named, input
export interface DeleteSlotTypeVersionRequest {
  name: string;
  version: string;
}

// refs: 1 - tags: named, input
export interface DeleteUtterancesRequest {
  botName: string;
  userId: string;
}

// refs: 1 - tags: named, input
export interface GetBotRequest {
  name: string;
  versionOrAlias: string;
}

// refs: 1 - tags: named, input
export interface GetBotAliasRequest {
  name: string;
  botName: string;
}

// refs: 1 - tags: named, input
export interface GetBotAliasesRequest {
  botName: string;
  nextToken?: string | null;
  maxResults?: number | null;
  nameContains?: string | null;
}

// refs: 1 - tags: named, input
export interface GetBotChannelAssociationRequest {
  name: string;
  botName: string;
  botAlias: string;
}

// refs: 1 - tags: named, input
export interface GetBotChannelAssociationsRequest {
  botName: string;
  botAlias: string;
  nextToken?: string | null;
  maxResults?: number | null;
  nameContains?: string | null;
}

// refs: 1 - tags: named, input
export interface GetBotVersionsRequest {
  name: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetBotsRequest {
  nextToken?: string | null;
  maxResults?: number | null;
  nameContains?: string | null;
}

// refs: 1 - tags: named, input
export interface GetBuiltinIntentRequest {
  signature: string;
}

// refs: 1 - tags: named, input
export interface GetBuiltinIntentsRequest {
  locale?: Locale | null;
  signatureContains?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetBuiltinSlotTypesRequest {
  locale?: Locale | null;
  signatureContains?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetExportRequest {
  name: string;
  version: string;
  resourceType: ResourceType;
  exportType: ExportType;
}

// refs: 1 - tags: named, input
export interface GetImportRequest {
  importId: string;
}

// refs: 1 - tags: named, input
export interface GetIntentRequest {
  name: string;
  version: string;
}

// refs: 1 - tags: named, input
export interface GetIntentVersionsRequest {
  name: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetIntentsRequest {
  nextToken?: string | null;
  maxResults?: number | null;
  nameContains?: string | null;
}

// refs: 1 - tags: named, input
export interface GetSlotTypeRequest {
  name: string;
  version: string;
}

// refs: 1 - tags: named, input
export interface GetSlotTypeVersionsRequest {
  name: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetSlotTypesRequest {
  nextToken?: string | null;
  maxResults?: number | null;
  nameContains?: string | null;
}

// refs: 1 - tags: named, input
export interface GetUtterancesViewRequest {
  botName: string;
  botVersions: string[];
  statusType: StatusType;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface PutBotRequest {
  name: string;
  description?: string | null;
  intents?: Intent[] | null;
  enableModelImprovements?: boolean | null;
  nluIntentConfidenceThreshold?: number | null;
  clarificationPrompt?: Prompt | null;
  abortStatement?: Statement | null;
  idleSessionTTLInSeconds?: number | null;
  voiceId?: string | null;
  checksum?: string | null;
  processBehavior?: ProcessBehavior | null;
  locale: Locale;
  childDirected: boolean;
  detectSentiment?: boolean | null;
  createVersion?: boolean | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface PutBotAliasRequest {
  name: string;
  description?: string | null;
  botVersion: string;
  botName: string;
  checksum?: string | null;
  conversationLogs?: ConversationLogsRequest | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface PutIntentRequest {
  name: string;
  description?: string | null;
  slots?: Slot[] | null;
  sampleUtterances?: string[] | null;
  confirmationPrompt?: Prompt | null;
  rejectionStatement?: Statement | null;
  followUpPrompt?: FollowUpPrompt | null;
  conclusionStatement?: Statement | null;
  dialogCodeHook?: CodeHook | null;
  fulfillmentActivity?: FulfillmentActivity | null;
  parentIntentSignature?: string | null;
  checksum?: string | null;
  createVersion?: boolean | null;
  kendraConfiguration?: KendraConfiguration | null;
  inputContexts?: InputContext[] | null;
  outputContexts?: OutputContext[] | null;
}

// refs: 1 - tags: named, input
export interface PutSlotTypeRequest {
  name: string;
  description?: string | null;
  enumerationValues?: EnumerationValue[] | null;
  checksum?: string | null;
  valueSelectionStrategy?: SlotValueSelectionStrategy | null;
  createVersion?: boolean | null;
  parentSlotTypeSignature?: string | null;
  slotTypeConfigurations?: SlotTypeConfiguration[] | null;
}

// refs: 1 - tags: named, input
export interface StartImportRequest {
  payload: Uint8Array | string;
  resourceType: ResourceType;
  mergeStrategy: MergeStrategy;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceArn: string;
  tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, output
export interface CreateBotVersionResponse {
  name?: string | null;
  description?: string | null;
  intents?: Intent[] | null;
  clarificationPrompt?: Prompt | null;
  abortStatement?: Statement | null;
  status?: Status | null;
  failureReason?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  idleSessionTTLInSeconds?: number | null;
  voiceId?: string | null;
  checksum?: string | null;
  version?: string | null;
  locale?: Locale | null;
  childDirected?: boolean | null;
  enableModelImprovements?: boolean | null;
  detectSentiment?: boolean | null;
}

// refs: 1 - tags: named, output
export interface CreateIntentVersionResponse {
  name?: string | null;
  description?: string | null;
  slots?: Slot[] | null;
  sampleUtterances?: string[] | null;
  confirmationPrompt?: Prompt | null;
  rejectionStatement?: Statement | null;
  followUpPrompt?: FollowUpPrompt | null;
  conclusionStatement?: Statement | null;
  dialogCodeHook?: CodeHook | null;
  fulfillmentActivity?: FulfillmentActivity | null;
  parentIntentSignature?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
  checksum?: string | null;
  kendraConfiguration?: KendraConfiguration | null;
  inputContexts?: InputContext[] | null;
  outputContexts?: OutputContext[] | null;
}

// refs: 1 - tags: named, output
export interface CreateSlotTypeVersionResponse {
  name?: string | null;
  description?: string | null;
  enumerationValues?: EnumerationValue[] | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
  checksum?: string | null;
  valueSelectionStrategy?: SlotValueSelectionStrategy | null;
  parentSlotTypeSignature?: string | null;
  slotTypeConfigurations?: SlotTypeConfiguration[] | null;
}

// refs: 1 - tags: named, output
export interface GetBotResponse {
  name?: string | null;
  description?: string | null;
  intents?: Intent[] | null;
  enableModelImprovements?: boolean | null;
  nluIntentConfidenceThreshold?: number | null;
  clarificationPrompt?: Prompt | null;
  abortStatement?: Statement | null;
  status?: Status | null;
  failureReason?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  idleSessionTTLInSeconds?: number | null;
  voiceId?: string | null;
  checksum?: string | null;
  version?: string | null;
  locale?: Locale | null;
  childDirected?: boolean | null;
  detectSentiment?: boolean | null;
}

// refs: 1 - tags: named, output
export interface GetBotAliasResponse {
  name?: string | null;
  description?: string | null;
  botVersion?: string | null;
  botName?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  checksum?: string | null;
  conversationLogs?: ConversationLogsResponse | null;
}

// refs: 1 - tags: named, output
export interface GetBotAliasesResponse {
  BotAliases?: BotAliasMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetBotChannelAssociationResponse {
  name?: string | null;
  description?: string | null;
  botAlias?: string | null;
  botName?: string | null;
  createdDate?: Date | number | null;
  type?: ChannelType | null;
  botConfiguration?: { [key: string]: string | null | undefined } | null;
  status?: ChannelStatus | null;
  failureReason?: string | null;
}

// refs: 1 - tags: named, output
export interface GetBotChannelAssociationsResponse {
  botChannelAssociations?: BotChannelAssociation[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetBotVersionsResponse {
  bots?: BotMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetBotsResponse {
  bots?: BotMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetBuiltinIntentResponse {
  signature?: string | null;
  supportedLocales?: Locale[] | null;
  slots?: BuiltinIntentSlot[] | null;
}

// refs: 1 - tags: named, output
export interface GetBuiltinIntentsResponse {
  intents?: BuiltinIntentMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetBuiltinSlotTypesResponse {
  slotTypes?: BuiltinSlotTypeMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetExportResponse {
  name?: string | null;
  version?: string | null;
  resourceType?: ResourceType | null;
  exportType?: ExportType | null;
  exportStatus?: ExportStatus | null;
  failureReason?: string | null;
  url?: string | null;
}

// refs: 1 - tags: named, output
export interface GetImportResponse {
  name?: string | null;
  resourceType?: ResourceType | null;
  mergeStrategy?: MergeStrategy | null;
  importId?: string | null;
  importStatus?: ImportStatus | null;
  failureReason?: string[] | null;
  createdDate?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface GetIntentResponse {
  name?: string | null;
  description?: string | null;
  slots?: Slot[] | null;
  sampleUtterances?: string[] | null;
  confirmationPrompt?: Prompt | null;
  rejectionStatement?: Statement | null;
  followUpPrompt?: FollowUpPrompt | null;
  conclusionStatement?: Statement | null;
  dialogCodeHook?: CodeHook | null;
  fulfillmentActivity?: FulfillmentActivity | null;
  parentIntentSignature?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
  checksum?: string | null;
  kendraConfiguration?: KendraConfiguration | null;
  inputContexts?: InputContext[] | null;
  outputContexts?: OutputContext[] | null;
}

// refs: 1 - tags: named, output
export interface GetIntentVersionsResponse {
  intents?: IntentMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetIntentsResponse {
  intents?: IntentMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetSlotTypeResponse {
  name?: string | null;
  description?: string | null;
  enumerationValues?: EnumerationValue[] | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
  checksum?: string | null;
  valueSelectionStrategy?: SlotValueSelectionStrategy | null;
  parentSlotTypeSignature?: string | null;
  slotTypeConfigurations?: SlotTypeConfiguration[] | null;
}

// refs: 1 - tags: named, output
export interface GetSlotTypeVersionsResponse {
  slotTypes?: SlotTypeMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetSlotTypesResponse {
  slotTypes?: SlotTypeMetadata[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetUtterancesViewResponse {
  botName?: string | null;
  utterances?: UtteranceList[] | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface PutBotResponse {
  name?: string | null;
  description?: string | null;
  intents?: Intent[] | null;
  enableModelImprovements?: boolean | null;
  nluIntentConfidenceThreshold?: number | null;
  clarificationPrompt?: Prompt | null;
  abortStatement?: Statement | null;
  status?: Status | null;
  failureReason?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  idleSessionTTLInSeconds?: number | null;
  voiceId?: string | null;
  checksum?: string | null;
  version?: string | null;
  locale?: Locale | null;
  childDirected?: boolean | null;
  createVersion?: boolean | null;
  detectSentiment?: boolean | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface PutBotAliasResponse {
  name?: string | null;
  description?: string | null;
  botVersion?: string | null;
  botName?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  checksum?: string | null;
  conversationLogs?: ConversationLogsResponse | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface PutIntentResponse {
  name?: string | null;
  description?: string | null;
  slots?: Slot[] | null;
  sampleUtterances?: string[] | null;
  confirmationPrompt?: Prompt | null;
  rejectionStatement?: Statement | null;
  followUpPrompt?: FollowUpPrompt | null;
  conclusionStatement?: Statement | null;
  dialogCodeHook?: CodeHook | null;
  fulfillmentActivity?: FulfillmentActivity | null;
  parentIntentSignature?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
  checksum?: string | null;
  createVersion?: boolean | null;
  kendraConfiguration?: KendraConfiguration | null;
  inputContexts?: InputContext[] | null;
  outputContexts?: OutputContext[] | null;
}

// refs: 1 - tags: named, output
export interface PutSlotTypeResponse {
  name?: string | null;
  description?: string | null;
  enumerationValues?: EnumerationValue[] | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
  checksum?: string | null;
  valueSelectionStrategy?: SlotValueSelectionStrategy | null;
  createVersion?: boolean | null;
  parentSlotTypeSignature?: string | null;
  slotTypeConfigurations?: SlotTypeConfiguration[] | null;
}

// refs: 1 - tags: named, output
export interface StartImportResponse {
  name?: string | null;
  resourceType?: ResourceType | null;
  mergeStrategy?: MergeStrategy | null;
  importId?: string | null;
  importStatus?: ImportStatus | null;
  tags?: Tag[] | null;
  createdDate?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface TagResourceResponse {
}

// refs: 1 - tags: named, output
export interface UntagResourceResponse {
}

// refs: 9 - tags: input, named, enum, output
export type Locale =
| "de-DE"
| "en-AU"
| "en-GB"
| "en-US"
| "es-419"
| "es-ES"
| "es-US"
| "fr-FR"
| "fr-CA"
| "it-IT"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, enum, output
export type ResourceType =
| "BOT"
| "INTENT"
| "SLOT_TYPE"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type ExportType =
| "ALEXA_SKILLS_KIT"
| "LEX"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type StatusType =
| "Detected"
| "Missed"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface Intent {
  intentName: string;
  intentVersion: string;
}

// refs: 16 - tags: input, named, interface, output
export interface Prompt {
  messages: Message[];
  maxAttempts: number;
  responseCard?: string | null;
}

// refs: 32 - tags: input, named, interface, output
export interface Message {
  contentType: ContentType;
  content: string;
  groupNumber?: number | null;
}

// refs: 32 - tags: input, named, enum, output
export type ContentType =
| "PlainText"
| "SSML"
| "CustomPayload"
| cmnP.UnexpectedEnumValue;

// refs: 16 - tags: input, named, interface, output
export interface Statement {
  messages: Message[];
  responseCard?: string | null;
}

// refs: 1 - tags: input, named, enum
export type ProcessBehavior =
| "SAVE"
| "BUILD"
| cmnP.UnexpectedEnumValue;

// refs: 8 - tags: input, named, interface, output
export interface Tag {
  key: string;
  value: string;
}

// refs: 1 - tags: input, named, interface
export interface ConversationLogsRequest {
  logSettings: LogSettingsRequest[];
  iamRoleArn: string;
}

// refs: 1 - tags: input, named, interface
export interface LogSettingsRequest {
  logType: LogType;
  destination: Destination;
  kmsKeyArn?: string | null;
  resourceArn: string;
}

// refs: 4 - tags: input, named, enum, output
export type LogType =
| "AUDIO"
| "TEXT"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type Destination =
| "CLOUDWATCH_LOGS"
| "S3"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface Slot {
  name: string;
  description?: string | null;
  slotConstraint: SlotConstraint;
  slotType?: string | null;
  slotTypeVersion?: string | null;
  valueElicitationPrompt?: Prompt | null;
  priority?: number | null;
  sampleUtterances?: string[] | null;
  responseCard?: string | null;
  obfuscationSetting?: ObfuscationSetting | null;
  defaultValueSpec?: SlotDefaultValueSpec | null;
}

// refs: 4 - tags: input, named, enum, output
export type SlotConstraint =
| "Required"
| "Optional"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type ObfuscationSetting =
| "NONE"
| "DEFAULT_OBFUSCATION"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface SlotDefaultValueSpec {
  defaultValueList: SlotDefaultValue[];
}

// refs: 4 - tags: input, named, interface, output
export interface SlotDefaultValue {
  defaultValue: string;
}

// refs: 4 - tags: input, named, interface, output
export interface FollowUpPrompt {
  prompt: Prompt;
  rejectionStatement: Statement;
}

// refs: 8 - tags: input, named, interface, output
export interface CodeHook {
  uri: string;
  messageVersion: string;
}

// refs: 4 - tags: input, named, interface, output
export interface FulfillmentActivity {
  type: FulfillmentActivityType;
  codeHook?: CodeHook | null;
}

// refs: 4 - tags: input, named, enum, output
export type FulfillmentActivityType =
| "ReturnIntent"
| "CodeHook"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface KendraConfiguration {
  kendraIndex: string;
  queryFilterString?: string | null;
  role: string;
}

// refs: 4 - tags: input, named, interface, output
export interface InputContext {
  name: string;
}

// refs: 4 - tags: input, named, interface, output
export interface OutputContext {
  name: string;
  timeToLiveInSeconds: number;
  turnsToLive: number;
}

// refs: 4 - tags: input, named, interface, output
export interface EnumerationValue {
  value: string;
  synonyms?: string[] | null;
}

// refs: 4 - tags: input, named, enum, output
export type SlotValueSelectionStrategy =
| "ORIGINAL_VALUE"
| "TOP_RESOLUTION"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface SlotTypeConfiguration {
  regexConfiguration?: SlotTypeRegexConfiguration | null;
}

// refs: 4 - tags: input, named, interface, output
export interface SlotTypeRegexConfiguration {
  pattern: string;
}

// refs: 3 - tags: input, named, enum, output
export type MergeStrategy =
| "OVERWRITE_LATEST"
| "FAIL_ON_CONFLICT"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: output, named, enum
export type Status =
| "BUILDING"
| "READY"
| "READY_BASIC_TESTING"
| "FAILED"
| "NOT_BUILT"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface ConversationLogsResponse {
  logSettings?: LogSettingsResponse[] | null;
  iamRoleArn?: string | null;
}

// refs: 3 - tags: output, named, interface
export interface LogSettingsResponse {
  logType?: LogType | null;
  destination?: Destination | null;
  kmsKeyArn?: string | null;
  resourceArn?: string | null;
  resourcePrefix?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface BotAliasMetadata {
  name?: string | null;
  description?: string | null;
  botVersion?: string | null;
  botName?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  checksum?: string | null;
  conversationLogs?: ConversationLogsResponse | null;
}

// refs: 2 - tags: output, named, enum
export type ChannelType =
| "Facebook"
| "Slack"
| "Twilio-Sms"
| "Kik"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type ChannelStatus =
| "IN_PROGRESS"
| "CREATED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface BotChannelAssociation {
  name?: string | null;
  description?: string | null;
  botAlias?: string | null;
  botName?: string | null;
  createdDate?: Date | number | null;
  type?: ChannelType | null;
  botConfiguration?: { [key: string]: string | null | undefined } | null;
  status?: ChannelStatus | null;
  failureReason?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface BotMetadata {
  name?: string | null;
  description?: string | null;
  status?: Status | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface BuiltinIntentSlot {
  name?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface BuiltinIntentMetadata {
  signature?: string | null;
  supportedLocales?: Locale[] | null;
}

// refs: 1 - tags: output, named, interface
export interface BuiltinSlotTypeMetadata {
  signature?: string | null;
  supportedLocales?: Locale[] | null;
}

// refs: 1 - tags: output, named, enum
export type ExportStatus =
| "IN_PROGRESS"
| "READY"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, enum
export type ImportStatus =
| "IN_PROGRESS"
| "COMPLETE"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface IntentMetadata {
  name?: string | null;
  description?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface SlotTypeMetadata {
  name?: string | null;
  description?: string | null;
  lastUpdatedDate?: Date | number | null;
  createdDate?: Date | number | null;
  version?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface UtteranceList {
  botVersion?: string | null;
  utterances?: UtteranceData[] | null;
}

// refs: 1 - tags: output, named, interface
export interface UtteranceData {
  utteranceString?: string | null;
  count?: number | null;
  distinctUsers?: number | null;
  firstUtteredDate?: Date | number | null;
  lastUtteredDate?: Date | number | null;
}
