// Autogenerated API structures for: AWS Identity and Access Management

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface AddClientIDToOpenIDConnectProviderRequest {
  OpenIDConnectProviderArn: string;
  ClientID: string;
}

// refs: 1 - tags: named, input
export interface AddRoleToInstanceProfileRequest {
  InstanceProfileName: string;
  RoleName: string;
}

// refs: 1 - tags: named, input
export interface AddUserToGroupRequest {
  GroupName: string;
  UserName: string;
}

// refs: 1 - tags: named, input
export interface AttachGroupPolicyRequest {
  GroupName: string;
  PolicyArn: string;
}

// refs: 1 - tags: named, input
export interface AttachRolePolicyRequest {
  RoleName: string;
  PolicyArn: string;
}

// refs: 1 - tags: named, input
export interface AttachUserPolicyRequest {
  UserName: string;
  PolicyArn: string;
}

// refs: 1 - tags: named, input
export interface ChangePasswordRequest {
  OldPassword: string;
  NewPassword: string;
}

// refs: 1 - tags: named, input
export interface CreateAccessKeyRequest {
  UserName?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateAccountAliasRequest {
  AccountAlias: string;
}

// refs: 1 - tags: named, input
export interface CreateGroupRequest {
  Path?: string | null;
  GroupName: string;
}

// refs: 1 - tags: named, input
export interface CreateInstanceProfileRequest {
  InstanceProfileName: string;
  Path?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateLoginProfileRequest {
  UserName: string;
  Password: string;
  PasswordResetRequired?: boolean | null;
}

// refs: 1 - tags: named, input
export interface CreateOpenIDConnectProviderRequest {
  Url: string;
  ClientIDList?: string[] | null;
  ThumbprintList: string[];
}

// refs: 1 - tags: named, input
export interface CreatePolicyRequest {
  PolicyName: string;
  Path?: string | null;
  PolicyDocument: string;
  Description?: string | null;
}

// refs: 1 - tags: named, input
export interface CreatePolicyVersionRequest {
  PolicyArn: string;
  PolicyDocument: string;
  SetAsDefault?: boolean | null;
}

// refs: 1 - tags: named, input
export interface CreateRoleRequest {
  Path?: string | null;
  RoleName: string;
  AssumeRolePolicyDocument: string;
  Description?: string | null;
  MaxSessionDuration?: number | null;
  PermissionsBoundary?: string | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateSAMLProviderRequest {
  SAMLMetadataDocument: string;
  Name: string;
}

// refs: 1 - tags: named, input
export interface CreateServiceLinkedRoleRequest {
  AWSServiceName: string;
  Description?: string | null;
  CustomSuffix?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateServiceSpecificCredentialRequest {
  UserName: string;
  ServiceName: string;
}

// refs: 1 - tags: named, input
export interface CreateUserRequest {
  Path?: string | null;
  UserName: string;
  PermissionsBoundary?: string | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateVirtualMFADeviceRequest {
  Path?: string | null;
  VirtualMFADeviceName: string;
}

// refs: 1 - tags: named, input
export interface DeactivateMFADeviceRequest {
  UserName: string;
  SerialNumber: string;
}

// refs: 1 - tags: named, input
export interface DeleteAccessKeyRequest {
  UserName?: string | null;
  AccessKeyId: string;
}

// refs: 1 - tags: named, input
export interface DeleteAccountAliasRequest {
  AccountAlias: string;
}

// refs: 1 - tags: named, input
export interface DeleteGroupRequest {
  GroupName: string;
}

// refs: 1 - tags: named, input
export interface DeleteGroupPolicyRequest {
  GroupName: string;
  PolicyName: string;
}

// refs: 1 - tags: named, input
export interface DeleteInstanceProfileRequest {
  InstanceProfileName: string;
}

// refs: 1 - tags: named, input
export interface DeleteLoginProfileRequest {
  UserName: string;
}

// refs: 1 - tags: named, input
export interface DeleteOpenIDConnectProviderRequest {
  OpenIDConnectProviderArn: string;
}

// refs: 1 - tags: named, input
export interface DeletePolicyRequest {
  PolicyArn: string;
}

// refs: 1 - tags: named, input
export interface DeletePolicyVersionRequest {
  PolicyArn: string;
  VersionId: string;
}

// refs: 1 - tags: named, input
export interface DeleteRoleRequest {
  RoleName: string;
}

// refs: 1 - tags: named, input
export interface DeleteRolePermissionsBoundaryRequest {
  RoleName: string;
}

// refs: 1 - tags: named, input
export interface DeleteRolePolicyRequest {
  RoleName: string;
  PolicyName: string;
}

// refs: 1 - tags: named, input
export interface DeleteSAMLProviderRequest {
  SAMLProviderArn: string;
}

// refs: 1 - tags: named, input
export interface DeleteSSHPublicKeyRequest {
  UserName: string;
  SSHPublicKeyId: string;
}

// refs: 1 - tags: named, input
export interface DeleteServerCertificateRequest {
  ServerCertificateName: string;
}

// refs: 1 - tags: named, input
export interface DeleteServiceLinkedRoleRequest {
  RoleName: string;
}

// refs: 1 - tags: named, input
export interface DeleteServiceSpecificCredentialRequest {
  UserName?: string | null;
  ServiceSpecificCredentialId: string;
}

// refs: 1 - tags: named, input
export interface DeleteSigningCertificateRequest {
  UserName?: string | null;
  CertificateId: string;
}

// refs: 1 - tags: named, input
export interface DeleteUserRequest {
  UserName: string;
}

// refs: 1 - tags: named, input
export interface DeleteUserPermissionsBoundaryRequest {
  UserName: string;
}

// refs: 1 - tags: named, input
export interface DeleteUserPolicyRequest {
  UserName: string;
  PolicyName: string;
}

// refs: 1 - tags: named, input
export interface DeleteVirtualMFADeviceRequest {
  SerialNumber: string;
}

// refs: 1 - tags: named, input
export interface DetachGroupPolicyRequest {
  GroupName: string;
  PolicyArn: string;
}

// refs: 1 - tags: named, input
export interface DetachRolePolicyRequest {
  RoleName: string;
  PolicyArn: string;
}

// refs: 1 - tags: named, input
export interface DetachUserPolicyRequest {
  UserName: string;
  PolicyArn: string;
}

// refs: 1 - tags: named, input
export interface EnableMFADeviceRequest {
  UserName: string;
  SerialNumber: string;
  AuthenticationCode1: string;
  AuthenticationCode2: string;
}

// refs: 1 - tags: named, input
export interface GenerateOrganizationsAccessReportRequest {
  EntityPath: string;
  OrganizationsPolicyId?: string | null;
}

// refs: 1 - tags: named, input
export interface GenerateServiceLastAccessedDetailsRequest {
  Arn: string;
  Granularity?: AccessAdvisorUsageGranularityType | null;
}

// refs: 1 - tags: named, input
export interface GetAccessKeyLastUsedRequest {
  AccessKeyId: string;
}

// refs: 1 - tags: named, input
export interface GetAccountAuthorizationDetailsRequest {
  Filter?: EntityType[] | null;
  MaxItems?: number | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, input
export interface GetContextKeysForCustomPolicyRequest {
  PolicyInputList: string[];
}

// refs: 1 - tags: named, input
export interface GetContextKeysForPrincipalPolicyRequest {
  PolicySourceArn: string;
  PolicyInputList?: string[] | null;
}

// refs: 1 - tags: named, input
export interface GetGroupRequest {
  GroupName: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface GetGroupPolicyRequest {
  GroupName: string;
  PolicyName: string;
}

// refs: 1 - tags: named, input
export interface GetInstanceProfileRequest {
  InstanceProfileName: string;
}

// refs: 1 - tags: named, input
export interface GetLoginProfileRequest {
  UserName: string;
}

// refs: 1 - tags: named, input
export interface GetOpenIDConnectProviderRequest {
  OpenIDConnectProviderArn: string;
}

// refs: 1 - tags: named, input
export interface GetOrganizationsAccessReportRequest {
  JobId: string;
  MaxItems?: number | null;
  Marker?: string | null;
  SortKey?: sortKeyType | null;
}

// refs: 1 - tags: named, input
export interface GetPolicyRequest {
  PolicyArn: string;
}

// refs: 1 - tags: named, input
export interface GetPolicyVersionRequest {
  PolicyArn: string;
  VersionId: string;
}

// refs: 1 - tags: named, input
export interface GetRoleRequest {
  RoleName: string;
}

// refs: 1 - tags: named, input
export interface GetRolePolicyRequest {
  RoleName: string;
  PolicyName: string;
}

// refs: 1 - tags: named, input
export interface GetSAMLProviderRequest {
  SAMLProviderArn: string;
}

// refs: 1 - tags: named, input
export interface GetSSHPublicKeyRequest {
  UserName: string;
  SSHPublicKeyId: string;
  Encoding: encodingType;
}

// refs: 1 - tags: named, input
export interface GetServerCertificateRequest {
  ServerCertificateName: string;
}

// refs: 1 - tags: named, input
export interface GetServiceLastAccessedDetailsRequest {
  JobId: string;
  MaxItems?: number | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, input
export interface GetServiceLastAccessedDetailsWithEntitiesRequest {
  JobId: string;
  ServiceNamespace: string;
  MaxItems?: number | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, input
export interface GetServiceLinkedRoleDeletionStatusRequest {
  DeletionTaskId: string;
}

// refs: 1 - tags: named, input
export interface GetUserRequest {
  UserName?: string | null;
}

// refs: 1 - tags: named, input
export interface GetUserPolicyRequest {
  UserName: string;
  PolicyName: string;
}

// refs: 1 - tags: named, input
export interface ListAccessKeysRequest {
  UserName?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListAccountAliasesRequest {
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListAttachedGroupPoliciesRequest {
  GroupName: string;
  PathPrefix?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListAttachedRolePoliciesRequest {
  RoleName: string;
  PathPrefix?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListAttachedUserPoliciesRequest {
  UserName: string;
  PathPrefix?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListEntitiesForPolicyRequest {
  PolicyArn: string;
  EntityFilter?: EntityType | null;
  PathPrefix?: string | null;
  PolicyUsageFilter?: PolicyUsageType | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListGroupPoliciesRequest {
  GroupName: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListGroupsRequest {
  PathPrefix?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListGroupsForUserRequest {
  UserName: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListInstanceProfilesRequest {
  PathPrefix?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListInstanceProfilesForRoleRequest {
  RoleName: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListMFADevicesRequest {
  UserName?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListOpenIDConnectProvidersRequest {
}

// refs: 1 - tags: named, input
export interface ListPoliciesRequest {
  Scope?: policyScopeType | null;
  OnlyAttached?: boolean | null;
  PathPrefix?: string | null;
  PolicyUsageFilter?: PolicyUsageType | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListPoliciesGrantingServiceAccessRequest {
  Marker?: string | null;
  Arn: string;
  ServiceNamespaces: string[];
}

// refs: 1 - tags: named, input
export interface ListPolicyVersionsRequest {
  PolicyArn: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListRolePoliciesRequest {
  RoleName: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListRoleTagsRequest {
  RoleName: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListRolesRequest {
  PathPrefix?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListSAMLProvidersRequest {
}

// refs: 1 - tags: named, input
export interface ListSSHPublicKeysRequest {
  UserName?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListServerCertificatesRequest {
  PathPrefix?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListServiceSpecificCredentialsRequest {
  UserName?: string | null;
  ServiceName?: string | null;
}

// refs: 1 - tags: named, input
export interface ListSigningCertificatesRequest {
  UserName?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListUserPoliciesRequest {
  UserName: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListUserTagsRequest {
  UserName: string;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListUsersRequest {
  PathPrefix?: string | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface ListVirtualMFADevicesRequest {
  AssignmentStatus?: assignmentStatusType | null;
  Marker?: string | null;
  MaxItems?: number | null;
}

// refs: 1 - tags: named, input
export interface PutGroupPolicyRequest {
  GroupName: string;
  PolicyName: string;
  PolicyDocument: string;
}

// refs: 1 - tags: named, input
export interface PutRolePermissionsBoundaryRequest {
  RoleName: string;
  PermissionsBoundary: string;
}

// refs: 1 - tags: named, input
export interface PutRolePolicyRequest {
  RoleName: string;
  PolicyName: string;
  PolicyDocument: string;
}

// refs: 1 - tags: named, input
export interface PutUserPermissionsBoundaryRequest {
  UserName: string;
  PermissionsBoundary: string;
}

// refs: 1 - tags: named, input
export interface PutUserPolicyRequest {
  UserName: string;
  PolicyName: string;
  PolicyDocument: string;
}

// refs: 1 - tags: named, input
export interface RemoveClientIDFromOpenIDConnectProviderRequest {
  OpenIDConnectProviderArn: string;
  ClientID: string;
}

// refs: 1 - tags: named, input
export interface RemoveRoleFromInstanceProfileRequest {
  InstanceProfileName: string;
  RoleName: string;
}

// refs: 1 - tags: named, input
export interface RemoveUserFromGroupRequest {
  GroupName: string;
  UserName: string;
}

// refs: 1 - tags: named, input
export interface ResetServiceSpecificCredentialRequest {
  UserName?: string | null;
  ServiceSpecificCredentialId: string;
}

// refs: 1 - tags: named, input
export interface ResyncMFADeviceRequest {
  UserName: string;
  SerialNumber: string;
  AuthenticationCode1: string;
  AuthenticationCode2: string;
}

// refs: 1 - tags: named, input
export interface SetDefaultPolicyVersionRequest {
  PolicyArn: string;
  VersionId: string;
}

// refs: 1 - tags: named, input
export interface SetSecurityTokenServicePreferencesRequest {
  GlobalEndpointTokenVersion: globalEndpointTokenVersion;
}

// refs: 1 - tags: named, input
export interface SimulateCustomPolicyRequest {
  PolicyInputList: string[];
  PermissionsBoundaryPolicyInputList?: string[] | null;
  ActionNames: string[];
  ResourceArns?: string[] | null;
  ResourcePolicy?: string | null;
  ResourceOwner?: string | null;
  CallerArn?: string | null;
  ContextEntries?: ContextEntry[] | null;
  ResourceHandlingOption?: string | null;
  MaxItems?: number | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, input
export interface SimulatePrincipalPolicyRequest {
  PolicySourceArn: string;
  PolicyInputList?: string[] | null;
  PermissionsBoundaryPolicyInputList?: string[] | null;
  ActionNames: string[];
  ResourceArns?: string[] | null;
  ResourcePolicy?: string | null;
  ResourceOwner?: string | null;
  CallerArn?: string | null;
  ContextEntries?: ContextEntry[] | null;
  ResourceHandlingOption?: string | null;
  MaxItems?: number | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, input
export interface TagRoleRequest {
  RoleName: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface TagUserRequest {
  UserName: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagRoleRequest {
  RoleName: string;
  TagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UntagUserRequest {
  UserName: string;
  TagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateAccessKeyRequest {
  UserName?: string | null;
  AccessKeyId: string;
  Status: statusType;
}

// refs: 1 - tags: named, input
export interface UpdateAccountPasswordPolicyRequest {
  MinimumPasswordLength?: number | null;
  RequireSymbols?: boolean | null;
  RequireNumbers?: boolean | null;
  RequireUppercaseCharacters?: boolean | null;
  RequireLowercaseCharacters?: boolean | null;
  AllowUsersToChangePassword?: boolean | null;
  MaxPasswordAge?: number | null;
  PasswordReusePrevention?: number | null;
  HardExpiry?: boolean | null;
}

// refs: 1 - tags: named, input
export interface UpdateAssumeRolePolicyRequest {
  RoleName: string;
  PolicyDocument: string;
}

// refs: 1 - tags: named, input
export interface UpdateGroupRequest {
  GroupName: string;
  NewPath?: string | null;
  NewGroupName?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateLoginProfileRequest {
  UserName: string;
  Password?: string | null;
  PasswordResetRequired?: boolean | null;
}

// refs: 1 - tags: named, input
export interface UpdateOpenIDConnectProviderThumbprintRequest {
  OpenIDConnectProviderArn: string;
  ThumbprintList: string[];
}

// refs: 1 - tags: named, input
export interface UpdateRoleRequest {
  RoleName: string;
  Description?: string | null;
  MaxSessionDuration?: number | null;
}

// refs: 1 - tags: named, input
export interface UpdateRoleDescriptionRequest {
  RoleName: string;
  Description: string;
}

// refs: 1 - tags: named, input
export interface UpdateSAMLProviderRequest {
  SAMLMetadataDocument: string;
  SAMLProviderArn: string;
}

// refs: 1 - tags: named, input
export interface UpdateSSHPublicKeyRequest {
  UserName: string;
  SSHPublicKeyId: string;
  Status: statusType;
}

// refs: 1 - tags: named, input
export interface UpdateServerCertificateRequest {
  ServerCertificateName: string;
  NewPath?: string | null;
  NewServerCertificateName?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateServiceSpecificCredentialRequest {
  UserName?: string | null;
  ServiceSpecificCredentialId: string;
  Status: statusType;
}

// refs: 1 - tags: named, input
export interface UpdateSigningCertificateRequest {
  UserName?: string | null;
  CertificateId: string;
  Status: statusType;
}

// refs: 1 - tags: named, input
export interface UpdateUserRequest {
  UserName: string;
  NewPath?: string | null;
  NewUserName?: string | null;
}

// refs: 1 - tags: named, input
export interface UploadSSHPublicKeyRequest {
  UserName: string;
  SSHPublicKeyBody: string;
}

// refs: 1 - tags: named, input
export interface UploadServerCertificateRequest {
  Path?: string | null;
  ServerCertificateName: string;
  CertificateBody: string;
  PrivateKey: string;
  CertificateChain?: string | null;
}

// refs: 1 - tags: named, input
export interface UploadSigningCertificateRequest {
  UserName?: string | null;
  CertificateBody: string;
}

// refs: 1 - tags: named, output
export interface CreateAccessKeyResponse {
  AccessKey: AccessKey;
}

// refs: 1 - tags: named, output
export interface CreateGroupResponse {
  Group: Group;
}

// refs: 1 - tags: named, output
export interface CreateInstanceProfileResponse {
  InstanceProfile: InstanceProfile;
}

// refs: 1 - tags: named, output
export interface CreateLoginProfileResponse {
  LoginProfile: LoginProfile;
}

// refs: 1 - tags: named, output
export interface CreateOpenIDConnectProviderResponse {
  OpenIDConnectProviderArn?: string | null;
}

// refs: 1 - tags: named, output
export interface CreatePolicyResponse {
  Policy?: Policy | null;
}

// refs: 1 - tags: named, output
export interface CreatePolicyVersionResponse {
  PolicyVersion?: PolicyVersion | null;
}

// refs: 1 - tags: named, output
export interface CreateRoleResponse {
  Role: Role;
}

// refs: 1 - tags: named, output
export interface CreateSAMLProviderResponse {
  SAMLProviderArn?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateServiceLinkedRoleResponse {
  Role?: Role | null;
}

// refs: 1 - tags: named, output
export interface CreateServiceSpecificCredentialResponse {
  ServiceSpecificCredential?: ServiceSpecificCredential | null;
}

// refs: 1 - tags: named, output
export interface CreateUserResponse {
  User?: User | null;
}

// refs: 1 - tags: named, output
export interface CreateVirtualMFADeviceResponse {
  VirtualMFADevice: VirtualMFADevice;
}

// refs: 1 - tags: named, output
export interface DeleteServiceLinkedRoleResponse {
  DeletionTaskId: string;
}

// refs: 1 - tags: named, output
export interface GenerateCredentialReportResponse {
  State?: ReportStateType | null;
  Description?: string | null;
}

// refs: 1 - tags: named, output
export interface GenerateOrganizationsAccessReportResponse {
  JobId?: string | null;
}

// refs: 1 - tags: named, output
export interface GenerateServiceLastAccessedDetailsResponse {
  JobId?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAccessKeyLastUsedResponse {
  UserName?: string | null;
  AccessKeyLastUsed?: AccessKeyLastUsed | null;
}

// refs: 1 - tags: named, output
export interface GetAccountAuthorizationDetailsResponse {
  UserDetailList: UserDetail[];
  GroupDetailList: GroupDetail[];
  RoleDetailList: RoleDetail[];
  Policies: ManagedPolicyDetail[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAccountPasswordPolicyResponse {
  PasswordPolicy: PasswordPolicy;
}

// refs: 1 - tags: named, output
export interface GetAccountSummaryResponse {
  SummaryMap: { [key in summaryKeyType]: number | null | undefined };
}

// refs: 1 - tags: named, output
export interface GetContextKeysForPolicyResponse {
  ContextKeyNames: string[];
}

// refs: 1 - tags: named, output
export interface GetCredentialReportResponse {
  Content?: Uint8Array | string | null;
  ReportFormat?: ReportFormatType | null;
  GeneratedTime?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface GetGroupResponse {
  Group: Group;
  Users: User[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface GetGroupPolicyResponse {
  GroupName: string;
  PolicyName: string;
  PolicyDocument: string;
}

// refs: 1 - tags: named, output
export interface GetInstanceProfileResponse {
  InstanceProfile: InstanceProfile;
}

// refs: 1 - tags: named, output
export interface GetLoginProfileResponse {
  LoginProfile: LoginProfile;
}

// refs: 1 - tags: named, output
export interface GetOpenIDConnectProviderResponse {
  Url?: string | null;
  ClientIDList: string[];
  ThumbprintList: string[];
  CreateDate?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface GetOrganizationsAccessReportResponse {
  JobStatus: jobStatusType;
  JobCreationDate: Date | number;
  JobCompletionDate?: Date | number | null;
  NumberOfServicesAccessible?: number | null;
  NumberOfServicesNotAccessed?: number | null;
  AccessDetails: AccessDetail[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
  ErrorDetails?: ErrorDetails | null;
}

// refs: 1 - tags: named, output
export interface GetPolicyResponse {
  Policy?: Policy | null;
}

// refs: 1 - tags: named, output
export interface GetPolicyVersionResponse {
  PolicyVersion?: PolicyVersion | null;
}

// refs: 1 - tags: named, output
export interface GetRoleResponse {
  Role: Role;
}

// refs: 1 - tags: named, output
export interface GetRolePolicyResponse {
  RoleName: string;
  PolicyName: string;
  PolicyDocument: string;
}

// refs: 1 - tags: named, output
export interface GetSAMLProviderResponse {
  SAMLMetadataDocument?: string | null;
  CreateDate?: Date | number | null;
  ValidUntil?: Date | number | null;
}

// refs: 1 - tags: named, output
export interface GetSSHPublicKeyResponse {
  SSHPublicKey?: SSHPublicKey | null;
}

// refs: 1 - tags: named, output
export interface GetServerCertificateResponse {
  ServerCertificate: ServerCertificate;
}

// refs: 1 - tags: named, output
export interface GetServiceLastAccessedDetailsResponse {
  JobStatus: jobStatusType;
  JobType?: AccessAdvisorUsageGranularityType | null;
  JobCreationDate: Date | number;
  ServicesLastAccessed: ServiceLastAccessed[];
  JobCompletionDate: Date | number;
  IsTruncated?: boolean | null;
  Marker?: string | null;
  Error?: ErrorDetails | null;
}

// refs: 1 - tags: named, output
export interface GetServiceLastAccessedDetailsWithEntitiesResponse {
  JobStatus: jobStatusType;
  JobCreationDate: Date | number;
  JobCompletionDate: Date | number;
  EntityDetailsList: EntityDetails[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
  Error?: ErrorDetails | null;
}

// refs: 1 - tags: named, output
export interface GetServiceLinkedRoleDeletionStatusResponse {
  Status: DeletionTaskStatusType;
  Reason?: DeletionTaskFailureReasonType | null;
}

// refs: 1 - tags: named, output
export interface GetUserResponse {
  User: User;
}

// refs: 1 - tags: named, output
export interface GetUserPolicyResponse {
  UserName: string;
  PolicyName: string;
  PolicyDocument: string;
}

// refs: 1 - tags: named, output
export interface ListAccessKeysResponse {
  AccessKeyMetadata: AccessKeyMetadata[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListAccountAliasesResponse {
  AccountAliases: string[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListAttachedGroupPoliciesResponse {
  AttachedPolicies: AttachedPolicy[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListAttachedRolePoliciesResponse {
  AttachedPolicies: AttachedPolicy[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListAttachedUserPoliciesResponse {
  AttachedPolicies: AttachedPolicy[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListEntitiesForPolicyResponse {
  PolicyGroups: PolicyGroup[];
  PolicyUsers: PolicyUser[];
  PolicyRoles: PolicyRole[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListGroupPoliciesResponse {
  PolicyNames: string[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListGroupsResponse {
  Groups: Group[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListGroupsForUserResponse {
  Groups: Group[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListInstanceProfilesResponse {
  InstanceProfiles: InstanceProfile[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListInstanceProfilesForRoleResponse {
  InstanceProfiles: InstanceProfile[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListMFADevicesResponse {
  MFADevices: MFADevice[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListOpenIDConnectProvidersResponse {
  OpenIDConnectProviderList: OpenIDConnectProviderListEntry[];
}

// refs: 1 - tags: named, output
export interface ListPoliciesResponse {
  Policies: Policy[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListPoliciesGrantingServiceAccessResponse {
  PoliciesGrantingServiceAccess: ListPoliciesGrantingServiceAccessEntry[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListPolicyVersionsResponse {
  Versions: PolicyVersion[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListRolePoliciesResponse {
  PolicyNames: string[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListRoleTagsResponse {
  Tags: Tag[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListRolesResponse {
  Roles: Role[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListSAMLProvidersResponse {
  SAMLProviderList: SAMLProviderListEntry[];
}

// refs: 1 - tags: named, output
export interface ListSSHPublicKeysResponse {
  SSHPublicKeys: SSHPublicKeyMetadata[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListServerCertificatesResponse {
  ServerCertificateMetadataList: ServerCertificateMetadata[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListServiceSpecificCredentialsResponse {
  ServiceSpecificCredentials: ServiceSpecificCredentialMetadata[];
}

// refs: 1 - tags: named, output
export interface ListSigningCertificatesResponse {
  Certificates: SigningCertificate[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListUserPoliciesResponse {
  PolicyNames: string[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListUserTagsResponse {
  Tags: Tag[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListUsersResponse {
  Users: User[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ListVirtualMFADevicesResponse {
  VirtualMFADevices: VirtualMFADevice[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface ResetServiceSpecificCredentialResponse {
  ServiceSpecificCredential?: ServiceSpecificCredential | null;
}

// refs: 1 - tags: named, output
export interface SimulatePolicyResponse {
  EvaluationResults: EvaluationResult[];
  IsTruncated?: boolean | null;
  Marker?: string | null;
}

// refs: 1 - tags: named, output
export interface UpdateRoleResponse {
}

// refs: 1 - tags: named, output
export interface UpdateRoleDescriptionResponse {
  Role?: Role | null;
}

// refs: 1 - tags: named, output
export interface UpdateSAMLProviderResponse {
  SAMLProviderArn?: string | null;
}

// refs: 1 - tags: named, output
export interface UploadSSHPublicKeyResponse {
  SSHPublicKey?: SSHPublicKey | null;
}

// refs: 1 - tags: named, output
export interface UploadServerCertificateResponse {
  ServerCertificateMetadata?: ServerCertificateMetadata | null;
}

// refs: 1 - tags: named, output
export interface UploadSigningCertificateResponse {
  Certificate: SigningCertificate;
}

// refs: 24 - tags: input, named, interface, output
export interface Tag {
  Key: string;
  Value: string;
}

// refs: 2 - tags: input, named, enum, output
export type AccessAdvisorUsageGranularityType =
| "SERVICE_LEVEL"
| "ACTION_LEVEL"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum
export type EntityType =
| "User"
| "Role"
| "Group"
| "LocalManagedPolicy"
| "AWSManagedPolicy"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type sortKeyType =
| "SERVICE_NAMESPACE_ASCENDING"
| "SERVICE_NAMESPACE_DESCENDING"
| "LAST_AUTHENTICATED_TIME_ASCENDING"
| "LAST_AUTHENTICATED_TIME_DESCENDING"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type encodingType =
| "SSH"
| "PEM"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum
export type PolicyUsageType =
| "PermissionsPolicy"
| "PermissionsBoundary"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type policyScopeType =
| "All"
| "AWS"
| "Local"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type assignmentStatusType =
| "Assigned"
| "Unassigned"
| "Any"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type globalEndpointTokenVersion =
| "v1Token"
| "v2Token"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface
export interface ContextEntry {
  ContextKeyName?: string | null;
  ContextKeyValues?: string[] | null;
  ContextKeyType?: ContextKeyTypeEnum | null;
}

// refs: 2 - tags: input, named, enum
export type ContextKeyTypeEnum =
| "string"
| "stringList"
| "numeric"
| "numericList"
| "boolean"
| "booleanList"
| "ip"
| "ipList"
| "binary"
| "binaryList"
| "date"
| "dateList"
| cmnP.UnexpectedEnumValue;

// refs: 14 - tags: input, named, enum, output
export type statusType =
| "Active"
| "Inactive"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface AccessKey {
  UserName: string;
  AccessKeyId: string;
  Status: statusType;
  SecretAccessKey: string;
  CreateDate?: Date | number | null;
}

// refs: 4 - tags: output, named, interface
export interface Group {
  Path: string;
  GroupName: string;
  GroupId: string;
  Arn: string;
  CreateDate: Date | number;
}

// refs: 5 - tags: output, named, interface
export interface InstanceProfile {
  Path: string;
  InstanceProfileName: string;
  InstanceProfileId: string;
  Arn: string;
  CreateDate: Date | number;
  Roles: Role[];
}

// refs: 10 - tags: output, named, interface
export interface Role {
  Path: string;
  RoleName: string;
  RoleId: string;
  Arn: string;
  CreateDate: Date | number;
  AssumeRolePolicyDocument?: string | null;
  Description?: string | null;
  MaxSessionDuration?: number | null;
  PermissionsBoundary?: AttachedPermissionsBoundary | null;
  Tags: Tag[];
  RoleLastUsed?: RoleLastUsed | null;
}

// refs: 18 - tags: output, named, interface
export interface AttachedPermissionsBoundary {
  PermissionsBoundaryType?: PermissionsBoundaryAttachmentType | null;
  PermissionsBoundaryArn?: string | null;
}

// refs: 18 - tags: output, named, enum
export type PermissionsBoundaryAttachmentType =
| "PermissionsBoundaryPolicy"
| cmnP.UnexpectedEnumValue;

// refs: 11 - tags: output, named, interface
export interface RoleLastUsed {
  LastUsedDate?: Date | number | null;
  Region?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface LoginProfile {
  UserName: string;
  CreateDate: Date | number;
  PasswordResetRequired?: boolean | null;
}

// refs: 3 - tags: output, named, interface
export interface Policy {
  PolicyName?: string | null;
  PolicyId?: string | null;
  Arn?: string | null;
  Path?: string | null;
  DefaultVersionId?: string | null;
  AttachmentCount?: number | null;
  PermissionsBoundaryUsageCount?: number | null;
  IsAttachable?: boolean | null;
  Description?: string | null;
  CreateDate?: Date | number | null;
  UpdateDate?: Date | number | null;
}

// refs: 4 - tags: output, named, interface
export interface PolicyVersion {
  Document?: string | null;
  VersionId?: string | null;
  IsDefaultVersion?: boolean | null;
  CreateDate?: Date | number | null;
}

// refs: 2 - tags: output, named, interface
export interface ServiceSpecificCredential {
  CreateDate: Date | number;
  ServiceName: string;
  ServiceUserName: string;
  ServicePassword: string;
  ServiceSpecificCredentialId: string;
  UserName: string;
  Status: statusType;
}

// refs: 6 - tags: output, named, interface
export interface User {
  Path: string;
  UserName: string;
  UserId: string;
  Arn: string;
  CreateDate: Date | number;
  PasswordLastUsed?: Date | number | null;
  PermissionsBoundary?: AttachedPermissionsBoundary | null;
  Tags: Tag[];
}

// refs: 2 - tags: output, named, interface
export interface VirtualMFADevice {
  SerialNumber: string;
  Base32StringSeed?: Uint8Array | string | null;
  QRCodePNG?: Uint8Array | string | null;
  User?: User | null;
  EnableDate?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type ReportStateType =
| "STARTED"
| "INPROGRESS"
| "COMPLETE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface AccessKeyLastUsed {
  LastUsedDate: Date | number;
  ServiceName: string;
  Region: string;
}

// refs: 1 - tags: output, named, interface
export interface UserDetail {
  Path?: string | null;
  UserName?: string | null;
  UserId?: string | null;
  Arn?: string | null;
  CreateDate?: Date | number | null;
  UserPolicyList: PolicyDetail[];
  GroupList: string[];
  AttachedManagedPolicies: AttachedPolicy[];
  PermissionsBoundary?: AttachedPermissionsBoundary | null;
  Tags: Tag[];
}

// refs: 3 - tags: output, named, interface
export interface PolicyDetail {
  PolicyName?: string | null;
  PolicyDocument?: string | null;
}

// refs: 6 - tags: output, named, interface
export interface AttachedPolicy {
  PolicyName?: string | null;
  PolicyArn?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface GroupDetail {
  Path?: string | null;
  GroupName?: string | null;
  GroupId?: string | null;
  Arn?: string | null;
  CreateDate?: Date | number | null;
  GroupPolicyList: PolicyDetail[];
  AttachedManagedPolicies: AttachedPolicy[];
}

// refs: 1 - tags: output, named, interface
export interface RoleDetail {
  Path?: string | null;
  RoleName?: string | null;
  RoleId?: string | null;
  Arn?: string | null;
  CreateDate?: Date | number | null;
  AssumeRolePolicyDocument?: string | null;
  InstanceProfileList: InstanceProfile[];
  RolePolicyList: PolicyDetail[];
  AttachedManagedPolicies: AttachedPolicy[];
  PermissionsBoundary?: AttachedPermissionsBoundary | null;
  Tags: Tag[];
  RoleLastUsed?: RoleLastUsed | null;
}

// refs: 1 - tags: output, named, interface
export interface ManagedPolicyDetail {
  PolicyName?: string | null;
  PolicyId?: string | null;
  Arn?: string | null;
  Path?: string | null;
  DefaultVersionId?: string | null;
  AttachmentCount?: number | null;
  PermissionsBoundaryUsageCount?: number | null;
  IsAttachable?: boolean | null;
  Description?: string | null;
  CreateDate?: Date | number | null;
  UpdateDate?: Date | number | null;
  PolicyVersionList: PolicyVersion[];
}

// refs: 1 - tags: output, named, interface
export interface PasswordPolicy {
  MinimumPasswordLength?: number | null;
  RequireSymbols?: boolean | null;
  RequireNumbers?: boolean | null;
  RequireUppercaseCharacters?: boolean | null;
  RequireLowercaseCharacters?: boolean | null;
  AllowUsersToChangePassword?: boolean | null;
  ExpirePasswords?: boolean | null;
  MaxPasswordAge?: number | null;
  PasswordReusePrevention?: number | null;
  HardExpiry?: boolean | null;
}

// refs: 1 - tags: output, named, enum
export type summaryKeyType =
| "Users"
| "UsersQuota"
| "Groups"
| "GroupsQuota"
| "ServerCertificates"
| "ServerCertificatesQuota"
| "UserPolicySizeQuota"
| "GroupPolicySizeQuota"
| "GroupsPerUserQuota"
| "SigningCertificatesPerUserQuota"
| "AccessKeysPerUserQuota"
| "MFADevices"
| "MFADevicesInUse"
| "AccountMFAEnabled"
| "AccountAccessKeysPresent"
| "AccountSigningCertificatesPresent"
| "AttachedPoliciesPerGroupQuota"
| "AttachedPoliciesPerRoleQuota"
| "AttachedPoliciesPerUserQuota"
| "Policies"
| "PoliciesQuota"
| "PolicySizeQuota"
| "PolicyVersionsInUse"
| "PolicyVersionsInUseQuota"
| "VersionsPerPolicyQuota"
| "GlobalEndpointTokenVersion"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type ReportFormatType =
| "text/csv"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, enum
export type jobStatusType =
| "IN_PROGRESS"
| "COMPLETED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface AccessDetail {
  ServiceName: string;
  ServiceNamespace: string;
  Region?: string | null;
  EntityPath?: string | null;
  LastAuthenticatedTime?: Date | number | null;
  TotalAuthenticatedEntities?: number | null;
}

// refs: 3 - tags: output, named, interface
export interface ErrorDetails {
  Message: string;
  Code: string;
}

// refs: 2 - tags: output, named, interface
export interface SSHPublicKey {
  UserName: string;
  SSHPublicKeyId: string;
  Fingerprint: string;
  SSHPublicKeyBody: string;
  Status: statusType;
  UploadDate?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface ServerCertificate {
  ServerCertificateMetadata: ServerCertificateMetadata;
  CertificateBody: string;
  CertificateChain?: string | null;
}

// refs: 3 - tags: output, named, interface
export interface ServerCertificateMetadata {
  Path: string;
  ServerCertificateName: string;
  ServerCertificateId: string;
  Arn: string;
  UploadDate?: Date | number | null;
  Expiration?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface ServiceLastAccessed {
  ServiceName: string;
  LastAuthenticated?: Date | number | null;
  ServiceNamespace: string;
  LastAuthenticatedEntity?: string | null;
  LastAuthenticatedRegion?: string | null;
  TotalAuthenticatedEntities?: number | null;
  TrackedActionsLastAccessed: TrackedActionLastAccessed[];
}

// refs: 1 - tags: output, named, interface
export interface TrackedActionLastAccessed {
  ActionName?: string | null;
  LastAccessedEntity?: string | null;
  LastAccessedTime?: Date | number | null;
  LastAccessedRegion?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface EntityDetails {
  EntityInfo: EntityInfo;
  LastAuthenticated?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface EntityInfo {
  Arn: string;
  Name: string;
  Type: policyOwnerEntityType;
  Id: string;
  Path?: string | null;
}

// refs: 2 - tags: output, named, enum
export type policyOwnerEntityType =
| "USER"
| "ROLE"
| "GROUP"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, enum
export type DeletionTaskStatusType =
| "SUCCEEDED"
| "IN_PROGRESS"
| "FAILED"
| "NOT_STARTED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface DeletionTaskFailureReasonType {
  Reason?: string | null;
  RoleUsageList: RoleUsageType[];
}

// refs: 1 - tags: output, named, interface
export interface RoleUsageType {
  Region?: string | null;
  Resources: string[];
}

// refs: 1 - tags: output, named, interface
export interface AccessKeyMetadata {
  UserName?: string | null;
  AccessKeyId?: string | null;
  Status?: statusType | null;
  CreateDate?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface PolicyGroup {
  GroupName?: string | null;
  GroupId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PolicyUser {
  UserName?: string | null;
  UserId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PolicyRole {
  RoleName?: string | null;
  RoleId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface MFADevice {
  UserName: string;
  SerialNumber: string;
  EnableDate: Date | number;
}

// refs: 1 - tags: output, named, interface
export interface OpenIDConnectProviderListEntry {
  Arn?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ListPoliciesGrantingServiceAccessEntry {
  ServiceNamespace?: string | null;
  Policies: PolicyGrantingServiceAccess[];
}

// refs: 1 - tags: output, named, interface
export interface PolicyGrantingServiceAccess {
  PolicyName: string;
  PolicyType: policyType;
  PolicyArn?: string | null;
  EntityType?: policyOwnerEntityType | null;
  EntityName?: string | null;
}

// refs: 1 - tags: output, named, enum
export type policyType =
| "INLINE"
| "MANAGED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface SAMLProviderListEntry {
  Arn?: string | null;
  ValidUntil?: Date | number | null;
  CreateDate?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface SSHPublicKeyMetadata {
  UserName: string;
  SSHPublicKeyId: string;
  Status: statusType;
  UploadDate: Date | number;
}

// refs: 1 - tags: output, named, interface
export interface ServiceSpecificCredentialMetadata {
  UserName: string;
  Status: statusType;
  ServiceUserName: string;
  CreateDate: Date | number;
  ServiceSpecificCredentialId: string;
  ServiceName: string;
}

// refs: 2 - tags: output, named, interface
export interface SigningCertificate {
  UserName: string;
  CertificateId: string;
  CertificateBody: string;
  Status: statusType;
  UploadDate?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface EvaluationResult {
  EvalActionName: string;
  EvalResourceName?: string | null;
  EvalDecision: PolicyEvaluationDecisionType;
  MatchedStatements: Statement[];
  MissingContextValues: string[];
  OrganizationsDecisionDetail?: OrganizationsDecisionDetail | null;
  PermissionsBoundaryDecisionDetail?: PermissionsBoundaryDecisionDetail | null;
  EvalDecisionDetails: { [key: string]: PolicyEvaluationDecisionType | null | undefined };
  ResourceSpecificResults: ResourceSpecificResult[];
}

// refs: 4 - tags: output, named, enum
export type PolicyEvaluationDecisionType =
| "allowed"
| "explicitDeny"
| "implicitDeny"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface Statement {
  SourcePolicyId?: string | null;
  SourcePolicyType?: PolicySourceType | null;
  StartPosition?: Position | null;
  EndPosition?: Position | null;
}

// refs: 2 - tags: output, named, enum
export type PolicySourceType =
| "user"
| "group"
| "role"
| "aws-managed"
| "user-managed"
| "resource"
| "none"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface Position {
  Line?: number | null;
  Column?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface OrganizationsDecisionDetail {
  AllowedByOrganizations?: boolean | null;
}

// refs: 2 - tags: output, named, interface
export interface PermissionsBoundaryDecisionDetail {
  AllowedByPermissionsBoundary?: boolean | null;
}

// refs: 1 - tags: output, named, interface
export interface ResourceSpecificResult {
  EvalResourceName: string;
  EvalResourceDecision: PolicyEvaluationDecisionType;
  MatchedStatements: Statement[];
  MissingContextValues: string[];
  EvalDecisionDetails: { [key: string]: PolicyEvaluationDecisionType | null | undefined };
  PermissionsBoundaryDecisionDetail?: PermissionsBoundaryDecisionDetail | null;
}
