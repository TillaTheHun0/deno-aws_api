// Autogenerated API structures for: AWS IoT Analytics

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface BatchPutMessageRequest {
  channelName: string;
  messages: Message[];
}

// refs: 1 - tags: named, input
export interface CancelPipelineReprocessingRequest {
  pipelineName: string;
  reprocessingId: string;
}

// refs: 1 - tags: named, input
export interface CreateChannelRequest {
  channelName: string;
  channelStorage?: ChannelStorage | null;
  retentionPeriod?: RetentionPeriod | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateDatasetRequest {
  datasetName: string;
  actions: DatasetAction[];
  triggers?: DatasetTrigger[] | null;
  contentDeliveryRules?: DatasetContentDeliveryRule[] | null;
  retentionPeriod?: RetentionPeriod | null;
  versioningConfiguration?: VersioningConfiguration | null;
  tags?: Tag[] | null;
  lateDataRules?: LateDataRule[] | null;
}

// refs: 1 - tags: named, input
export interface CreateDatasetContentRequest {
  datasetName: string;
  versionId?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateDatastoreRequest {
  datastoreName: string;
  datastoreStorage?: DatastoreStorage | null;
  retentionPeriod?: RetentionPeriod | null;
  tags?: Tag[] | null;
  fileFormatConfiguration?: FileFormatConfiguration | null;
}

// refs: 1 - tags: named, input
export interface CreatePipelineRequest {
  pipelineName: string;
  pipelineActivities: PipelineActivity[];
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface DeleteChannelRequest {
  channelName: string;
}

// refs: 1 - tags: named, input
export interface DeleteDatasetRequest {
  datasetName: string;
}

// refs: 1 - tags: named, input
export interface DeleteDatasetContentRequest {
  datasetName: string;
  versionId?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteDatastoreRequest {
  datastoreName: string;
}

// refs: 1 - tags: named, input
export interface DeletePipelineRequest {
  pipelineName: string;
}

// refs: 1 - tags: named, input
export interface DescribeChannelRequest {
  channelName: string;
  includeStatistics?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DescribeDatasetRequest {
  datasetName: string;
}

// refs: 1 - tags: named, input
export interface DescribeDatastoreRequest {
  datastoreName: string;
  includeStatistics?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DescribePipelineRequest {
  pipelineName: string;
}

// refs: 1 - tags: named, input
export interface GetDatasetContentRequest {
  datasetName: string;
  versionId?: string | null;
}

// refs: 1 - tags: named, input
export interface ListChannelsRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListDatasetContentsRequest {
  datasetName: string;
  nextToken?: string | null;
  maxResults?: number | null;
  scheduledOnOrAfter?: Date | number | null;
  scheduledBefore?: Date | number | null;
}

// refs: 1 - tags: named, input
export interface ListDatasetsRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListDatastoresRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListPipelinesRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface PutLoggingOptionsRequest {
  loggingOptions: LoggingOptions;
}

// refs: 1 - tags: named, input
export interface RunPipelineActivityRequest {
  pipelineActivity: PipelineActivity;
  payloads: (Uint8Array | string)[];
}

// refs: 1 - tags: named, input
export interface SampleChannelDataRequest {
  channelName: string;
  maxMessages?: number | null;
  startTime?: Date | number | null;
  endTime?: Date | number | null;
}

// refs: 1 - tags: named, input
export interface StartPipelineReprocessingRequest {
  pipelineName: string;
  startTime?: Date | number | null;
  endTime?: Date | number | null;
  channelMessages?: ChannelMessages | null;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceArn: string;
  tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateChannelRequest {
  channelName: string;
  channelStorage?: ChannelStorage | null;
  retentionPeriod?: RetentionPeriod | null;
}

// refs: 1 - tags: named, input
export interface UpdateDatasetRequest {
  datasetName: string;
  actions: DatasetAction[];
  triggers?: DatasetTrigger[] | null;
  contentDeliveryRules?: DatasetContentDeliveryRule[] | null;
  retentionPeriod?: RetentionPeriod | null;
  versioningConfiguration?: VersioningConfiguration | null;
  lateDataRules?: LateDataRule[] | null;
}

// refs: 1 - tags: named, input
export interface UpdateDatastoreRequest {
  datastoreName: string;
  retentionPeriod?: RetentionPeriod | null;
  datastoreStorage?: DatastoreStorage | null;
  fileFormatConfiguration?: FileFormatConfiguration | null;
}

// refs: 1 - tags: named, input
export interface UpdatePipelineRequest {
  pipelineName: string;
  pipelineActivities: PipelineActivity[];
}

// refs: 1 - tags: named, output
export interface BatchPutMessageResponse {
  batchPutMessageErrorEntries?: BatchPutMessageErrorEntry[] | null;
}

// refs: 1 - tags: named, output
export interface CreateChannelResponse {
  channelName?: string | null;
  channelArn?: string | null;
  retentionPeriod?: RetentionPeriod | null;
}

// refs: 1 - tags: named, output
export interface CreateDatasetResponse {
  datasetName?: string | null;
  datasetArn?: string | null;
  retentionPeriod?: RetentionPeriod | null;
}

// refs: 1 - tags: named, output
export interface CreateDatasetContentResponse {
  versionId?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateDatastoreResponse {
  datastoreName?: string | null;
  datastoreArn?: string | null;
  retentionPeriod?: RetentionPeriod | null;
}

// refs: 1 - tags: named, output
export interface CreatePipelineResponse {
  pipelineName?: string | null;
  pipelineArn?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeChannelResponse {
  channel?: Channel | null;
  statistics?: ChannelStatistics | null;
}

// refs: 1 - tags: named, output
export interface DescribeDatasetResponse {
  dataset?: Dataset | null;
}

// refs: 1 - tags: named, output
export interface DescribeDatastoreResponse {
  datastore?: Datastore | null;
  statistics?: DatastoreStatistics | null;
}

// refs: 1 - tags: named, output
export interface DescribeLoggingOptionsResponse {
  loggingOptions?: LoggingOptions | null;
}

// refs: 1 - tags: named, output
export interface DescribePipelineResponse {
  pipeline?: Pipeline | null;
}

// refs: 1 - tags: named, output
export interface GetDatasetContentResponse {
  entries?: DatasetEntry[] | null;
  timestamp?: Date | number | null;
  status?: DatasetContentStatus | null;
}

// refs: 1 - tags: named, output
export interface ListChannelsResponse {
  channelSummaries?: ChannelSummary[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListDatasetContentsResponse {
  datasetContentSummaries?: DatasetContentSummary[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListDatasetsResponse {
  datasetSummaries?: DatasetSummary[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListDatastoresResponse {
  datastoreSummaries?: DatastoreSummary[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListPipelinesResponse {
  pipelineSummaries?: PipelineSummary[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface RunPipelineActivityResponse {
  payloads?: (Uint8Array | string)[] | null;
  logResult?: string | null;
}

// refs: 1 - tags: named, output
export interface SampleChannelDataResponse {
  payloads?: (Uint8Array | string)[] | null;
}

// refs: 1 - tags: named, output
export interface StartPipelineReprocessingResponse {
  reprocessingId?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface Message {
  messageId: string;
  payload: Uint8Array | string;
}

// refs: 3 - tags: input, named, interface, output
export interface ChannelStorage {
  serviceManagedS3?: ServiceManagedChannelS3Storage | null;
  customerManagedS3?: CustomerManagedChannelS3Storage | null;
}

// refs: 3 - tags: input, named, interface, output
export interface ServiceManagedChannelS3Storage {
}

// refs: 3 - tags: input, named, interface, output
export interface CustomerManagedChannelS3Storage {
  bucket: string;
  keyPrefix?: string | null;
  roleArn: string;
}

// refs: 12 - tags: input, named, interface, output
export interface RetentionPeriod {
  unlimited?: boolean | null;
  numberOfDays?: number | null;
}

// refs: 6 - tags: input, named, interface, output
export interface Tag {
  key: string;
  value: string;
}

// refs: 3 - tags: input, named, interface, output
export interface DatasetAction {
  actionName?: string | null;
  queryAction?: SqlQueryDatasetAction | null;
  containerAction?: ContainerDatasetAction | null;
}

// refs: 3 - tags: input, named, interface, output
export interface SqlQueryDatasetAction {
  sqlQuery: string;
  filters?: QueryFilter[] | null;
}

// refs: 3 - tags: input, named, interface, output
export interface QueryFilter {
  deltaTime?: DeltaTime | null;
}

// refs: 3 - tags: input, named, interface, output
export interface DeltaTime {
  offsetSeconds: number;
  timeExpression: string;
}

// refs: 3 - tags: input, named, interface, output
export interface ContainerDatasetAction {
  image: string;
  executionRoleArn: string;
  resourceConfiguration: ResourceConfiguration;
  variables?: Variable[] | null;
}

// refs: 3 - tags: input, named, interface, output
export interface ResourceConfiguration {
  computeType: ComputeType;
  volumeSizeInGB: number;
}

// refs: 3 - tags: input, named, enum, output
export type ComputeType =
| "ACU_1"
| "ACU_2"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface Variable {
  name: string;
  stringValue?: string | null;
  doubleValue?: number | null;
  datasetContentVersionValue?: DatasetContentVersionValue | null;
  outputFileUriValue?: OutputFileUriValue | null;
}

// refs: 3 - tags: input, named, interface, output
export interface DatasetContentVersionValue {
  datasetName: string;
}

// refs: 3 - tags: input, named, interface, output
export interface OutputFileUriValue {
  fileName: string;
}

// refs: 4 - tags: input, named, interface, output
export interface DatasetTrigger {
  schedule?: Schedule | null;
  dataset?: TriggeringDataset | null;
}

// refs: 4 - tags: input, named, interface, output
export interface Schedule {
  expression?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface TriggeringDataset {
  name: string;
}

// refs: 3 - tags: input, named, interface, output
export interface DatasetContentDeliveryRule {
  entryName?: string | null;
  destination: DatasetContentDeliveryDestination;
}

// refs: 3 - tags: input, named, interface, output
export interface DatasetContentDeliveryDestination {
  iotEventsDestinationConfiguration?: IotEventsDestinationConfiguration | null;
  s3DestinationConfiguration?: S3DestinationConfiguration | null;
}

// refs: 3 - tags: input, named, interface, output
export interface IotEventsDestinationConfiguration {
  inputName: string;
  roleArn: string;
}

// refs: 3 - tags: input, named, interface, output
export interface S3DestinationConfiguration {
  bucket: string;
  key: string;
  glueConfiguration?: GlueConfiguration | null;
  roleArn: string;
}

// refs: 3 - tags: input, named, interface, output
export interface GlueConfiguration {
  tableName: string;
  databaseName: string;
}

// refs: 3 - tags: input, named, interface, output
export interface VersioningConfiguration {
  unlimited?: boolean | null;
  maxVersions?: number | null;
}

// refs: 3 - tags: input, named, interface, output
export interface LateDataRule {
  ruleName?: string | null;
  ruleConfiguration: LateDataRuleConfiguration;
}

// refs: 3 - tags: input, named, interface, output
export interface LateDataRuleConfiguration {
  deltaTimeSessionWindowConfiguration?: DeltaTimeSessionWindowConfiguration | null;
}

// refs: 3 - tags: input, named, interface, output
export interface DeltaTimeSessionWindowConfiguration {
  timeoutInMinutes: number;
}

// refs: 3 - tags: input, named, interface, output
export interface DatastoreStorage {
  serviceManagedS3?: ServiceManagedDatastoreS3Storage | null;
  customerManagedS3?: CustomerManagedDatastoreS3Storage | null;
}

// refs: 3 - tags: input, named, interface, output
export interface ServiceManagedDatastoreS3Storage {
}

// refs: 3 - tags: input, named, interface, output
export interface CustomerManagedDatastoreS3Storage {
  bucket: string;
  keyPrefix?: string | null;
  roleArn: string;
}

// refs: 3 - tags: input, named, interface, output
export interface FileFormatConfiguration {
  jsonConfiguration?: JsonConfiguration | null;
  parquetConfiguration?: ParquetConfiguration | null;
}

// refs: 3 - tags: input, named, interface, output
export interface JsonConfiguration {
}

// refs: 3 - tags: input, named, interface, output
export interface ParquetConfiguration {
  schemaDefinition?: SchemaDefinition | null;
}

// refs: 3 - tags: input, named, interface, output
export interface SchemaDefinition {
  columns?: Column[] | null;
}

// refs: 3 - tags: input, named, interface, output
export interface Column {
  name: string;
  type: string;
}

// refs: 4 - tags: input, named, interface, output
export interface PipelineActivity {
  channel?: ChannelActivity | null;
  lambda?: LambdaActivity | null;
  datastore?: DatastoreActivity | null;
  addAttributes?: AddAttributesActivity | null;
  removeAttributes?: RemoveAttributesActivity | null;
  selectAttributes?: SelectAttributesActivity | null;
  filter?: FilterActivity | null;
  math?: MathActivity | null;
  deviceRegistryEnrich?: DeviceRegistryEnrichActivity | null;
  deviceShadowEnrich?: DeviceShadowEnrichActivity | null;
}

// refs: 4 - tags: input, named, interface, output
export interface ChannelActivity {
  name: string;
  channelName: string;
  next?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface LambdaActivity {
  name: string;
  lambdaName: string;
  batchSize: number;
  next?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface DatastoreActivity {
  name: string;
  datastoreName: string;
}

// refs: 4 - tags: input, named, interface, output
export interface AddAttributesActivity {
  name: string;
  attributes: { [key: string]: string | null | undefined };
  next?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface RemoveAttributesActivity {
  name: string;
  attributes: string[];
  next?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface SelectAttributesActivity {
  name: string;
  attributes: string[];
  next?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface FilterActivity {
  name: string;
  filter: string;
  next?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface MathActivity {
  name: string;
  attribute: string;
  math: string;
  next?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface DeviceRegistryEnrichActivity {
  name: string;
  attribute: string;
  thingName: string;
  roleArn: string;
  next?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface DeviceShadowEnrichActivity {
  name: string;
  attribute: string;
  thingName: string;
  roleArn: string;
  next?: string | null;
}

// refs: 2 - tags: input, named, interface, output
export interface LoggingOptions {
  roleArn: string;
  level: LoggingLevel;
  enabled: boolean;
}

// refs: 2 - tags: input, named, enum, output
export type LoggingLevel =
| "ERROR"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface ChannelMessages {
  s3Paths?: string[] | null;
}

// refs: 1 - tags: output, named, interface
export interface BatchPutMessageErrorEntry {
  messageId?: string | null;
  errorCode?: string | null;
  errorMessage?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Channel {
  name?: string | null;
  storage?: ChannelStorage | null;
  arn?: string | null;
  status?: ChannelStatus | null;
  retentionPeriod?: RetentionPeriod | null;
  creationTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
  lastMessageArrivalTime?: Date | number | null;
}

// refs: 2 - tags: output, named, enum
export type ChannelStatus =
| "CREATING"
| "ACTIVE"
| "DELETING"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ChannelStatistics {
  size?: EstimatedResourceSize | null;
}

// refs: 2 - tags: output, named, interface
export interface EstimatedResourceSize {
  estimatedSizeInBytes?: number | null;
  estimatedOn?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface Dataset {
  name?: string | null;
  arn?: string | null;
  actions?: DatasetAction[] | null;
  triggers?: DatasetTrigger[] | null;
  contentDeliveryRules?: DatasetContentDeliveryRule[] | null;
  status?: DatasetStatus | null;
  creationTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
  retentionPeriod?: RetentionPeriod | null;
  versioningConfiguration?: VersioningConfiguration | null;
  lateDataRules?: LateDataRule[] | null;
}

// refs: 2 - tags: output, named, enum
export type DatasetStatus =
| "CREATING"
| "ACTIVE"
| "DELETING"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Datastore {
  name?: string | null;
  storage?: DatastoreStorage | null;
  arn?: string | null;
  status?: DatastoreStatus | null;
  retentionPeriod?: RetentionPeriod | null;
  creationTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
  lastMessageArrivalTime?: Date | number | null;
  fileFormatConfiguration?: FileFormatConfiguration | null;
}

// refs: 2 - tags: output, named, enum
export type DatastoreStatus =
| "CREATING"
| "ACTIVE"
| "DELETING"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface DatastoreStatistics {
  size?: EstimatedResourceSize | null;
}

// refs: 1 - tags: output, named, interface
export interface Pipeline {
  name?: string | null;
  arn?: string | null;
  activities?: PipelineActivity[] | null;
  reprocessingSummaries?: ReprocessingSummary[] | null;
  creationTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
}

// refs: 2 - tags: output, named, interface
export interface ReprocessingSummary {
  id?: string | null;
  status?: ReprocessingStatus | null;
  creationTime?: Date | number | null;
}

// refs: 2 - tags: output, named, enum
export type ReprocessingStatus =
| "RUNNING"
| "SUCCEEDED"
| "CANCELLED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface DatasetEntry {
  entryName?: string | null;
  dataURI?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface DatasetContentStatus {
  state?: DatasetContentState | null;
  reason?: string | null;
}

// refs: 2 - tags: output, named, enum
export type DatasetContentState =
| "CREATING"
| "SUCCEEDED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface ChannelSummary {
  channelName?: string | null;
  channelStorage?: ChannelStorageSummary | null;
  status?: ChannelStatus | null;
  creationTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
  lastMessageArrivalTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface ChannelStorageSummary {
  serviceManagedS3?: ServiceManagedChannelS3StorageSummary | null;
  customerManagedS3?: CustomerManagedChannelS3StorageSummary | null;
}

// refs: 1 - tags: output, named, interface
export interface ServiceManagedChannelS3StorageSummary {
}

// refs: 1 - tags: output, named, interface
export interface CustomerManagedChannelS3StorageSummary {
  bucket?: string | null;
  keyPrefix?: string | null;
  roleArn?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface DatasetContentSummary {
  version?: string | null;
  status?: DatasetContentStatus | null;
  creationTime?: Date | number | null;
  scheduleTime?: Date | number | null;
  completionTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface DatasetSummary {
  datasetName?: string | null;
  status?: DatasetStatus | null;
  creationTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
  triggers?: DatasetTrigger[] | null;
  actions?: DatasetActionSummary[] | null;
}

// refs: 1 - tags: output, named, interface
export interface DatasetActionSummary {
  actionName?: string | null;
  actionType?: DatasetActionType | null;
}

// refs: 1 - tags: output, named, enum
export type DatasetActionType =
| "QUERY"
| "CONTAINER"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface DatastoreSummary {
  datastoreName?: string | null;
  datastoreStorage?: DatastoreStorageSummary | null;
  status?: DatastoreStatus | null;
  creationTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
  lastMessageArrivalTime?: Date | number | null;
  fileFormatType?: FileFormatType | null;
}

// refs: 1 - tags: output, named, interface
export interface DatastoreStorageSummary {
  serviceManagedS3?: ServiceManagedDatastoreS3StorageSummary | null;
  customerManagedS3?: CustomerManagedDatastoreS3StorageSummary | null;
}

// refs: 1 - tags: output, named, interface
export interface ServiceManagedDatastoreS3StorageSummary {
}

// refs: 1 - tags: output, named, interface
export interface CustomerManagedDatastoreS3StorageSummary {
  bucket?: string | null;
  keyPrefix?: string | null;
  roleArn?: string | null;
}

// refs: 1 - tags: output, named, enum
export type FileFormatType =
| "JSON"
| "PARQUET"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface PipelineSummary {
  pipelineName?: string | null;
  reprocessingSummaries?: ReprocessingSummary[] | null;
  creationTime?: Date | number | null;
  lastUpdateTime?: Date | number | null;
}
