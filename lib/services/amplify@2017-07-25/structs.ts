// Autogenerated API structures for: AWS Amplify

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface CreateAppRequest {
  name: string;
  description?: string | null;
  repository?: string | null;
  platform?: Platform | null;
  iamServiceRoleArn?: string | null;
  oauthToken?: string | null;
  accessToken?: string | null;
  environmentVariables?: { [key: string]: string | null | undefined } | null;
  enableBranchAutoBuild?: boolean | null;
  enableBranchAutoDeletion?: boolean | null;
  enableBasicAuth?: boolean | null;
  basicAuthCredentials?: string | null;
  customRules?: CustomRule[] | null;
  tags?: { [key: string]: string | null | undefined } | null;
  buildSpec?: string | null;
  customHeaders?: string | null;
  enableAutoBranchCreation?: boolean | null;
  autoBranchCreationPatterns?: string[] | null;
  autoBranchCreationConfig?: AutoBranchCreationConfig | null;
}

// refs: 1 - tags: named, input
export interface CreateBackendEnvironmentRequest {
  appId: string;
  environmentName: string;
  stackName?: string | null;
  deploymentArtifacts?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateBranchRequest {
  appId: string;
  branchName: string;
  description?: string | null;
  stage?: Stage | null;
  framework?: string | null;
  enableNotification?: boolean | null;
  enableAutoBuild?: boolean | null;
  environmentVariables?: { [key: string]: string | null | undefined } | null;
  basicAuthCredentials?: string | null;
  enableBasicAuth?: boolean | null;
  enablePerformanceMode?: boolean | null;
  tags?: { [key: string]: string | null | undefined } | null;
  buildSpec?: string | null;
  ttl?: string | null;
  displayName?: string | null;
  enablePullRequestPreview?: boolean | null;
  pullRequestEnvironmentName?: string | null;
  backendEnvironmentArn?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateDeploymentRequest {
  appId: string;
  branchName: string;
  fileMap?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface CreateDomainAssociationRequest {
  appId: string;
  domainName: string;
  enableAutoSubDomain?: boolean | null;
  subDomainSettings: SubDomainSetting[];
  autoSubDomainCreationPatterns?: string[] | null;
  autoSubDomainIAMRole?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateWebhookRequest {
  appId: string;
  branchName: string;
  description?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteAppRequest {
  appId: string;
}

// refs: 1 - tags: named, input
export interface DeleteBackendEnvironmentRequest {
  appId: string;
  environmentName: string;
}

// refs: 1 - tags: named, input
export interface DeleteBranchRequest {
  appId: string;
  branchName: string;
}

// refs: 1 - tags: named, input
export interface DeleteDomainAssociationRequest {
  appId: string;
  domainName: string;
}

// refs: 1 - tags: named, input
export interface DeleteJobRequest {
  appId: string;
  branchName: string;
  jobId: string;
}

// refs: 1 - tags: named, input
export interface DeleteWebhookRequest {
  webhookId: string;
}

// refs: 1 - tags: named, input
export interface GenerateAccessLogsRequest {
  startTime?: Date | number | null;
  endTime?: Date | number | null;
  domainName: string;
  appId: string;
}

// refs: 1 - tags: named, input
export interface GetAppRequest {
  appId: string;
}

// refs: 1 - tags: named, input
export interface GetArtifactUrlRequest {
  artifactId: string;
}

// refs: 1 - tags: named, input
export interface GetBackendEnvironmentRequest {
  appId: string;
  environmentName: string;
}

// refs: 1 - tags: named, input
export interface GetBranchRequest {
  appId: string;
  branchName: string;
}

// refs: 1 - tags: named, input
export interface GetDomainAssociationRequest {
  appId: string;
  domainName: string;
}

// refs: 1 - tags: named, input
export interface GetJobRequest {
  appId: string;
  branchName: string;
  jobId: string;
}

// refs: 1 - tags: named, input
export interface GetWebhookRequest {
  webhookId: string;
}

// refs: 1 - tags: named, input
export interface ListAppsRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListArtifactsRequest {
  appId: string;
  branchName: string;
  jobId: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListBackendEnvironmentsRequest {
  appId: string;
  environmentName?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListBranchesRequest {
  appId: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListDomainAssociationsRequest {
  appId: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListJobsRequest {
  appId: string;
  branchName: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface ListWebhooksRequest {
  appId: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface StartDeploymentRequest {
  appId: string;
  branchName: string;
  jobId?: string | null;
  sourceUrl?: string | null;
}

// refs: 1 - tags: named, input
export interface StartJobRequest {
  appId: string;
  branchName: string;
  jobId?: string | null;
  jobType: JobType;
  jobReason?: string | null;
  commitId?: string | null;
  commitMessage?: string | null;
  commitTime?: Date | number | null;
}

// refs: 1 - tags: named, input
export interface StopJobRequest {
  appId: string;
  branchName: string;
  jobId: string;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceArn: string;
  tags: { [key: string]: string | null | undefined };
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateAppRequest {
  appId: string;
  name?: string | null;
  description?: string | null;
  platform?: Platform | null;
  iamServiceRoleArn?: string | null;
  environmentVariables?: { [key: string]: string | null | undefined } | null;
  enableBranchAutoBuild?: boolean | null;
  enableBranchAutoDeletion?: boolean | null;
  enableBasicAuth?: boolean | null;
  basicAuthCredentials?: string | null;
  customRules?: CustomRule[] | null;
  buildSpec?: string | null;
  customHeaders?: string | null;
  enableAutoBranchCreation?: boolean | null;
  autoBranchCreationPatterns?: string[] | null;
  autoBranchCreationConfig?: AutoBranchCreationConfig | null;
  repository?: string | null;
  oauthToken?: string | null;
  accessToken?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateBranchRequest {
  appId: string;
  branchName: string;
  description?: string | null;
  framework?: string | null;
  stage?: Stage | null;
  enableNotification?: boolean | null;
  enableAutoBuild?: boolean | null;
  environmentVariables?: { [key: string]: string | null | undefined } | null;
  basicAuthCredentials?: string | null;
  enableBasicAuth?: boolean | null;
  enablePerformanceMode?: boolean | null;
  buildSpec?: string | null;
  ttl?: string | null;
  displayName?: string | null;
  enablePullRequestPreview?: boolean | null;
  pullRequestEnvironmentName?: string | null;
  backendEnvironmentArn?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateDomainAssociationRequest {
  appId: string;
  domainName: string;
  enableAutoSubDomain?: boolean | null;
  subDomainSettings: SubDomainSetting[];
  autoSubDomainCreationPatterns?: string[] | null;
  autoSubDomainIAMRole?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateWebhookRequest {
  webhookId: string;
  branchName?: string | null;
  description?: string | null;
}

// refs: 1 - tags: named, output
export interface CreateAppResult {
  app: App;
}

// refs: 1 - tags: named, output
export interface CreateBackendEnvironmentResult {
  backendEnvironment: BackendEnvironment;
}

// refs: 1 - tags: named, output
export interface CreateBranchResult {
  branch: Branch;
}

// refs: 1 - tags: named, output
export interface CreateDeploymentResult {
  jobId?: string | null;
  fileUploadUrls: { [key: string]: string | null | undefined };
  zipUploadUrl: string;
}

// refs: 1 - tags: named, output
export interface CreateDomainAssociationResult {
  domainAssociation: DomainAssociation;
}

// refs: 1 - tags: named, output
export interface CreateWebhookResult {
  webhook: Webhook;
}

// refs: 1 - tags: named, output
export interface DeleteAppResult {
  app: App;
}

// refs: 1 - tags: named, output
export interface DeleteBackendEnvironmentResult {
  backendEnvironment: BackendEnvironment;
}

// refs: 1 - tags: named, output
export interface DeleteBranchResult {
  branch: Branch;
}

// refs: 1 - tags: named, output
export interface DeleteDomainAssociationResult {
  domainAssociation: DomainAssociation;
}

// refs: 1 - tags: named, output
export interface DeleteJobResult {
  jobSummary: JobSummary;
}

// refs: 1 - tags: named, output
export interface DeleteWebhookResult {
  webhook: Webhook;
}

// refs: 1 - tags: named, output
export interface GenerateAccessLogsResult {
  logUrl?: string | null;
}

// refs: 1 - tags: named, output
export interface GetAppResult {
  app: App;
}

// refs: 1 - tags: named, output
export interface GetArtifactUrlResult {
  artifactId: string;
  artifactUrl: string;
}

// refs: 1 - tags: named, output
export interface GetBackendEnvironmentResult {
  backendEnvironment: BackendEnvironment;
}

// refs: 1 - tags: named, output
export interface GetBranchResult {
  branch: Branch;
}

// refs: 1 - tags: named, output
export interface GetDomainAssociationResult {
  domainAssociation: DomainAssociation;
}

// refs: 1 - tags: named, output
export interface GetJobResult {
  job: Job;
}

// refs: 1 - tags: named, output
export interface GetWebhookResult {
  webhook: Webhook;
}

// refs: 1 - tags: named, output
export interface ListAppsResult {
  apps: App[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListArtifactsResult {
  artifacts: Artifact[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListBackendEnvironmentsResult {
  backendEnvironments: BackendEnvironment[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListBranchesResult {
  branches: Branch[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListDomainAssociationsResult {
  domainAssociations: DomainAssociation[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListJobsResult {
  jobSummaries: JobSummary[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, output
export interface ListWebhooksResult {
  webhooks: Webhook[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface StartDeploymentResult {
  jobSummary: JobSummary;
}

// refs: 1 - tags: named, output
export interface StartJobResult {
  jobSummary: JobSummary;
}

// refs: 1 - tags: named, output
export interface StopJobResult {
  jobSummary: JobSummary;
}

// refs: 1 - tags: named, output
export interface UpdateAppResult {
  app: App;
}

// refs: 1 - tags: named, output
export interface UpdateBranchResult {
  branch: Branch;
}

// refs: 1 - tags: named, output
export interface UpdateDomainAssociationResult {
  domainAssociation: DomainAssociation;
}

// refs: 1 - tags: named, output
export interface UpdateWebhookResult {
  webhook: Webhook;
}

// refs: 7 - tags: input, named, enum, output
export type Platform =
| "WEB"
| cmnP.UnexpectedEnumValue;

// refs: 7 - tags: input, named, interface, output
export interface CustomRule {
  source: string;
  target: string;
  status?: string | null;
  condition?: string | null;
}

// refs: 7 - tags: input, named, interface, output
export interface AutoBranchCreationConfig {
  stage?: Stage | null;
  framework?: string | null;
  enableAutoBuild?: boolean | null;
  environmentVariables?: { [key: string]: string | null | undefined } | null;
  basicAuthCredentials?: string | null;
  enableBasicAuth?: boolean | null;
  enablePerformanceMode?: boolean | null;
  buildSpec?: string | null;
  enablePullRequestPreview?: boolean | null;
  pullRequestEnvironmentName?: string | null;
}

// refs: 14 - tags: input, named, enum, output
export type Stage =
| "PRODUCTION"
| "BETA"
| "DEVELOPMENT"
| "EXPERIMENTAL"
| "PULL_REQUEST"
| cmnP.UnexpectedEnumValue;

// refs: 7 - tags: input, named, interface, output
export interface SubDomainSetting {
  prefix: string;
  branchName: string;
}

// refs: 7 - tags: input, named, enum, output
export type JobType =
| "RELEASE"
| "RETRY"
| "MANUAL"
| "WEB_HOOK"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: output, named, interface
export interface App {
  appId: string;
  appArn: string;
  name: string;
  tags?: { [key: string]: string | null | undefined } | null;
  description: string;
  repository: string;
  platform: Platform;
  createTime: Date | number;
  updateTime: Date | number;
  iamServiceRoleArn?: string | null;
  environmentVariables: { [key: string]: string | null | undefined };
  defaultDomain: string;
  enableBranchAutoBuild: boolean;
  enableBranchAutoDeletion?: boolean | null;
  enableBasicAuth: boolean;
  basicAuthCredentials?: string | null;
  customRules?: CustomRule[] | null;
  productionBranch?: ProductionBranch | null;
  buildSpec?: string | null;
  customHeaders?: string | null;
  enableAutoBranchCreation?: boolean | null;
  autoBranchCreationPatterns?: string[] | null;
  autoBranchCreationConfig?: AutoBranchCreationConfig | null;
}

// refs: 5 - tags: output, named, interface
export interface ProductionBranch {
  lastDeployTime?: Date | number | null;
  status?: string | null;
  thumbnailUrl?: string | null;
  branchName?: string | null;
}

// refs: 4 - tags: output, named, interface
export interface BackendEnvironment {
  backendEnvironmentArn: string;
  environmentName: string;
  stackName?: string | null;
  deploymentArtifacts?: string | null;
  createTime: Date | number;
  updateTime: Date | number;
}

// refs: 5 - tags: output, named, interface
export interface Branch {
  branchArn: string;
  branchName: string;
  description: string;
  tags?: { [key: string]: string | null | undefined } | null;
  stage: Stage;
  displayName: string;
  enableNotification: boolean;
  createTime: Date | number;
  updateTime: Date | number;
  environmentVariables: { [key: string]: string | null | undefined };
  enableAutoBuild: boolean;
  customDomains: string[];
  framework: string;
  activeJobId: string;
  totalNumberOfJobs: string;
  enableBasicAuth: boolean;
  enablePerformanceMode?: boolean | null;
  thumbnailUrl?: string | null;
  basicAuthCredentials?: string | null;
  buildSpec?: string | null;
  ttl: string;
  associatedResources?: string[] | null;
  enablePullRequestPreview: boolean;
  pullRequestEnvironmentName?: string | null;
  destinationBranch?: string | null;
  sourceBranch?: string | null;
  backendEnvironmentArn?: string | null;
}

// refs: 5 - tags: output, named, interface
export interface DomainAssociation {
  domainAssociationArn: string;
  domainName: string;
  enableAutoSubDomain: boolean;
  autoSubDomainCreationPatterns?: string[] | null;
  autoSubDomainIAMRole?: string | null;
  domainStatus: DomainStatus;
  statusReason: string;
  certificateVerificationDNSRecord?: string | null;
  subDomains: SubDomain[];
}

// refs: 5 - tags: output, named, enum
export type DomainStatus =
| "PENDING_VERIFICATION"
| "IN_PROGRESS"
| "AVAILABLE"
| "PENDING_DEPLOYMENT"
| "FAILED"
| "CREATING"
| "REQUESTING_CERTIFICATE"
| "UPDATING"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: output, named, interface
export interface SubDomain {
  subDomainSetting: SubDomainSetting;
  verified: boolean;
  dnsRecord: string;
}

// refs: 5 - tags: output, named, interface
export interface Webhook {
  webhookArn: string;
  webhookId: string;
  webhookUrl: string;
  branchName: string;
  description: string;
  createTime: Date | number;
  updateTime: Date | number;
}

// refs: 6 - tags: output, named, interface
export interface JobSummary {
  jobArn: string;
  jobId: string;
  commitId: string;
  commitMessage: string;
  commitTime: Date | number;
  startTime: Date | number;
  status: JobStatus;
  endTime?: Date | number | null;
  jobType: JobType;
}

// refs: 7 - tags: output, named, enum
export type JobStatus =
| "PENDING"
| "PROVISIONING"
| "RUNNING"
| "FAILED"
| "SUCCEED"
| "CANCELLING"
| "CANCELLED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Job {
  summary: JobSummary;
  steps: Step[];
}

// refs: 1 - tags: output, named, interface
export interface Step {
  stepName: string;
  startTime: Date | number;
  status: JobStatus;
  endTime: Date | number;
  logUrl?: string | null;
  artifactsUrl?: string | null;
  testArtifactsUrl?: string | null;
  testConfigUrl?: string | null;
  screenshots?: { [key: string]: string | null | undefined } | null;
  statusReason?: string | null;
  context?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Artifact {
  artifactFileName: string;
  artifactId: string;
}
