// Autogenerated API structures for: AWS CodeCommit

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface AssociateApprovalRuleTemplateWithRepositoryInput {
  approvalRuleTemplateName: string;
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface BatchAssociateApprovalRuleTemplateWithRepositoriesInput {
  approvalRuleTemplateName: string;
  repositoryNames: string[];
}

// refs: 1 - tags: named, input
export interface BatchDescribeMergeConflictsInput {
  repositoryName: string;
  destinationCommitSpecifier: string;
  sourceCommitSpecifier: string;
  mergeOption: MergeOptionTypeEnum;
  maxMergeHunks?: number | null;
  maxConflictFiles?: number | null;
  filePaths?: string[] | null;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface BatchDisassociateApprovalRuleTemplateFromRepositoriesInput {
  approvalRuleTemplateName: string;
  repositoryNames: string[];
}

// refs: 1 - tags: named, input
export interface BatchGetCommitsInput {
  commitIds: string[];
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface BatchGetRepositoriesInput {
  repositoryNames: string[];
}

// refs: 1 - tags: named, input
export interface CreateApprovalRuleTemplateInput {
  approvalRuleTemplateName: string;
  approvalRuleTemplateContent: string;
  approvalRuleTemplateDescription?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateBranchInput {
  repositoryName: string;
  branchName: string;
  commitId: string;
}

// refs: 1 - tags: named, input
export interface CreateCommitInput {
  repositoryName: string;
  branchName: string;
  parentCommitId?: string | null;
  authorName?: string | null;
  email?: string | null;
  commitMessage?: string | null;
  keepEmptyFolders?: boolean | null;
  putFiles?: PutFileEntry[] | null;
  deleteFiles?: DeleteFileEntry[] | null;
  setFileModes?: SetFileModeEntry[] | null;
}

// refs: 1 - tags: named, input
export interface CreatePullRequestInput {
  title: string;
  description?: string | null;
  targets: Target[];
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface CreatePullRequestApprovalRuleInput {
  pullRequestId: string;
  approvalRuleName: string;
  approvalRuleContent: string;
}

// refs: 1 - tags: named, input
export interface CreateRepositoryInput {
  repositoryName: string;
  repositoryDescription?: string | null;
  tags?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface CreateUnreferencedMergeCommitInput {
  repositoryName: string;
  sourceCommitSpecifier: string;
  destinationCommitSpecifier: string;
  mergeOption: MergeOptionTypeEnum;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
  authorName?: string | null;
  email?: string | null;
  commitMessage?: string | null;
  keepEmptyFolders?: boolean | null;
  conflictResolution?: ConflictResolution | null;
}

// refs: 1 - tags: named, input
export interface DeleteApprovalRuleTemplateInput {
  approvalRuleTemplateName: string;
}

// refs: 1 - tags: named, input
export interface DeleteBranchInput {
  repositoryName: string;
  branchName: string;
}

// refs: 1 - tags: named, input
export interface DeleteCommentContentInput {
  commentId: string;
}

// refs: 1 - tags: named, input
export interface DeleteFileInput {
  repositoryName: string;
  branchName: string;
  filePath: string;
  parentCommitId: string;
  keepEmptyFolders?: boolean | null;
  commitMessage?: string | null;
  name?: string | null;
  email?: string | null;
}

// refs: 1 - tags: named, input
export interface DeletePullRequestApprovalRuleInput {
  pullRequestId: string;
  approvalRuleName: string;
}

// refs: 1 - tags: named, input
export interface DeleteRepositoryInput {
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface DescribeMergeConflictsInput {
  repositoryName: string;
  destinationCommitSpecifier: string;
  sourceCommitSpecifier: string;
  mergeOption: MergeOptionTypeEnum;
  maxMergeHunks?: number | null;
  filePath: string;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribePullRequestEventsInput {
  pullRequestId: string;
  pullRequestEventType?: PullRequestEventType | null;
  actorArn?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface DisassociateApprovalRuleTemplateFromRepositoryInput {
  approvalRuleTemplateName: string;
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface EvaluatePullRequestApprovalRulesInput {
  pullRequestId: string;
  revisionId: string;
}

// refs: 1 - tags: named, input
export interface GetApprovalRuleTemplateInput {
  approvalRuleTemplateName: string;
}

// refs: 1 - tags: named, input
export interface GetBlobInput {
  repositoryName: string;
  blobId: string;
}

// refs: 1 - tags: named, input
export interface GetBranchInput {
  repositoryName?: string | null;
  branchName?: string | null;
}

// refs: 1 - tags: named, input
export interface GetCommentInput {
  commentId: string;
}

// refs: 1 - tags: named, input
export interface GetCommentReactionsInput {
  commentId: string;
  reactionUserArn?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetCommentsForComparedCommitInput {
  repositoryName: string;
  beforeCommitId?: string | null;
  afterCommitId: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetCommentsForPullRequestInput {
  pullRequestId: string;
  repositoryName?: string | null;
  beforeCommitId?: string | null;
  afterCommitId?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface GetCommitInput {
  repositoryName: string;
  commitId: string;
}

// refs: 1 - tags: named, input
export interface GetDifferencesInput {
  repositoryName: string;
  beforeCommitSpecifier?: string | null;
  afterCommitSpecifier: string;
  beforePath?: string | null;
  afterPath?: string | null;
  MaxResults?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetFileInput {
  repositoryName: string;
  commitSpecifier?: string | null;
  filePath: string;
}

// refs: 1 - tags: named, input
export interface GetFolderInput {
  repositoryName: string;
  commitSpecifier?: string | null;
  folderPath: string;
}

// refs: 1 - tags: named, input
export interface GetMergeCommitInput {
  repositoryName: string;
  sourceCommitSpecifier: string;
  destinationCommitSpecifier: string;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
}

// refs: 1 - tags: named, input
export interface GetMergeConflictsInput {
  repositoryName: string;
  destinationCommitSpecifier: string;
  sourceCommitSpecifier: string;
  mergeOption: MergeOptionTypeEnum;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  maxConflictFiles?: number | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface GetMergeOptionsInput {
  repositoryName: string;
  sourceCommitSpecifier: string;
  destinationCommitSpecifier: string;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
}

// refs: 1 - tags: named, input
export interface GetPullRequestInput {
  pullRequestId: string;
}

// refs: 1 - tags: named, input
export interface GetPullRequestApprovalStatesInput {
  pullRequestId: string;
  revisionId: string;
}

// refs: 1 - tags: named, input
export interface GetPullRequestOverrideStateInput {
  pullRequestId: string;
  revisionId: string;
}

// refs: 1 - tags: named, input
export interface GetRepositoryInput {
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface GetRepositoryTriggersInput {
  repositoryName: string;
}

// refs: 1 - tags: named, input
export interface ListApprovalRuleTemplatesInput {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListAssociatedApprovalRuleTemplatesForRepositoryInput {
  repositoryName: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListBranchesInput {
  repositoryName: string;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListPullRequestsInput {
  repositoryName: string;
  authorArn?: string | null;
  pullRequestStatus?: PullRequestStatusEnum | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListRepositoriesInput {
  nextToken?: string | null;
  sortBy?: SortByEnum | null;
  order?: OrderEnum | null;
}

// refs: 1 - tags: named, input
export interface ListRepositoriesForApprovalRuleTemplateInput {
  approvalRuleTemplateName: string;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceInput {
  resourceArn: string;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface MergeBranchesByFastForwardInput {
  repositoryName: string;
  sourceCommitSpecifier: string;
  destinationCommitSpecifier: string;
  targetBranch?: string | null;
}

// refs: 1 - tags: named, input
export interface MergeBranchesBySquashInput {
  repositoryName: string;
  sourceCommitSpecifier: string;
  destinationCommitSpecifier: string;
  targetBranch?: string | null;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
  authorName?: string | null;
  email?: string | null;
  commitMessage?: string | null;
  keepEmptyFolders?: boolean | null;
  conflictResolution?: ConflictResolution | null;
}

// refs: 1 - tags: named, input
export interface MergeBranchesByThreeWayInput {
  repositoryName: string;
  sourceCommitSpecifier: string;
  destinationCommitSpecifier: string;
  targetBranch?: string | null;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
  authorName?: string | null;
  email?: string | null;
  commitMessage?: string | null;
  keepEmptyFolders?: boolean | null;
  conflictResolution?: ConflictResolution | null;
}

// refs: 1 - tags: named, input
export interface MergePullRequestByFastForwardInput {
  pullRequestId: string;
  repositoryName: string;
  sourceCommitId?: string | null;
}

// refs: 1 - tags: named, input
export interface MergePullRequestBySquashInput {
  pullRequestId: string;
  repositoryName: string;
  sourceCommitId?: string | null;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
  commitMessage?: string | null;
  authorName?: string | null;
  email?: string | null;
  keepEmptyFolders?: boolean | null;
  conflictResolution?: ConflictResolution | null;
}

// refs: 1 - tags: named, input
export interface MergePullRequestByThreeWayInput {
  pullRequestId: string;
  repositoryName: string;
  sourceCommitId?: string | null;
  conflictDetailLevel?: ConflictDetailLevelTypeEnum | null;
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnum | null;
  commitMessage?: string | null;
  authorName?: string | null;
  email?: string | null;
  keepEmptyFolders?: boolean | null;
  conflictResolution?: ConflictResolution | null;
}

// refs: 1 - tags: named, input
export interface OverridePullRequestApprovalRulesInput {
  pullRequestId: string;
  revisionId: string;
  overrideStatus: OverrideStatus;
}

// refs: 1 - tags: named, input
export interface PostCommentForComparedCommitInput {
  repositoryName: string;
  beforeCommitId?: string | null;
  afterCommitId: string;
  location?: Location | null;
  content: string;
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface PostCommentForPullRequestInput {
  pullRequestId: string;
  repositoryName: string;
  beforeCommitId: string;
  afterCommitId: string;
  location?: Location | null;
  content: string;
  clientRequestToken?: string | null;
}

// refs: 1 - tags: named, input
export interface PostCommentReplyInput {
  inReplyTo: string;
  clientRequestToken?: string | null;
  content: string;
}

// refs: 1 - tags: named, input
export interface PutCommentReactionInput {
  commentId: string;
  reactionValue: string;
}

// refs: 1 - tags: named, input
export interface PutFileInput {
  repositoryName: string;
  branchName: string;
  fileContent: Uint8Array | string;
  filePath: string;
  fileMode?: FileModeTypeEnum | null;
  parentCommitId?: string | null;
  commitMessage?: string | null;
  name?: string | null;
  email?: string | null;
}

// refs: 1 - tags: named, input
export interface PutRepositoryTriggersInput {
  repositoryName: string;
  triggers: RepositoryTrigger[];
}

// refs: 1 - tags: named, input
export interface TagResourceInput {
  resourceArn: string;
  tags: { [key: string]: string | null | undefined };
}

// refs: 1 - tags: named, input
export interface TestRepositoryTriggersInput {
  repositoryName: string;
  triggers: RepositoryTrigger[];
}

// refs: 1 - tags: named, input
export interface UntagResourceInput {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateApprovalRuleTemplateContentInput {
  approvalRuleTemplateName: string;
  newRuleContent: string;
  existingRuleContentSha256?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateApprovalRuleTemplateDescriptionInput {
  approvalRuleTemplateName: string;
  approvalRuleTemplateDescription: string;
}

// refs: 1 - tags: named, input
export interface UpdateApprovalRuleTemplateNameInput {
  oldApprovalRuleTemplateName: string;
  newApprovalRuleTemplateName: string;
}

// refs: 1 - tags: named, input
export interface UpdateCommentInput {
  commentId: string;
  content: string;
}

// refs: 1 - tags: named, input
export interface UpdateDefaultBranchInput {
  repositoryName: string;
  defaultBranchName: string;
}

// refs: 1 - tags: named, input
export interface UpdatePullRequestApprovalRuleContentInput {
  pullRequestId: string;
  approvalRuleName: string;
  existingRuleContentSha256?: string | null;
  newRuleContent: string;
}

// refs: 1 - tags: named, input
export interface UpdatePullRequestApprovalStateInput {
  pullRequestId: string;
  revisionId: string;
  approvalState: ApprovalState;
}

// refs: 1 - tags: named, input
export interface UpdatePullRequestDescriptionInput {
  pullRequestId: string;
  description: string;
}

// refs: 1 - tags: named, input
export interface UpdatePullRequestStatusInput {
  pullRequestId: string;
  pullRequestStatus: PullRequestStatusEnum;
}

// refs: 1 - tags: named, input
export interface UpdatePullRequestTitleInput {
  pullRequestId: string;
  title: string;
}

// refs: 1 - tags: named, input
export interface UpdateRepositoryDescriptionInput {
  repositoryName: string;
  repositoryDescription?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateRepositoryNameInput {
  oldName: string;
  newName: string;
}

// refs: 1 - tags: named, output
export interface BatchAssociateApprovalRuleTemplateWithRepositoriesOutput {
  associatedRepositoryNames: string[];
  errors: BatchAssociateApprovalRuleTemplateWithRepositoriesError[];
}

// refs: 1 - tags: named, output
export interface BatchDescribeMergeConflictsOutput {
  conflicts: Conflict[];
  nextToken?: string | null;
  errors?: BatchDescribeMergeConflictsError[] | null;
  destinationCommitId: string;
  sourceCommitId: string;
  baseCommitId?: string | null;
}

// refs: 1 - tags: named, output
export interface BatchDisassociateApprovalRuleTemplateFromRepositoriesOutput {
  disassociatedRepositoryNames: string[];
  errors: BatchDisassociateApprovalRuleTemplateFromRepositoriesError[];
}

// refs: 1 - tags: named, output
export interface BatchGetCommitsOutput {
  commits?: Commit[] | null;
  errors?: BatchGetCommitsError[] | null;
}

// refs: 1 - tags: named, output
export interface BatchGetRepositoriesOutput {
  repositories?: RepositoryMetadata[] | null;
  repositoriesNotFound?: string[] | null;
}

// refs: 1 - tags: named, output
export interface CreateApprovalRuleTemplateOutput {
  approvalRuleTemplate: ApprovalRuleTemplate;
}

// refs: 1 - tags: named, output
export interface CreateCommitOutput {
  commitId?: string | null;
  treeId?: string | null;
  filesAdded?: FileMetadata[] | null;
  filesUpdated?: FileMetadata[] | null;
  filesDeleted?: FileMetadata[] | null;
}

// refs: 1 - tags: named, output
export interface CreatePullRequestOutput {
  pullRequest: PullRequest;
}

// refs: 1 - tags: named, output
export interface CreatePullRequestApprovalRuleOutput {
  approvalRule: ApprovalRule;
}

// refs: 1 - tags: named, output
export interface CreateRepositoryOutput {
  repositoryMetadata?: RepositoryMetadata | null;
}

// refs: 1 - tags: named, output
export interface CreateUnreferencedMergeCommitOutput {
  commitId?: string | null;
  treeId?: string | null;
}

// refs: 1 - tags: named, output
export interface DeleteApprovalRuleTemplateOutput {
  approvalRuleTemplateId: string;
}

// refs: 1 - tags: named, output
export interface DeleteBranchOutput {
  deletedBranch?: BranchInfo | null;
}

// refs: 1 - tags: named, output
export interface DeleteCommentContentOutput {
  comment?: Comment | null;
}

// refs: 1 - tags: named, output
export interface DeleteFileOutput {
  commitId: string;
  blobId: string;
  treeId: string;
  filePath: string;
}

// refs: 1 - tags: named, output
export interface DeletePullRequestApprovalRuleOutput {
  approvalRuleId: string;
}

// refs: 1 - tags: named, output
export interface DeleteRepositoryOutput {
  repositoryId?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeMergeConflictsOutput {
  conflictMetadata: ConflictMetadata;
  mergeHunks: MergeHunk[];
  nextToken?: string | null;
  destinationCommitId: string;
  sourceCommitId: string;
  baseCommitId?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribePullRequestEventsOutput {
  pullRequestEvents: PullRequestEvent[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface EvaluatePullRequestApprovalRulesOutput {
  evaluation: Evaluation;
}

// refs: 1 - tags: named, output
export interface GetApprovalRuleTemplateOutput {
  approvalRuleTemplate: ApprovalRuleTemplate;
}

// refs: 1 - tags: named, output
export interface GetBlobOutput {
  content: Uint8Array | string;
}

// refs: 1 - tags: named, output
export interface GetBranchOutput {
  branch?: BranchInfo | null;
}

// refs: 1 - tags: named, output
export interface GetCommentOutput {
  comment?: Comment | null;
}

// refs: 1 - tags: named, output
export interface GetCommentReactionsOutput {
  reactionsForComment: ReactionForComment[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetCommentsForComparedCommitOutput {
  commentsForComparedCommitData?: CommentsForComparedCommit[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetCommentsForPullRequestOutput {
  commentsForPullRequestData?: CommentsForPullRequest[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetCommitOutput {
  commit: Commit;
}

// refs: 1 - tags: named, output
export interface GetDifferencesOutput {
  differences?: Difference[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetFileOutput {
  commitId: string;
  blobId: string;
  filePath: string;
  fileMode: FileModeTypeEnum;
  fileSize: number;
  fileContent: Uint8Array | string;
}

// refs: 1 - tags: named, output
export interface GetFolderOutput {
  commitId: string;
  folderPath: string;
  treeId?: string | null;
  subFolders?: Folder[] | null;
  files?: File[] | null;
  symbolicLinks?: SymbolicLink[] | null;
  subModules?: SubModule[] | null;
}

// refs: 1 - tags: named, output
export interface GetMergeCommitOutput {
  sourceCommitId?: string | null;
  destinationCommitId?: string | null;
  baseCommitId?: string | null;
  mergedCommitId?: string | null;
}

// refs: 1 - tags: named, output
export interface GetMergeConflictsOutput {
  mergeable: boolean;
  destinationCommitId: string;
  sourceCommitId: string;
  baseCommitId?: string | null;
  conflictMetadataList: ConflictMetadata[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface GetMergeOptionsOutput {
  mergeOptions: MergeOptionTypeEnum[];
  sourceCommitId: string;
  destinationCommitId: string;
  baseCommitId: string;
}

// refs: 1 - tags: named, output
export interface GetPullRequestOutput {
  pullRequest: PullRequest;
}

// refs: 1 - tags: named, output
export interface GetPullRequestApprovalStatesOutput {
  approvals?: Approval[] | null;
}

// refs: 1 - tags: named, output
export interface GetPullRequestOverrideStateOutput {
  overridden?: boolean | null;
  overrider?: string | null;
}

// refs: 1 - tags: named, output
export interface GetRepositoryOutput {
  repositoryMetadata?: RepositoryMetadata | null;
}

// refs: 1 - tags: named, output
export interface GetRepositoryTriggersOutput {
  configurationId?: string | null;
  triggers?: RepositoryTrigger[] | null;
}

// refs: 1 - tags: named, output
export interface ListApprovalRuleTemplatesOutput {
  approvalRuleTemplateNames?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListAssociatedApprovalRuleTemplatesForRepositoryOutput {
  approvalRuleTemplateNames?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListBranchesOutput {
  branches?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListPullRequestsOutput {
  pullRequestIds: string[];
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListRepositoriesOutput {
  repositories?: RepositoryNameIdPair[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListRepositoriesForApprovalRuleTemplateOutput {
  repositoryNames?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceOutput {
  tags?: { [key: string]: string | null | undefined } | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface MergeBranchesByFastForwardOutput {
  commitId?: string | null;
  treeId?: string | null;
}

// refs: 1 - tags: named, output
export interface MergeBranchesBySquashOutput {
  commitId?: string | null;
  treeId?: string | null;
}

// refs: 1 - tags: named, output
export interface MergeBranchesByThreeWayOutput {
  commitId?: string | null;
  treeId?: string | null;
}

// refs: 1 - tags: named, output
export interface MergePullRequestByFastForwardOutput {
  pullRequest?: PullRequest | null;
}

// refs: 1 - tags: named, output
export interface MergePullRequestBySquashOutput {
  pullRequest?: PullRequest | null;
}

// refs: 1 - tags: named, output
export interface MergePullRequestByThreeWayOutput {
  pullRequest?: PullRequest | null;
}

// refs: 1 - tags: named, output
export interface PostCommentForComparedCommitOutput {
  repositoryName?: string | null;
  beforeCommitId?: string | null;
  afterCommitId?: string | null;
  beforeBlobId?: string | null;
  afterBlobId?: string | null;
  location?: Location | null;
  comment?: Comment | null;
}

// refs: 1 - tags: named, output
export interface PostCommentForPullRequestOutput {
  repositoryName?: string | null;
  pullRequestId?: string | null;
  beforeCommitId?: string | null;
  afterCommitId?: string | null;
  beforeBlobId?: string | null;
  afterBlobId?: string | null;
  location?: Location | null;
  comment?: Comment | null;
}

// refs: 1 - tags: named, output
export interface PostCommentReplyOutput {
  comment?: Comment | null;
}

// refs: 1 - tags: named, output
export interface PutFileOutput {
  commitId: string;
  blobId: string;
  treeId: string;
}

// refs: 1 - tags: named, output
export interface PutRepositoryTriggersOutput {
  configurationId?: string | null;
}

// refs: 1 - tags: named, output
export interface TestRepositoryTriggersOutput {
  successfulExecutions?: string[] | null;
  failedExecutions?: RepositoryTriggerExecutionFailure[] | null;
}

// refs: 1 - tags: named, output
export interface UpdateApprovalRuleTemplateContentOutput {
  approvalRuleTemplate: ApprovalRuleTemplate;
}

// refs: 1 - tags: named, output
export interface UpdateApprovalRuleTemplateDescriptionOutput {
  approvalRuleTemplate: ApprovalRuleTemplate;
}

// refs: 1 - tags: named, output
export interface UpdateApprovalRuleTemplateNameOutput {
  approvalRuleTemplate: ApprovalRuleTemplate;
}

// refs: 1 - tags: named, output
export interface UpdateCommentOutput {
  comment?: Comment | null;
}

// refs: 1 - tags: named, output
export interface UpdatePullRequestApprovalRuleContentOutput {
  approvalRule: ApprovalRule;
}

// refs: 1 - tags: named, output
export interface UpdatePullRequestDescriptionOutput {
  pullRequest: PullRequest;
}

// refs: 1 - tags: named, output
export interface UpdatePullRequestStatusOutput {
  pullRequest: PullRequest;
}

// refs: 1 - tags: named, output
export interface UpdatePullRequestTitleOutput {
  pullRequest: PullRequest;
}

// refs: 14 - tags: input, named, enum, output
export type MergeOptionTypeEnum =
| "FAST_FORWARD_MERGE"
| "SQUASH_MERGE"
| "THREE_WAY_MERGE"
| cmnP.UnexpectedEnumValue;

// refs: 10 - tags: input, named, enum
export type ConflictDetailLevelTypeEnum =
| "FILE_LEVEL"
| "LINE_LEVEL"
| cmnP.UnexpectedEnumValue;

// refs: 10 - tags: input, named, enum
export type ConflictResolutionStrategyTypeEnum =
| "NONE"
| "ACCEPT_SOURCE"
| "ACCEPT_DESTINATION"
| "AUTOMERGE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface PutFileEntry {
  filePath: string;
  fileMode?: FileModeTypeEnum | null;
  fileContent?: Uint8Array | string | null;
  sourceFile?: SourceFileSpecifier | null;
}

// refs: 28 - tags: input, named, enum, output
export type FileModeTypeEnum =
| "EXECUTABLE"
| "NORMAL"
| "SYMLINK"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface SourceFileSpecifier {
  filePath: string;
  isMove?: boolean | null;
}

// refs: 6 - tags: input, named, interface
export interface DeleteFileEntry {
  filePath: string;
}

// refs: 6 - tags: input, named, interface
export interface SetFileModeEntry {
  filePath: string;
  fileMode: FileModeTypeEnum;
}

// refs: 1 - tags: input, named, interface
export interface Target {
  repositoryName: string;
  sourceReference: string;
  destinationReference?: string | null;
}

// refs: 5 - tags: input, named, interface
export interface ConflictResolution {
  replaceContents?: ReplaceContentEntry[] | null;
  deleteFiles?: DeleteFileEntry[] | null;
  setFileModes?: SetFileModeEntry[] | null;
}

// refs: 5 - tags: input, named, interface
export interface ReplaceContentEntry {
  filePath: string;
  replacementType: ReplacementTypeEnum;
  content?: Uint8Array | string | null;
  fileMode?: FileModeTypeEnum | null;
}

// refs: 5 - tags: input, named, enum
export type ReplacementTypeEnum =
| "KEEP_BASE"
| "KEEP_SOURCE"
| "KEEP_DESTINATION"
| "USE_NEW_CONTENT"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type PullRequestEventType =
| "PULL_REQUEST_CREATED"
| "PULL_REQUEST_STATUS_CHANGED"
| "PULL_REQUEST_SOURCE_REFERENCE_UPDATED"
| "PULL_REQUEST_MERGE_STATE_CHANGED"
| "PULL_REQUEST_APPROVAL_RULE_CREATED"
| "PULL_REQUEST_APPROVAL_RULE_UPDATED"
| "PULL_REQUEST_APPROVAL_RULE_DELETED"
| "PULL_REQUEST_APPROVAL_RULE_OVERRIDDEN"
| "PULL_REQUEST_APPROVAL_STATE_CHANGED"
| cmnP.UnexpectedEnumValue;

// refs: 11 - tags: input, named, enum, output
export type PullRequestStatusEnum =
| "OPEN"
| "CLOSED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type SortByEnum =
| "repositoryName"
| "lastModifiedDate"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type OrderEnum =
| "ascending"
| "descending"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type OverrideStatus =
| "OVERRIDE"
| "REVOKE"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, interface, output
export interface Location {
  filePath?: string | null;
  filePosition?: number | null;
  relativeFileVersion?: RelativeFileVersionEnum | null;
}

// refs: 6 - tags: input, named, enum, output
export type RelativeFileVersionEnum =
| "BEFORE"
| "AFTER"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface RepositoryTrigger {
  name: string;
  destinationArn: string;
  customData?: string | null;
  branches?: string[] | null;
  events: RepositoryTriggerEventEnum[];
}

// refs: 3 - tags: input, named, enum, output
export type RepositoryTriggerEventEnum =
| "all"
| "updateReference"
| "createReference"
| "deleteReference"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, enum, output
export type ApprovalState =
| "APPROVE"
| "REVOKE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface BatchAssociateApprovalRuleTemplateWithRepositoriesError {
  repositoryName?: string | null;
  errorCode?: string | null;
  errorMessage?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Conflict {
  conflictMetadata?: ConflictMetadata | null;
  mergeHunks?: MergeHunk[] | null;
}

// refs: 3 - tags: output, named, interface
export interface ConflictMetadata {
  filePath?: string | null;
  fileSizes?: FileSizes | null;
  fileModes?: FileModes | null;
  objectTypes?: ObjectTypes | null;
  numberOfConflicts?: number | null;
  isBinaryFile?: IsBinaryFile | null;
  contentConflict?: boolean | null;
  fileModeConflict?: boolean | null;
  objectTypeConflict?: boolean | null;
  mergeOperations?: MergeOperations | null;
}

// refs: 3 - tags: output, named, interface
export interface FileSizes {
  source?: number | null;
  destination?: number | null;
  base?: number | null;
}

// refs: 3 - tags: output, named, interface
export interface FileModes {
  source?: FileModeTypeEnum | null;
  destination?: FileModeTypeEnum | null;
  base?: FileModeTypeEnum | null;
}

// refs: 3 - tags: output, named, interface
export interface ObjectTypes {
  source?: ObjectTypeEnum | null;
  destination?: ObjectTypeEnum | null;
  base?: ObjectTypeEnum | null;
}

// refs: 9 - tags: output, named, enum
export type ObjectTypeEnum =
| "FILE"
| "DIRECTORY"
| "GIT_LINK"
| "SYMBOLIC_LINK"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface IsBinaryFile {
  source?: boolean | null;
  destination?: boolean | null;
  base?: boolean | null;
}

// refs: 3 - tags: output, named, interface
export interface MergeOperations {
  source?: ChangeTypeEnum | null;
  destination?: ChangeTypeEnum | null;
}

// refs: 7 - tags: output, named, enum
export type ChangeTypeEnum =
| "A"
| "M"
| "D"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: output, named, interface
export interface MergeHunk {
  isConflict?: boolean | null;
  source?: MergeHunkDetail | null;
  destination?: MergeHunkDetail | null;
  base?: MergeHunkDetail | null;
}

// refs: 6 - tags: output, named, interface
export interface MergeHunkDetail {
  startLine?: number | null;
  endLine?: number | null;
  hunkContent?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface BatchDescribeMergeConflictsError {
  filePath: string;
  exceptionName: string;
  message: string;
}

// refs: 1 - tags: output, named, interface
export interface BatchDisassociateApprovalRuleTemplateFromRepositoriesError {
  repositoryName?: string | null;
  errorCode?: string | null;
  errorMessage?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface Commit {
  commitId?: string | null;
  treeId?: string | null;
  parents?: string[] | null;
  message?: string | null;
  author?: UserInfo | null;
  committer?: UserInfo | null;
  additionalData?: string | null;
}

// refs: 4 - tags: output, named, interface
export interface UserInfo {
  name?: string | null;
  email?: string | null;
  date?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface BatchGetCommitsError {
  commitId?: string | null;
  errorCode?: string | null;
  errorMessage?: string | null;
}

// refs: 3 - tags: output, named, interface
export interface RepositoryMetadata {
  accountId?: string | null;
  repositoryId?: string | null;
  repositoryName?: string | null;
  repositoryDescription?: string | null;
  defaultBranch?: string | null;
  lastModifiedDate?: Date | number | null;
  creationDate?: Date | number | null;
  cloneUrlHttp?: string | null;
  cloneUrlSsh?: string | null;
  Arn?: string | null;
}

// refs: 5 - tags: output, named, interface
export interface ApprovalRuleTemplate {
  approvalRuleTemplateId?: string | null;
  approvalRuleTemplateName?: string | null;
  approvalRuleTemplateDescription?: string | null;
  approvalRuleTemplateContent?: string | null;
  ruleContentSha256?: string | null;
  lastModifiedDate?: Date | number | null;
  creationDate?: Date | number | null;
  lastModifiedUser?: string | null;
}

// refs: 3 - tags: output, named, interface
export interface FileMetadata {
  absolutePath?: string | null;
  blobId?: string | null;
  fileMode?: FileModeTypeEnum | null;
}

// refs: 8 - tags: output, named, interface
export interface PullRequest {
  pullRequestId?: string | null;
  title?: string | null;
  description?: string | null;
  lastActivityDate?: Date | number | null;
  creationDate?: Date | number | null;
  pullRequestStatus?: PullRequestStatusEnum | null;
  authorArn?: string | null;
  pullRequestTargets?: PullRequestTarget[] | null;
  clientRequestToken?: string | null;
  revisionId?: string | null;
  approvalRules?: ApprovalRule[] | null;
}

// refs: 8 - tags: output, named, interface
export interface PullRequestTarget {
  repositoryName?: string | null;
  sourceReference?: string | null;
  destinationReference?: string | null;
  destinationCommit?: string | null;
  sourceCommit?: string | null;
  mergeBase?: string | null;
  mergeMetadata?: MergeMetadata | null;
}

// refs: 9 - tags: output, named, interface
export interface MergeMetadata {
  isMerged?: boolean | null;
  mergedBy?: string | null;
  mergeCommitId?: string | null;
  mergeOption?: MergeOptionTypeEnum | null;
}

// refs: 10 - tags: output, named, interface
export interface ApprovalRule {
  approvalRuleId?: string | null;
  approvalRuleName?: string | null;
  approvalRuleContent?: string | null;
  ruleContentSha256?: string | null;
  lastModifiedDate?: Date | number | null;
  creationDate?: Date | number | null;
  lastModifiedUser?: string | null;
  originApprovalRuleTemplate?: OriginApprovalRuleTemplate | null;
}

// refs: 10 - tags: output, named, interface
export interface OriginApprovalRuleTemplate {
  approvalRuleTemplateId?: string | null;
  approvalRuleTemplateName?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface BranchInfo {
  branchName?: string | null;
  commitId?: string | null;
}

// refs: 8 - tags: output, named, interface
export interface Comment {
  commentId?: string | null;
  content?: string | null;
  inReplyTo?: string | null;
  creationDate?: Date | number | null;
  lastModifiedDate?: Date | number | null;
  authorArn?: string | null;
  deleted?: boolean | null;
  clientRequestToken?: string | null;
  callerReactions?: string[] | null;
  reactionCounts?: { [key: string]: number | null | undefined } | null;
}

// refs: 1 - tags: output, named, interface
export interface PullRequestEvent {
  pullRequestId?: string | null;
  eventDate?: Date | number | null;
  pullRequestEventType?: PullRequestEventType | null;
  actorArn?: string | null;
  pullRequestCreatedEventMetadata?: PullRequestCreatedEventMetadata | null;
  pullRequestStatusChangedEventMetadata?: PullRequestStatusChangedEventMetadata | null;
  pullRequestSourceReferenceUpdatedEventMetadata?: PullRequestSourceReferenceUpdatedEventMetadata | null;
  pullRequestMergedStateChangedEventMetadata?: PullRequestMergedStateChangedEventMetadata | null;
  approvalRuleEventMetadata?: ApprovalRuleEventMetadata | null;
  approvalStateChangedEventMetadata?: ApprovalStateChangedEventMetadata | null;
  approvalRuleOverriddenEventMetadata?: ApprovalRuleOverriddenEventMetadata | null;
}

// refs: 1 - tags: output, named, interface
export interface PullRequestCreatedEventMetadata {
  repositoryName?: string | null;
  sourceCommitId?: string | null;
  destinationCommitId?: string | null;
  mergeBase?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PullRequestStatusChangedEventMetadata {
  pullRequestStatus?: PullRequestStatusEnum | null;
}

// refs: 1 - tags: output, named, interface
export interface PullRequestSourceReferenceUpdatedEventMetadata {
  repositoryName?: string | null;
  beforeCommitId?: string | null;
  afterCommitId?: string | null;
  mergeBase?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface PullRequestMergedStateChangedEventMetadata {
  repositoryName?: string | null;
  destinationReference?: string | null;
  mergeMetadata?: MergeMetadata | null;
}

// refs: 1 - tags: output, named, interface
export interface ApprovalRuleEventMetadata {
  approvalRuleName?: string | null;
  approvalRuleId?: string | null;
  approvalRuleContent?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ApprovalStateChangedEventMetadata {
  revisionId?: string | null;
  approvalStatus?: ApprovalState | null;
}

// refs: 1 - tags: output, named, interface
export interface ApprovalRuleOverriddenEventMetadata {
  revisionId?: string | null;
  overrideStatus?: OverrideStatus | null;
}

// refs: 1 - tags: output, named, interface
export interface Evaluation {
  approved?: boolean | null;
  overridden?: boolean | null;
  approvalRulesSatisfied?: string[] | null;
  approvalRulesNotSatisfied?: string[] | null;
}

// refs: 1 - tags: output, named, interface
export interface ReactionForComment {
  reaction?: ReactionValueFormats | null;
  reactionUsers?: string[] | null;
  reactionsFromDeletedUsersCount?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface ReactionValueFormats {
  emoji?: string | null;
  shortCode?: string | null;
  unicode?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface CommentsForComparedCommit {
  repositoryName?: string | null;
  beforeCommitId?: string | null;
  afterCommitId?: string | null;
  beforeBlobId?: string | null;
  afterBlobId?: string | null;
  location?: Location | null;
  comments?: Comment[] | null;
}

// refs: 1 - tags: output, named, interface
export interface CommentsForPullRequest {
  pullRequestId?: string | null;
  repositoryName?: string | null;
  beforeCommitId?: string | null;
  afterCommitId?: string | null;
  beforeBlobId?: string | null;
  afterBlobId?: string | null;
  location?: Location | null;
  comments?: Comment[] | null;
}

// refs: 1 - tags: output, named, interface
export interface Difference {
  beforeBlob?: BlobMetadata | null;
  afterBlob?: BlobMetadata | null;
  changeType?: ChangeTypeEnum | null;
}

// refs: 2 - tags: output, named, interface
export interface BlobMetadata {
  blobId?: string | null;
  path?: string | null;
  mode?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Folder {
  treeId?: string | null;
  absolutePath?: string | null;
  relativePath?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface File {
  blobId?: string | null;
  absolutePath?: string | null;
  relativePath?: string | null;
  fileMode?: FileModeTypeEnum | null;
}

// refs: 1 - tags: output, named, interface
export interface SymbolicLink {
  blobId?: string | null;
  absolutePath?: string | null;
  relativePath?: string | null;
  fileMode?: FileModeTypeEnum | null;
}

// refs: 1 - tags: output, named, interface
export interface SubModule {
  commitId?: string | null;
  absolutePath?: string | null;
  relativePath?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Approval {
  userArn?: string | null;
  approvalState?: ApprovalState | null;
}

// refs: 1 - tags: output, named, interface
export interface RepositoryNameIdPair {
  repositoryName?: string | null;
  repositoryId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface RepositoryTriggerExecutionFailure {
  trigger?: string | null;
  failureMessage?: string | null;
}
