// Autogenerated API structures for: Amazon GameLift

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface AcceptMatchInput {
  TicketId: string;
  PlayerIds: string[];
  AcceptanceType: AcceptanceType;
}

// refs: 1 - tags: named, input
export interface ClaimGameServerInput {
  GameServerGroupName: string;
  GameServerId?: string | null;
  GameServerData?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateAliasInput {
  Name: string;
  Description?: string | null;
  RoutingStrategy: RoutingStrategy;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateBuildInput {
  Name?: string | null;
  Version?: string | null;
  StorageLocation?: S3Location | null;
  OperatingSystem?: OperatingSystem | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateFleetInput {
  Name: string;
  Description?: string | null;
  BuildId?: string | null;
  ScriptId?: string | null;
  ServerLaunchPath?: string | null;
  ServerLaunchParameters?: string | null;
  LogPaths?: string[] | null;
  EC2InstanceType: EC2InstanceType;
  EC2InboundPermissions?: IpPermission[] | null;
  NewGameSessionProtectionPolicy?: ProtectionPolicy | null;
  RuntimeConfiguration?: RuntimeConfiguration | null;
  ResourceCreationLimitPolicy?: ResourceCreationLimitPolicy | null;
  MetricGroups?: string[] | null;
  PeerVpcAwsAccountId?: string | null;
  PeerVpcId?: string | null;
  FleetType?: FleetType | null;
  InstanceRoleArn?: string | null;
  CertificateConfiguration?: CertificateConfiguration | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateGameServerGroupInput {
  GameServerGroupName: string;
  RoleArn: string;
  MinSize: number;
  MaxSize: number;
  LaunchTemplate: LaunchTemplateSpecification;
  InstanceDefinitions: InstanceDefinition[];
  AutoScalingPolicy?: GameServerGroupAutoScalingPolicy | null;
  BalancingStrategy?: BalancingStrategy | null;
  GameServerProtectionPolicy?: GameServerProtectionPolicy | null;
  VpcSubnets?: string[] | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateGameSessionInput {
  FleetId?: string | null;
  AliasId?: string | null;
  MaximumPlayerSessionCount: number;
  Name?: string | null;
  GameProperties?: GameProperty[] | null;
  CreatorId?: string | null;
  GameSessionId?: string | null;
  IdempotencyToken?: string | null;
  GameSessionData?: string | null;
}

// refs: 1 - tags: named, input
export interface CreateGameSessionQueueInput {
  Name: string;
  TimeoutInSeconds?: number | null;
  PlayerLatencyPolicies?: PlayerLatencyPolicy[] | null;
  Destinations?: GameSessionQueueDestination[] | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateMatchmakingConfigurationInput {
  Name: string;
  Description?: string | null;
  GameSessionQueueArns?: string[] | null;
  RequestTimeoutSeconds: number;
  AcceptanceTimeoutSeconds?: number | null;
  AcceptanceRequired: boolean;
  RuleSetName: string;
  NotificationTarget?: string | null;
  AdditionalPlayerCount?: number | null;
  CustomEventData?: string | null;
  GameProperties?: GameProperty[] | null;
  GameSessionData?: string | null;
  BackfillMode?: BackfillMode | null;
  FlexMatchMode?: FlexMatchMode | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateMatchmakingRuleSetInput {
  Name: string;
  RuleSetBody: string;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreatePlayerSessionInput {
  GameSessionId: string;
  PlayerId: string;
  PlayerData?: string | null;
}

// refs: 1 - tags: named, input
export interface CreatePlayerSessionsInput {
  GameSessionId: string;
  PlayerIds: string[];
  PlayerDataMap?: { [key: string]: string | null | undefined } | null;
}

// refs: 1 - tags: named, input
export interface CreateScriptInput {
  Name?: string | null;
  Version?: string | null;
  StorageLocation?: S3Location | null;
  ZipFile?: Uint8Array | string | null;
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateVpcPeeringAuthorizationInput {
  GameLiftAwsAccountId: string;
  PeerVpcId: string;
}

// refs: 1 - tags: named, input
export interface CreateVpcPeeringConnectionInput {
  FleetId: string;
  PeerVpcAwsAccountId: string;
  PeerVpcId: string;
}

// refs: 1 - tags: named, input
export interface DeleteAliasInput {
  AliasId: string;
}

// refs: 1 - tags: named, input
export interface DeleteBuildInput {
  BuildId: string;
}

// refs: 1 - tags: named, input
export interface DeleteFleetInput {
  FleetId: string;
}

// refs: 1 - tags: named, input
export interface DeleteGameServerGroupInput {
  GameServerGroupName: string;
  DeleteOption?: GameServerGroupDeleteOption | null;
}

// refs: 1 - tags: named, input
export interface DeleteGameSessionQueueInput {
  Name: string;
}

// refs: 1 - tags: named, input
export interface DeleteMatchmakingConfigurationInput {
  Name: string;
}

// refs: 1 - tags: named, input
export interface DeleteMatchmakingRuleSetInput {
  Name: string;
}

// refs: 1 - tags: named, input
export interface DeleteScalingPolicyInput {
  Name: string;
  FleetId: string;
}

// refs: 1 - tags: named, input
export interface DeleteScriptInput {
  ScriptId: string;
}

// refs: 1 - tags: named, input
export interface DeleteVpcPeeringAuthorizationInput {
  GameLiftAwsAccountId: string;
  PeerVpcId: string;
}

// refs: 1 - tags: named, input
export interface DeleteVpcPeeringConnectionInput {
  FleetId: string;
  VpcPeeringConnectionId: string;
}

// refs: 1 - tags: named, input
export interface DeregisterGameServerInput {
  GameServerGroupName: string;
  GameServerId: string;
}

// refs: 1 - tags: named, input
export interface DescribeAliasInput {
  AliasId: string;
}

// refs: 1 - tags: named, input
export interface DescribeBuildInput {
  BuildId: string;
}

// refs: 1 - tags: named, input
export interface DescribeEC2InstanceLimitsInput {
  EC2InstanceType?: EC2InstanceType | null;
}

// refs: 1 - tags: named, input
export interface DescribeFleetAttributesInput {
  FleetIds?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeFleetCapacityInput {
  FleetIds?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeFleetEventsInput {
  FleetId: string;
  StartTime?: Date | number | null;
  EndTime?: Date | number | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeFleetPortSettingsInput {
  FleetId: string;
}

// refs: 1 - tags: named, input
export interface DescribeFleetUtilizationInput {
  FleetIds?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeGameServerInput {
  GameServerGroupName: string;
  GameServerId: string;
}

// refs: 1 - tags: named, input
export interface DescribeGameServerGroupInput {
  GameServerGroupName: string;
}

// refs: 1 - tags: named, input
export interface DescribeGameServerInstancesInput {
  GameServerGroupName: string;
  InstanceIds?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeGameSessionDetailsInput {
  FleetId?: string | null;
  GameSessionId?: string | null;
  AliasId?: string | null;
  StatusFilter?: string | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeGameSessionPlacementInput {
  PlacementId: string;
}

// refs: 1 - tags: named, input
export interface DescribeGameSessionQueuesInput {
  Names?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeGameSessionsInput {
  FleetId?: string | null;
  GameSessionId?: string | null;
  AliasId?: string | null;
  StatusFilter?: string | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeInstancesInput {
  FleetId: string;
  InstanceId?: string | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeMatchmakingInput {
  TicketIds: string[];
}

// refs: 1 - tags: named, input
export interface DescribeMatchmakingConfigurationsInput {
  Names?: string[] | null;
  RuleSetName?: string | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeMatchmakingRuleSetsInput {
  Names?: string[] | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribePlayerSessionsInput {
  GameSessionId?: string | null;
  PlayerId?: string | null;
  PlayerSessionId?: string | null;
  PlayerSessionStatusFilter?: string | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeRuntimeConfigurationInput {
  FleetId: string;
}

// refs: 1 - tags: named, input
export interface DescribeScalingPoliciesInput {
  FleetId: string;
  StatusFilter?: ScalingStatusType | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeScriptInput {
  ScriptId: string;
}

// refs: 1 - tags: named, input
export interface DescribeVpcPeeringAuthorizationsInput {
}

// refs: 1 - tags: named, input
export interface DescribeVpcPeeringConnectionsInput {
  FleetId?: string | null;
}

// refs: 1 - tags: named, input
export interface GetGameSessionLogUrlInput {
  GameSessionId: string;
}

// refs: 1 - tags: named, input
export interface GetInstanceAccessInput {
  FleetId: string;
  InstanceId: string;
}

// refs: 1 - tags: named, input
export interface ListAliasesInput {
  RoutingStrategyType?: RoutingStrategyType | null;
  Name?: string | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListBuildsInput {
  Status?: BuildStatus | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListFleetsInput {
  BuildId?: string | null;
  ScriptId?: string | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListGameServerGroupsInput {
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListGameServersInput {
  GameServerGroupName: string;
  SortOrder?: SortOrder | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListScriptsInput {
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  ResourceARN: string;
}

// refs: 1 - tags: named, input
export interface PutScalingPolicyInput {
  Name: string;
  FleetId: string;
  ScalingAdjustment?: number | null;
  ScalingAdjustmentType?: ScalingAdjustmentType | null;
  Threshold?: number | null;
  ComparisonOperator?: ComparisonOperatorType | null;
  EvaluationPeriods?: number | null;
  MetricName: MetricName;
  PolicyType?: PolicyType | null;
  TargetConfiguration?: TargetConfiguration | null;
}

// refs: 1 - tags: named, input
export interface RegisterGameServerInput {
  GameServerGroupName: string;
  GameServerId: string;
  InstanceId: string;
  ConnectionInfo?: string | null;
  GameServerData?: string | null;
}

// refs: 1 - tags: named, input
export interface RequestUploadCredentialsInput {
  BuildId: string;
}

// refs: 1 - tags: named, input
export interface ResolveAliasInput {
  AliasId: string;
}

// refs: 1 - tags: named, input
export interface ResumeGameServerGroupInput {
  GameServerGroupName: string;
  ResumeActions: GameServerGroupAction[];
}

// refs: 1 - tags: named, input
export interface SearchGameSessionsInput {
  FleetId?: string | null;
  AliasId?: string | null;
  FilterExpression?: string | null;
  SortExpression?: string | null;
  Limit?: number | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface StartFleetActionsInput {
  FleetId: string;
  Actions: FleetAction[];
}

// refs: 1 - tags: named, input
export interface StartGameSessionPlacementInput {
  PlacementId: string;
  GameSessionQueueName: string;
  GameProperties?: GameProperty[] | null;
  MaximumPlayerSessionCount: number;
  GameSessionName?: string | null;
  PlayerLatencies?: PlayerLatency[] | null;
  DesiredPlayerSessions?: DesiredPlayerSession[] | null;
  GameSessionData?: string | null;
}

// refs: 1 - tags: named, input
export interface StartMatchBackfillInput {
  TicketId?: string | null;
  ConfigurationName: string;
  GameSessionArn?: string | null;
  Players: Player[];
}

// refs: 1 - tags: named, input
export interface StartMatchmakingInput {
  TicketId?: string | null;
  ConfigurationName: string;
  Players: Player[];
}

// refs: 1 - tags: named, input
export interface StopFleetActionsInput {
  FleetId: string;
  Actions: FleetAction[];
}

// refs: 1 - tags: named, input
export interface StopGameSessionPlacementInput {
  PlacementId: string;
}

// refs: 1 - tags: named, input
export interface StopMatchmakingInput {
  TicketId: string;
}

// refs: 1 - tags: named, input
export interface SuspendGameServerGroupInput {
  GameServerGroupName: string;
  SuspendActions: GameServerGroupAction[];
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  ResourceARN: string;
  Tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  ResourceARN: string;
  TagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateAliasInput {
  AliasId: string;
  Name?: string | null;
  Description?: string | null;
  RoutingStrategy?: RoutingStrategy | null;
}

// refs: 1 - tags: named, input
export interface UpdateBuildInput {
  BuildId: string;
  Name?: string | null;
  Version?: string | null;
}

// refs: 1 - tags: named, input
export interface UpdateFleetAttributesInput {
  FleetId: string;
  Name?: string | null;
  Description?: string | null;
  NewGameSessionProtectionPolicy?: ProtectionPolicy | null;
  ResourceCreationLimitPolicy?: ResourceCreationLimitPolicy | null;
  MetricGroups?: string[] | null;
}

// refs: 1 - tags: named, input
export interface UpdateFleetCapacityInput {
  FleetId: string;
  DesiredInstances?: number | null;
  MinSize?: number | null;
  MaxSize?: number | null;
}

// refs: 1 - tags: named, input
export interface UpdateFleetPortSettingsInput {
  FleetId: string;
  InboundPermissionAuthorizations?: IpPermission[] | null;
  InboundPermissionRevocations?: IpPermission[] | null;
}

// refs: 1 - tags: named, input
export interface UpdateGameServerInput {
  GameServerGroupName: string;
  GameServerId: string;
  GameServerData?: string | null;
  UtilizationStatus?: GameServerUtilizationStatus | null;
  HealthCheck?: GameServerHealthCheck | null;
}

// refs: 1 - tags: named, input
export interface UpdateGameServerGroupInput {
  GameServerGroupName: string;
  RoleArn?: string | null;
  InstanceDefinitions?: InstanceDefinition[] | null;
  GameServerProtectionPolicy?: GameServerProtectionPolicy | null;
  BalancingStrategy?: BalancingStrategy | null;
}

// refs: 1 - tags: named, input
export interface UpdateGameSessionInput {
  GameSessionId: string;
  MaximumPlayerSessionCount?: number | null;
  Name?: string | null;
  PlayerSessionCreationPolicy?: PlayerSessionCreationPolicy | null;
  ProtectionPolicy?: ProtectionPolicy | null;
}

// refs: 1 - tags: named, input
export interface UpdateGameSessionQueueInput {
  Name: string;
  TimeoutInSeconds?: number | null;
  PlayerLatencyPolicies?: PlayerLatencyPolicy[] | null;
  Destinations?: GameSessionQueueDestination[] | null;
}

// refs: 1 - tags: named, input
export interface UpdateMatchmakingConfigurationInput {
  Name: string;
  Description?: string | null;
  GameSessionQueueArns?: string[] | null;
  RequestTimeoutSeconds?: number | null;
  AcceptanceTimeoutSeconds?: number | null;
  AcceptanceRequired?: boolean | null;
  RuleSetName?: string | null;
  NotificationTarget?: string | null;
  AdditionalPlayerCount?: number | null;
  CustomEventData?: string | null;
  GameProperties?: GameProperty[] | null;
  GameSessionData?: string | null;
  BackfillMode?: BackfillMode | null;
  FlexMatchMode?: FlexMatchMode | null;
}

// refs: 1 - tags: named, input
export interface UpdateRuntimeConfigurationInput {
  FleetId: string;
  RuntimeConfiguration: RuntimeConfiguration;
}

// refs: 1 - tags: named, input
export interface UpdateScriptInput {
  ScriptId: string;
  Name?: string | null;
  Version?: string | null;
  StorageLocation?: S3Location | null;
  ZipFile?: Uint8Array | string | null;
}

// refs: 1 - tags: named, input
export interface ValidateMatchmakingRuleSetInput {
  RuleSetBody: string;
}

// refs: 1 - tags: named, output
export interface AcceptMatchOutput {
}

// refs: 1 - tags: named, output
export interface ClaimGameServerOutput {
  GameServer?: GameServer | null;
}

// refs: 1 - tags: named, output
export interface CreateAliasOutput {
  Alias?: Alias | null;
}

// refs: 1 - tags: named, output
export interface CreateBuildOutput {
  Build?: Build | null;
  UploadCredentials?: AwsCredentials | null;
  StorageLocation?: S3Location | null;
}

// refs: 1 - tags: named, output
export interface CreateFleetOutput {
  FleetAttributes?: FleetAttributes | null;
}

// refs: 1 - tags: named, output
export interface CreateGameServerGroupOutput {
  GameServerGroup?: GameServerGroup | null;
}

// refs: 1 - tags: named, output
export interface CreateGameSessionOutput {
  GameSession?: GameSession | null;
}

// refs: 1 - tags: named, output
export interface CreateGameSessionQueueOutput {
  GameSessionQueue?: GameSessionQueue | null;
}

// refs: 1 - tags: named, output
export interface CreateMatchmakingConfigurationOutput {
  Configuration?: MatchmakingConfiguration | null;
}

// refs: 1 - tags: named, output
export interface CreateMatchmakingRuleSetOutput {
  RuleSet: MatchmakingRuleSet;
}

// refs: 1 - tags: named, output
export interface CreatePlayerSessionOutput {
  PlayerSession?: PlayerSession | null;
}

// refs: 1 - tags: named, output
export interface CreatePlayerSessionsOutput {
  PlayerSessions?: PlayerSession[] | null;
}

// refs: 1 - tags: named, output
export interface CreateScriptOutput {
  Script?: Script | null;
}

// refs: 1 - tags: named, output
export interface CreateVpcPeeringAuthorizationOutput {
  VpcPeeringAuthorization?: VpcPeeringAuthorization | null;
}

// refs: 1 - tags: named, output
export interface CreateVpcPeeringConnectionOutput {
}

// refs: 1 - tags: named, output
export interface DeleteGameServerGroupOutput {
  GameServerGroup?: GameServerGroup | null;
}

// refs: 1 - tags: named, output
export interface DeleteGameSessionQueueOutput {
}

// refs: 1 - tags: named, output
export interface DeleteMatchmakingConfigurationOutput {
}

// refs: 1 - tags: named, output
export interface DeleteMatchmakingRuleSetOutput {
}

// refs: 1 - tags: named, output
export interface DeleteVpcPeeringAuthorizationOutput {
}

// refs: 1 - tags: named, output
export interface DeleteVpcPeeringConnectionOutput {
}

// refs: 1 - tags: named, output
export interface DescribeAliasOutput {
  Alias?: Alias | null;
}

// refs: 1 - tags: named, output
export interface DescribeBuildOutput {
  Build?: Build | null;
}

// refs: 1 - tags: named, output
export interface DescribeEC2InstanceLimitsOutput {
  EC2InstanceLimits?: EC2InstanceLimit[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeFleetAttributesOutput {
  FleetAttributes?: FleetAttributes[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeFleetCapacityOutput {
  FleetCapacity?: FleetCapacity[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeFleetEventsOutput {
  Events?: Event[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeFleetPortSettingsOutput {
  InboundPermissions?: IpPermission[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeFleetUtilizationOutput {
  FleetUtilization?: FleetUtilization[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeGameServerOutput {
  GameServer?: GameServer | null;
}

// refs: 1 - tags: named, output
export interface DescribeGameServerGroupOutput {
  GameServerGroup?: GameServerGroup | null;
}

// refs: 1 - tags: named, output
export interface DescribeGameServerInstancesOutput {
  GameServerInstances?: GameServerInstance[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeGameSessionDetailsOutput {
  GameSessionDetails?: GameSessionDetail[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeGameSessionPlacementOutput {
  GameSessionPlacement?: GameSessionPlacement | null;
}

// refs: 1 - tags: named, output
export interface DescribeGameSessionQueuesOutput {
  GameSessionQueues?: GameSessionQueue[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeGameSessionsOutput {
  GameSessions?: GameSession[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeInstancesOutput {
  Instances?: Instance[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeMatchmakingOutput {
  TicketList?: MatchmakingTicket[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeMatchmakingConfigurationsOutput {
  Configurations?: MatchmakingConfiguration[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeMatchmakingRuleSetsOutput {
  RuleSets: MatchmakingRuleSet[];
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribePlayerSessionsOutput {
  PlayerSessions?: PlayerSession[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeRuntimeConfigurationOutput {
  RuntimeConfiguration?: RuntimeConfiguration | null;
}

// refs: 1 - tags: named, output
export interface DescribeScalingPoliciesOutput {
  ScalingPolicies?: ScalingPolicy[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeScriptOutput {
  Script?: Script | null;
}

// refs: 1 - tags: named, output
export interface DescribeVpcPeeringAuthorizationsOutput {
  VpcPeeringAuthorizations?: VpcPeeringAuthorization[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeVpcPeeringConnectionsOutput {
  VpcPeeringConnections?: VpcPeeringConnection[] | null;
}

// refs: 1 - tags: named, output
export interface GetGameSessionLogUrlOutput {
  PreSignedUrl?: string | null;
}

// refs: 1 - tags: named, output
export interface GetInstanceAccessOutput {
  InstanceAccess?: InstanceAccess | null;
}

// refs: 1 - tags: named, output
export interface ListAliasesOutput {
  Aliases?: Alias[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListBuildsOutput {
  Builds?: Build[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListFleetsOutput {
  FleetIds?: string[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListGameServerGroupsOutput {
  GameServerGroups?: GameServerGroup[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListGameServersOutput {
  GameServers?: GameServer[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListScriptsOutput {
  Scripts?: Script[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  Tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface PutScalingPolicyOutput {
  Name?: string | null;
}

// refs: 1 - tags: named, output
export interface RegisterGameServerOutput {
  GameServer?: GameServer | null;
}

// refs: 1 - tags: named, output
export interface RequestUploadCredentialsOutput {
  UploadCredentials?: AwsCredentials | null;
  StorageLocation?: S3Location | null;
}

// refs: 1 - tags: named, output
export interface ResolveAliasOutput {
  FleetId?: string | null;
  FleetArn?: string | null;
}

// refs: 1 - tags: named, output
export interface ResumeGameServerGroupOutput {
  GameServerGroup?: GameServerGroup | null;
}

// refs: 1 - tags: named, output
export interface SearchGameSessionsOutput {
  GameSessions?: GameSession[] | null;
  NextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface StartFleetActionsOutput {
}

// refs: 1 - tags: named, output
export interface StartGameSessionPlacementOutput {
  GameSessionPlacement?: GameSessionPlacement | null;
}

// refs: 1 - tags: named, output
export interface StartMatchBackfillOutput {
  MatchmakingTicket?: MatchmakingTicket | null;
}

// refs: 1 - tags: named, output
export interface StartMatchmakingOutput {
  MatchmakingTicket?: MatchmakingTicket | null;
}

// refs: 1 - tags: named, output
export interface StopFleetActionsOutput {
}

// refs: 1 - tags: named, output
export interface StopGameSessionPlacementOutput {
  GameSessionPlacement?: GameSessionPlacement | null;
}

// refs: 1 - tags: named, output
export interface StopMatchmakingOutput {
}

// refs: 1 - tags: named, output
export interface SuspendGameServerGroupOutput {
  GameServerGroup?: GameServerGroup | null;
}

// refs: 1 - tags: named, output
export interface TagResourceResponse {
}

// refs: 1 - tags: named, output
export interface UntagResourceResponse {
}

// refs: 1 - tags: named, output
export interface UpdateAliasOutput {
  Alias?: Alias | null;
}

// refs: 1 - tags: named, output
export interface UpdateBuildOutput {
  Build?: Build | null;
}

// refs: 1 - tags: named, output
export interface UpdateFleetAttributesOutput {
  FleetId?: string | null;
}

// refs: 1 - tags: named, output
export interface UpdateFleetCapacityOutput {
  FleetId?: string | null;
}

// refs: 1 - tags: named, output
export interface UpdateFleetPortSettingsOutput {
  FleetId?: string | null;
}

// refs: 1 - tags: named, output
export interface UpdateGameServerOutput {
  GameServer?: GameServer | null;
}

// refs: 1 - tags: named, output
export interface UpdateGameServerGroupOutput {
  GameServerGroup?: GameServerGroup | null;
}

// refs: 1 - tags: named, output
export interface UpdateGameSessionOutput {
  GameSession?: GameSession | null;
}

// refs: 1 - tags: named, output
export interface UpdateGameSessionQueueOutput {
  GameSessionQueue?: GameSessionQueue | null;
}

// refs: 1 - tags: named, output
export interface UpdateMatchmakingConfigurationOutput {
  Configuration?: MatchmakingConfiguration | null;
}

// refs: 1 - tags: named, output
export interface UpdateRuntimeConfigurationOutput {
  RuntimeConfiguration?: RuntimeConfiguration | null;
}

// refs: 1 - tags: named, output
export interface UpdateScriptOutput {
  Script?: Script | null;
}

// refs: 1 - tags: named, output
export interface ValidateMatchmakingRuleSetOutput {
  Valid?: boolean | null;
}

// refs: 1 - tags: input, named, enum
export type AcceptanceType =
| "ACCEPT"
| "REJECT"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, interface, output
export interface RoutingStrategy {
  Type?: RoutingStrategyType | null;
  FleetId?: string | null;
  Message?: string | null;
}

// refs: 7 - tags: input, named, enum, output
export type RoutingStrategyType =
| "SIMPLE"
| "TERMINAL"
| cmnP.UnexpectedEnumValue;

// refs: 10 - tags: input, named, interface, output
export interface Tag {
  Key: string;
  Value: string;
}

// refs: 9 - tags: input, named, interface, output
export interface S3Location {
  Bucket?: string | null;
  Key?: string | null;
  RoleArn?: string | null;
  ObjectVersion?: string | null;
}

// refs: 9 - tags: input, named, enum, output
export type OperatingSystem =
| "WINDOWS_2012"
| "AMAZON_LINUX"
| "AMAZON_LINUX_2"
| cmnP.UnexpectedEnumValue;

// refs: 7 - tags: input, named, enum, output
export type EC2InstanceType =
| "t2.micro"
| "t2.small"
| "t2.medium"
| "t2.large"
| "c3.large"
| "c3.xlarge"
| "c3.2xlarge"
| "c3.4xlarge"
| "c3.8xlarge"
| "c4.large"
| "c4.xlarge"
| "c4.2xlarge"
| "c4.4xlarge"
| "c4.8xlarge"
| "c5.large"
| "c5.xlarge"
| "c5.2xlarge"
| "c5.4xlarge"
| "c5.9xlarge"
| "c5.12xlarge"
| "c5.18xlarge"
| "c5.24xlarge"
| "c5a.large"
| "c5a.xlarge"
| "c5a.2xlarge"
| "c5a.4xlarge"
| "c5a.8xlarge"
| "c5a.12xlarge"
| "c5a.16xlarge"
| "c5a.24xlarge"
| "r3.large"
| "r3.xlarge"
| "r3.2xlarge"
| "r3.4xlarge"
| "r3.8xlarge"
| "r4.large"
| "r4.xlarge"
| "r4.2xlarge"
| "r4.4xlarge"
| "r4.8xlarge"
| "r4.16xlarge"
| "r5.large"
| "r5.xlarge"
| "r5.2xlarge"
| "r5.4xlarge"
| "r5.8xlarge"
| "r5.12xlarge"
| "r5.16xlarge"
| "r5.24xlarge"
| "r5a.large"
| "r5a.xlarge"
| "r5a.2xlarge"
| "r5a.4xlarge"
| "r5a.8xlarge"
| "r5a.12xlarge"
| "r5a.16xlarge"
| "r5a.24xlarge"
| "m3.medium"
| "m3.large"
| "m3.xlarge"
| "m3.2xlarge"
| "m4.large"
| "m4.xlarge"
| "m4.2xlarge"
| "m4.4xlarge"
| "m4.10xlarge"
| "m5.large"
| "m5.xlarge"
| "m5.2xlarge"
| "m5.4xlarge"
| "m5.8xlarge"
| "m5.12xlarge"
| "m5.16xlarge"
| "m5.24xlarge"
| "m5a.large"
| "m5a.xlarge"
| "m5a.2xlarge"
| "m5a.4xlarge"
| "m5a.8xlarge"
| "m5a.12xlarge"
| "m5a.16xlarge"
| "m5a.24xlarge"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface IpPermission {
  FromPort: number;
  ToPort: number;
  IpRange: string;
  Protocol: IpProtocol;
}

// refs: 4 - tags: input, named, enum, output
export type IpProtocol =
| "TCP"
| "UDP"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type ProtectionPolicy =
| "NoProtection"
| "FullProtection"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface RuntimeConfiguration {
  ServerProcesses?: ServerProcess[] | null;
  MaxConcurrentGameSessionActivations?: number | null;
  GameSessionActivationTimeoutSeconds?: number | null;
}

// refs: 4 - tags: input, named, interface, output
export interface ServerProcess {
  LaunchPath: string;
  Parameters?: string | null;
  ConcurrentExecutions: number;
}

// refs: 4 - tags: input, named, interface, output
export interface ResourceCreationLimitPolicy {
  NewGameSessionsPerCreator?: number | null;
  PolicyPeriodInMinutes?: number | null;
}

// refs: 3 - tags: input, named, enum, output
export type FleetType =
| "ON_DEMAND"
| "SPOT"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: input, named, interface, output
export interface CertificateConfiguration {
  CertificateType: CertificateType;
}

// refs: 3 - tags: input, named, enum, output
export type CertificateType =
| "DISABLED"
| "GENERATED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface LaunchTemplateSpecification {
  LaunchTemplateId?: string | null;
  LaunchTemplateName?: string | null;
  Version?: string | null;
}

// refs: 9 - tags: input, named, interface, output
export interface InstanceDefinition {
  InstanceType: GameServerGroupInstanceType;
  WeightedCapacity?: string | null;
}

// refs: 9 - tags: input, named, enum, output
export type GameServerGroupInstanceType =
| "c4.large"
| "c4.xlarge"
| "c4.2xlarge"
| "c4.4xlarge"
| "c4.8xlarge"
| "c5.large"
| "c5.xlarge"
| "c5.2xlarge"
| "c5.4xlarge"
| "c5.9xlarge"
| "c5.12xlarge"
| "c5.18xlarge"
| "c5.24xlarge"
| "r4.large"
| "r4.xlarge"
| "r4.2xlarge"
| "r4.4xlarge"
| "r4.8xlarge"
| "r4.16xlarge"
| "r5.large"
| "r5.xlarge"
| "r5.2xlarge"
| "r5.4xlarge"
| "r5.8xlarge"
| "r5.12xlarge"
| "r5.16xlarge"
| "r5.24xlarge"
| "m4.large"
| "m4.xlarge"
| "m4.2xlarge"
| "m4.4xlarge"
| "m4.10xlarge"
| "m5.large"
| "m5.xlarge"
| "m5.2xlarge"
| "m5.4xlarge"
| "m5.8xlarge"
| "m5.12xlarge"
| "m5.16xlarge"
| "m5.24xlarge"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface GameServerGroupAutoScalingPolicy {
  EstimatedInstanceWarmup?: number | null;
  TargetTrackingConfiguration: TargetTrackingConfiguration;
}

// refs: 1 - tags: input, named, interface
export interface TargetTrackingConfiguration {
  TargetValue: number;
}

// refs: 9 - tags: input, named, enum, output
export type BalancingStrategy =
| "SPOT_ONLY"
| "SPOT_PREFERRED"
| "ON_DEMAND_ONLY"
| cmnP.UnexpectedEnumValue;

// refs: 9 - tags: input, named, enum, output
export type GameServerProtectionPolicy =
| "NO_PROTECTION"
| "FULL_PROTECTION"
| cmnP.UnexpectedEnumValue;

// refs: 15 - tags: input, named, interface, output
export interface GameProperty {
  Key: string;
  Value: string;
}

// refs: 5 - tags: input, named, interface, output
export interface PlayerLatencyPolicy {
  MaximumIndividualPlayerLatencyMilliseconds?: number | null;
  PolicyDurationSeconds?: number | null;
}

// refs: 5 - tags: input, named, interface, output
export interface GameSessionQueueDestination {
  DestinationArn?: string | null;
}

// refs: 5 - tags: input, named, enum, output
export type BackfillMode =
| "AUTOMATIC"
| "MANUAL"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, enum, output
export type FlexMatchMode =
| "STANDALONE"
| "WITH_QUEUE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type GameServerGroupDeleteOption =
| "SAFE_DELETE"
| "FORCE_DELETE"
| "RETAIN"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type ScalingStatusType =
| "ACTIVE"
| "UPDATE_REQUESTED"
| "UPDATING"
| "DELETE_REQUESTED"
| "DELETING"
| "DELETED"
| "ERROR"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, enum, output
export type BuildStatus =
| "INITIALIZED"
| "READY"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type SortOrder =
| "ASCENDING"
| "DESCENDING"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type ScalingAdjustmentType =
| "ChangeInCapacity"
| "ExactCapacity"
| "PercentChangeInCapacity"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type ComparisonOperatorType =
| "GreaterThanOrEqualToThreshold"
| "GreaterThanThreshold"
| "LessThanThreshold"
| "LessThanOrEqualToThreshold"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type MetricName =
| "ActivatingGameSessions"
| "ActiveGameSessions"
| "ActiveInstances"
| "AvailableGameSessions"
| "AvailablePlayerSessions"
| "CurrentPlayerSessions"
| "IdleInstances"
| "PercentAvailableGameSessions"
| "PercentIdleInstances"
| "QueueDepth"
| "WaitTime"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum, output
export type PolicyType =
| "RuleBased"
| "TargetBased"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, interface, output
export interface TargetConfiguration {
  TargetValue: number;
}

// refs: 9 - tags: input, named, enum, output
export type GameServerGroupAction =
| "REPLACE_INSTANCE_TYPES"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type FleetAction =
| "AUTO_SCALING"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface PlayerLatency {
  PlayerId?: string | null;
  RegionIdentifier?: string | null;
  LatencyInMilliseconds?: number | null;
}

// refs: 1 - tags: input, named, interface
export interface DesiredPlayerSession {
  PlayerId?: string | null;
  PlayerData?: string | null;
}

// refs: 5 - tags: input, named, interface, output
export interface Player {
  PlayerId?: string | null;
  PlayerAttributes?: { [key: string]: AttributeValue | null | undefined } | null;
  Team?: string | null;
  LatencyInMs?: { [key: string]: number | null | undefined } | null;
}

// refs: 5 - tags: input, named, interface, output
export interface AttributeValue {
  S?: string | null;
  N?: number | null;
  SL?: string[] | null;
  SDM?: { [key: string]: number | null | undefined } | null;
}

// refs: 6 - tags: input, named, enum, output
export type GameServerUtilizationStatus =
| "AVAILABLE"
| "UTILIZED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type GameServerHealthCheck =
| "HEALTHY"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type PlayerSessionCreationPolicy =
| "ACCEPT_ALL"
| "DENY_ALL"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: output, named, interface
export interface GameServer {
  GameServerGroupName?: string | null;
  GameServerGroupArn?: string | null;
  GameServerId?: string | null;
  InstanceId?: string | null;
  ConnectionInfo?: string | null;
  GameServerData?: string | null;
  ClaimStatus?: GameServerClaimStatus | null;
  UtilizationStatus?: GameServerUtilizationStatus | null;
  RegistrationTime?: Date | number | null;
  LastClaimTime?: Date | number | null;
  LastHealthCheckTime?: Date | number | null;
}

// refs: 5 - tags: output, named, enum
export type GameServerClaimStatus =
| "CLAIMED"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface Alias {
  AliasId?: string | null;
  Name?: string | null;
  AliasArn?: string | null;
  Description?: string | null;
  RoutingStrategy?: RoutingStrategy | null;
  CreationTime?: Date | number | null;
  LastUpdatedTime?: Date | number | null;
}

// refs: 4 - tags: output, named, interface
export interface Build {
  BuildId?: string | null;
  BuildArn?: string | null;
  Name?: string | null;
  Version?: string | null;
  Status?: BuildStatus | null;
  SizeOnDisk?: number | null;
  OperatingSystem?: OperatingSystem | null;
  CreationTime?: Date | number | null;
}

// refs: 2 - tags: output, named, interface
export interface AwsCredentials {
  AccessKeyId?: string | null;
  SecretAccessKey?: string | null;
  SessionToken?: string | null;
}

// refs: 2 - tags: output, named, interface
export interface FleetAttributes {
  FleetId?: string | null;
  FleetArn?: string | null;
  FleetType?: FleetType | null;
  InstanceType?: EC2InstanceType | null;
  Description?: string | null;
  Name?: string | null;
  CreationTime?: Date | number | null;
  TerminationTime?: Date | number | null;
  Status?: FleetStatus | null;
  BuildId?: string | null;
  BuildArn?: string | null;
  ScriptId?: string | null;
  ScriptArn?: string | null;
  ServerLaunchPath?: string | null;
  ServerLaunchParameters?: string | null;
  LogPaths?: string[] | null;
  NewGameSessionProtectionPolicy?: ProtectionPolicy | null;
  OperatingSystem?: OperatingSystem | null;
  ResourceCreationLimitPolicy?: ResourceCreationLimitPolicy | null;
  MetricGroups?: string[] | null;
  StoppedActions?: FleetAction[] | null;
  InstanceRoleArn?: string | null;
  CertificateConfiguration?: CertificateConfiguration | null;
}

// refs: 2 - tags: output, named, enum
export type FleetStatus =
| "NEW"
| "DOWNLOADING"
| "VALIDATING"
| "BUILDING"
| "ACTIVATING"
| "ACTIVE"
| "DELETING"
| "ERROR"
| "TERMINATED"
| cmnP.UnexpectedEnumValue;

// refs: 7 - tags: output, named, interface
export interface GameServerGroup {
  GameServerGroupName?: string | null;
  GameServerGroupArn?: string | null;
  RoleArn?: string | null;
  InstanceDefinitions?: InstanceDefinition[] | null;
  BalancingStrategy?: BalancingStrategy | null;
  GameServerProtectionPolicy?: GameServerProtectionPolicy | null;
  AutoScalingGroupArn?: string | null;
  Status?: GameServerGroupStatus | null;
  StatusReason?: string | null;
  SuspendedActions?: GameServerGroupAction[] | null;
  CreationTime?: Date | number | null;
  LastUpdatedTime?: Date | number | null;
}

// refs: 7 - tags: output, named, enum
export type GameServerGroupStatus =
| "NEW"
| "ACTIVATING"
| "ACTIVE"
| "DELETE_SCHEDULED"
| "DELETING"
| "DELETED"
| "ERROR"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: output, named, interface
export interface GameSession {
  GameSessionId?: string | null;
  Name?: string | null;
  FleetId?: string | null;
  FleetArn?: string | null;
  CreationTime?: Date | number | null;
  TerminationTime?: Date | number | null;
  CurrentPlayerSessionCount?: number | null;
  MaximumPlayerSessionCount?: number | null;
  Status?: GameSessionStatus | null;
  StatusReason?: GameSessionStatusReason | null;
  GameProperties?: GameProperty[] | null;
  IpAddress?: string | null;
  DnsName?: string | null;
  Port?: number | null;
  PlayerSessionCreationPolicy?: PlayerSessionCreationPolicy | null;
  CreatorId?: string | null;
  GameSessionData?: string | null;
  MatchmakerData?: string | null;
}

// refs: 5 - tags: output, named, enum
export type GameSessionStatus =
| "ACTIVE"
| "ACTIVATING"
| "TERMINATED"
| "TERMINATING"
| "ERROR"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: output, named, enum
export type GameSessionStatusReason =
| "INTERRUPTED"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface GameSessionQueue {
  Name?: string | null;
  GameSessionQueueArn?: string | null;
  TimeoutInSeconds?: number | null;
  PlayerLatencyPolicies?: PlayerLatencyPolicy[] | null;
  Destinations?: GameSessionQueueDestination[] | null;
}

// refs: 3 - tags: output, named, interface
export interface MatchmakingConfiguration {
  Name?: string | null;
  ConfigurationArn?: string | null;
  Description?: string | null;
  GameSessionQueueArns?: string[] | null;
  RequestTimeoutSeconds?: number | null;
  AcceptanceTimeoutSeconds?: number | null;
  AcceptanceRequired?: boolean | null;
  RuleSetName?: string | null;
  RuleSetArn?: string | null;
  NotificationTarget?: string | null;
  AdditionalPlayerCount?: number | null;
  CustomEventData?: string | null;
  CreationTime?: Date | number | null;
  GameProperties?: GameProperty[] | null;
  GameSessionData?: string | null;
  BackfillMode?: BackfillMode | null;
  FlexMatchMode?: FlexMatchMode | null;
}

// refs: 2 - tags: output, named, interface
export interface MatchmakingRuleSet {
  RuleSetName?: string | null;
  RuleSetArn?: string | null;
  RuleSetBody: string;
  CreationTime?: Date | number | null;
}

// refs: 3 - tags: output, named, interface
export interface PlayerSession {
  PlayerSessionId?: string | null;
  PlayerId?: string | null;
  GameSessionId?: string | null;
  FleetId?: string | null;
  FleetArn?: string | null;
  CreationTime?: Date | number | null;
  TerminationTime?: Date | number | null;
  Status?: PlayerSessionStatus | null;
  IpAddress?: string | null;
  DnsName?: string | null;
  Port?: number | null;
  PlayerData?: string | null;
}

// refs: 3 - tags: output, named, enum
export type PlayerSessionStatus =
| "RESERVED"
| "ACTIVE"
| "COMPLETED"
| "TIMEDOUT"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface Script {
  ScriptId?: string | null;
  ScriptArn?: string | null;
  Name?: string | null;
  Version?: string | null;
  SizeOnDisk?: number | null;
  CreationTime?: Date | number | null;
  StorageLocation?: S3Location | null;
}

// refs: 2 - tags: output, named, interface
export interface VpcPeeringAuthorization {
  GameLiftAwsAccountId?: string | null;
  PeerVpcAwsAccountId?: string | null;
  PeerVpcId?: string | null;
  CreationTime?: Date | number | null;
  ExpirationTime?: Date | number | null;
}

// refs: 1 - tags: output, named, interface
export interface EC2InstanceLimit {
  EC2InstanceType?: EC2InstanceType | null;
  CurrentInstances?: number | null;
  InstanceLimit?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface FleetCapacity {
  FleetId?: string | null;
  InstanceType?: EC2InstanceType | null;
  InstanceCounts?: EC2InstanceCounts | null;
}

// refs: 1 - tags: output, named, interface
export interface EC2InstanceCounts {
  DESIRED?: number | null;
  MINIMUM?: number | null;
  MAXIMUM?: number | null;
  PENDING?: number | null;
  ACTIVE?: number | null;
  IDLE?: number | null;
  TERMINATING?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface Event {
  EventId?: string | null;
  ResourceId?: string | null;
  EventCode?: EventCode | null;
  Message?: string | null;
  EventTime?: Date | number | null;
  PreSignedLogUrl?: string | null;
}

// refs: 1 - tags: output, named, enum
export type EventCode =
| "GENERIC_EVENT"
| "FLEET_CREATED"
| "FLEET_DELETED"
| "FLEET_SCALING_EVENT"
| "FLEET_STATE_DOWNLOADING"
| "FLEET_STATE_VALIDATING"
| "FLEET_STATE_BUILDING"
| "FLEET_STATE_ACTIVATING"
| "FLEET_STATE_ACTIVE"
| "FLEET_STATE_ERROR"
| "FLEET_INITIALIZATION_FAILED"
| "FLEET_BINARY_DOWNLOAD_FAILED"
| "FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND"
| "FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE"
| "FLEET_VALIDATION_TIMED_OUT"
| "FLEET_ACTIVATION_FAILED"
| "FLEET_ACTIVATION_FAILED_NO_INSTANCES"
| "FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED"
| "SERVER_PROCESS_INVALID_PATH"
| "SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT"
| "SERVER_PROCESS_PROCESS_READY_TIMEOUT"
| "SERVER_PROCESS_CRASHED"
| "SERVER_PROCESS_TERMINATED_UNHEALTHY"
| "SERVER_PROCESS_FORCE_TERMINATED"
| "SERVER_PROCESS_PROCESS_EXIT_TIMEOUT"
| "GAME_SESSION_ACTIVATION_TIMEOUT"
| "FLEET_CREATION_EXTRACTING_BUILD"
| "FLEET_CREATION_RUNNING_INSTALLER"
| "FLEET_CREATION_VALIDATING_RUNTIME_CONFIG"
| "FLEET_VPC_PEERING_SUCCEEDED"
| "FLEET_VPC_PEERING_FAILED"
| "FLEET_VPC_PEERING_DELETED"
| "INSTANCE_INTERRUPTED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface FleetUtilization {
  FleetId?: string | null;
  ActiveServerProcessCount?: number | null;
  ActiveGameSessionCount?: number | null;
  CurrentPlayerSessionCount?: number | null;
  MaximumPlayerSessionCount?: number | null;
}

// refs: 1 - tags: output, named, interface
export interface GameServerInstance {
  GameServerGroupName?: string | null;
  GameServerGroupArn?: string | null;
  InstanceId?: string | null;
  InstanceStatus?: GameServerInstanceStatus | null;
}

// refs: 1 - tags: output, named, enum
export type GameServerInstanceStatus =
| "ACTIVE"
| "DRAINING"
| "SPOT_TERMINATING"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface GameSessionDetail {
  GameSession?: GameSession | null;
  ProtectionPolicy?: ProtectionPolicy | null;
}

// refs: 3 - tags: output, named, interface
export interface GameSessionPlacement {
  PlacementId?: string | null;
  GameSessionQueueName?: string | null;
  Status?: GameSessionPlacementState | null;
  GameProperties?: GameProperty[] | null;
  MaximumPlayerSessionCount?: number | null;
  GameSessionName?: string | null;
  GameSessionId?: string | null;
  GameSessionArn?: string | null;
  GameSessionRegion?: string | null;
  PlayerLatencies?: PlayerLatency[] | null;
  StartTime?: Date | number | null;
  EndTime?: Date | number | null;
  IpAddress?: string | null;
  DnsName?: string | null;
  Port?: number | null;
  PlacedPlayerSessions?: PlacedPlayerSession[] | null;
  GameSessionData?: string | null;
  MatchmakerData?: string | null;
}

// refs: 3 - tags: output, named, enum
export type GameSessionPlacementState =
| "PENDING"
| "FULFILLED"
| "CANCELLED"
| "TIMED_OUT"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface PlacedPlayerSession {
  PlayerId?: string | null;
  PlayerSessionId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface Instance {
  FleetId?: string | null;
  InstanceId?: string | null;
  IpAddress?: string | null;
  DnsName?: string | null;
  OperatingSystem?: OperatingSystem | null;
  Type?: EC2InstanceType | null;
  Status?: InstanceStatus | null;
  CreationTime?: Date | number | null;
}

// refs: 1 - tags: output, named, enum
export type InstanceStatus =
| "PENDING"
| "ACTIVE"
| "TERMINATING"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface MatchmakingTicket {
  TicketId?: string | null;
  ConfigurationName?: string | null;
  ConfigurationArn?: string | null;
  Status?: MatchmakingConfigurationStatus | null;
  StatusReason?: string | null;
  StatusMessage?: string | null;
  StartTime?: Date | number | null;
  EndTime?: Date | number | null;
  Players?: Player[] | null;
  GameSessionConnectionInfo?: GameSessionConnectionInfo | null;
  EstimatedWaitTime?: number | null;
}

// refs: 3 - tags: output, named, enum
export type MatchmakingConfigurationStatus =
| "CANCELLED"
| "COMPLETED"
| "FAILED"
| "PLACING"
| "QUEUED"
| "REQUIRES_ACCEPTANCE"
| "SEARCHING"
| "TIMED_OUT"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface GameSessionConnectionInfo {
  GameSessionArn?: string | null;
  IpAddress?: string | null;
  DnsName?: string | null;
  Port?: number | null;
  MatchedPlayerSessions?: MatchedPlayerSession[] | null;
}

// refs: 3 - tags: output, named, interface
export interface MatchedPlayerSession {
  PlayerId?: string | null;
  PlayerSessionId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface ScalingPolicy {
  FleetId?: string | null;
  Name?: string | null;
  Status?: ScalingStatusType | null;
  ScalingAdjustment?: number | null;
  ScalingAdjustmentType?: ScalingAdjustmentType | null;
  ComparisonOperator?: ComparisonOperatorType | null;
  Threshold?: number | null;
  EvaluationPeriods?: number | null;
  MetricName?: MetricName | null;
  PolicyType?: PolicyType | null;
  TargetConfiguration?: TargetConfiguration | null;
}

// refs: 1 - tags: output, named, interface
export interface VpcPeeringConnection {
  FleetId?: string | null;
  FleetArn?: string | null;
  IpV4CidrBlock?: string | null;
  VpcPeeringConnectionId?: string | null;
  Status?: VpcPeeringConnectionStatus | null;
  PeerVpcId?: string | null;
  GameLiftVpcId?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface VpcPeeringConnectionStatus {
  Code?: string | null;
  Message?: string | null;
}

// refs: 1 - tags: output, named, interface
export interface InstanceAccess {
  FleetId?: string | null;
  InstanceId?: string | null;
  IpAddress?: string | null;
  OperatingSystem?: OperatingSystem | null;
  Credentials?: InstanceCredentials | null;
}

// refs: 1 - tags: output, named, interface
export interface InstanceCredentials {
  UserName?: string | null;
  Secret?: string | null;
}
