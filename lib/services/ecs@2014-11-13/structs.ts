// Autogenerated API structures for: Amazon EC2 Container Service

import * as cmnP from "../../encoding/common.ts";

// refs: 1 - tags: named, input
export interface CreateCapacityProviderRequest {
  name: string;
  autoScalingGroupProvider: AutoScalingGroupProvider;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface CreateClusterRequest {
  clusterName?: string | null;
  tags?: Tag[] | null;
  settings?: ClusterSetting[] | null;
  configuration?: ClusterConfiguration | null;
  capacityProviders?: string[] | null;
  defaultCapacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
}

// refs: 1 - tags: named, input
export interface CreateServiceRequest {
  cluster?: string | null;
  serviceName: string;
  taskDefinition?: string | null;
  loadBalancers?: LoadBalancer[] | null;
  serviceRegistries?: ServiceRegistry[] | null;
  desiredCount?: number | null;
  clientToken?: string | null;
  launchType?: LaunchType | null;
  capacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
  platformVersion?: string | null;
  role?: string | null;
  deploymentConfiguration?: DeploymentConfiguration | null;
  placementConstraints?: PlacementConstraint[] | null;
  placementStrategy?: PlacementStrategy[] | null;
  networkConfiguration?: NetworkConfiguration | null;
  healthCheckGracePeriodSeconds?: number | null;
  schedulingStrategy?: SchedulingStrategy | null;
  deploymentController?: DeploymentController | null;
  tags?: Tag[] | null;
  enableECSManagedTags?: boolean | null;
  propagateTags?: PropagateTags | null;
  enableExecuteCommand?: boolean | null;
}

// refs: 1 - tags: named, input
export interface CreateTaskSetRequest {
  service: string;
  cluster: string;
  externalId?: string | null;
  taskDefinition: string;
  networkConfiguration?: NetworkConfiguration | null;
  loadBalancers?: LoadBalancer[] | null;
  serviceRegistries?: ServiceRegistry[] | null;
  launchType?: LaunchType | null;
  capacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
  platformVersion?: string | null;
  scale?: Scale | null;
  clientToken?: string | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface DeleteAccountSettingRequest {
  name: SettingName;
  principalArn?: string | null;
}

// refs: 1 - tags: named, input
export interface DeleteAttributesRequest {
  cluster?: string | null;
  attributes: Attribute[];
}

// refs: 1 - tags: named, input
export interface DeleteCapacityProviderRequest {
  capacityProvider: string;
}

// refs: 1 - tags: named, input
export interface DeleteClusterRequest {
  cluster: string;
}

// refs: 1 - tags: named, input
export interface DeleteServiceRequest {
  cluster?: string | null;
  service: string;
  force?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeleteTaskSetRequest {
  cluster: string;
  service: string;
  taskSet: string;
  force?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeregisterContainerInstanceRequest {
  cluster?: string | null;
  containerInstance: string;
  force?: boolean | null;
}

// refs: 1 - tags: named, input
export interface DeregisterTaskDefinitionRequest {
  taskDefinition: string;
}

// refs: 1 - tags: named, input
export interface DescribeCapacityProvidersRequest {
  capacityProviders?: string[] | null;
  include?: CapacityProviderField[] | null;
  maxResults?: number | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, input
export interface DescribeClustersRequest {
  clusters?: string[] | null;
  include?: ClusterField[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeContainerInstancesRequest {
  cluster?: string | null;
  containerInstances: string[];
  include?: ContainerInstanceField[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeServicesRequest {
  cluster?: string | null;
  services: string[];
  include?: ServiceField[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeTaskDefinitionRequest {
  taskDefinition: string;
  include?: TaskDefinitionField[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeTaskSetsRequest {
  cluster: string;
  service: string;
  taskSets?: string[] | null;
  include?: TaskSetField[] | null;
}

// refs: 1 - tags: named, input
export interface DescribeTasksRequest {
  cluster?: string | null;
  tasks: string[];
  include?: TaskField[] | null;
}

// refs: 1 - tags: named, input
export interface DiscoverPollEndpointRequest {
  containerInstance?: string | null;
  cluster?: string | null;
}

// refs: 1 - tags: named, input
export interface ExecuteCommandRequest {
  cluster?: string | null;
  container?: string | null;
  command: string;
  interactive: boolean;
  task: string;
}

// refs: 1 - tags: named, input
export interface ListAccountSettingsRequest {
  name?: SettingName | null;
  value?: string | null;
  principalArn?: string | null;
  effectiveSettings?: boolean | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListAttributesRequest {
  cluster?: string | null;
  targetType: TargetType;
  attributeName?: string | null;
  attributeValue?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListClustersRequest {
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListContainerInstancesRequest {
  cluster?: string | null;
  filter?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
  status?: ContainerInstanceStatus | null;
}

// refs: 1 - tags: named, input
export interface ListServicesRequest {
  cluster?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
  launchType?: LaunchType | null;
  schedulingStrategy?: SchedulingStrategy | null;
}

// refs: 1 - tags: named, input
export interface ListTagsForResourceRequest {
  resourceArn: string;
}

// refs: 1 - tags: named, input
export interface ListTaskDefinitionFamiliesRequest {
  familyPrefix?: string | null;
  status?: TaskDefinitionFamilyStatus | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTaskDefinitionsRequest {
  familyPrefix?: string | null;
  status?: TaskDefinitionStatus | null;
  sort?: SortOrder | null;
  nextToken?: string | null;
  maxResults?: number | null;
}

// refs: 1 - tags: named, input
export interface ListTasksRequest {
  cluster?: string | null;
  containerInstance?: string | null;
  family?: string | null;
  nextToken?: string | null;
  maxResults?: number | null;
  startedBy?: string | null;
  serviceName?: string | null;
  desiredStatus?: DesiredStatus | null;
  launchType?: LaunchType | null;
}

// refs: 1 - tags: named, input
export interface PutAccountSettingRequest {
  name: SettingName;
  value: string;
  principalArn?: string | null;
}

// refs: 1 - tags: named, input
export interface PutAccountSettingDefaultRequest {
  name: SettingName;
  value: string;
}

// refs: 1 - tags: named, input
export interface PutAttributesRequest {
  cluster?: string | null;
  attributes: Attribute[];
}

// refs: 1 - tags: named, input
export interface PutClusterCapacityProvidersRequest {
  cluster: string;
  capacityProviders: string[];
  defaultCapacityProviderStrategy: CapacityProviderStrategyItem[];
}

// refs: 1 - tags: named, input
export interface RegisterContainerInstanceRequest {
  cluster?: string | null;
  instanceIdentityDocument?: string | null;
  instanceIdentityDocumentSignature?: string | null;
  totalResources?: Resource[] | null;
  versionInfo?: VersionInfo | null;
  containerInstanceArn?: string | null;
  attributes?: Attribute[] | null;
  platformDevices?: PlatformDevice[] | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, input
export interface RegisterTaskDefinitionRequest {
  family: string;
  taskRoleArn?: string | null;
  executionRoleArn?: string | null;
  networkMode?: NetworkMode | null;
  containerDefinitions: ContainerDefinition[];
  volumes?: Volume[] | null;
  placementConstraints?: TaskDefinitionPlacementConstraint[] | null;
  requiresCompatibilities?: Compatibility[] | null;
  cpu?: string | null;
  memory?: string | null;
  tags?: Tag[] | null;
  pidMode?: PidMode | null;
  ipcMode?: IpcMode | null;
  proxyConfiguration?: ProxyConfiguration | null;
  inferenceAccelerators?: InferenceAccelerator[] | null;
}

// refs: 1 - tags: named, input
export interface RunTaskRequest {
  capacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
  cluster?: string | null;
  count?: number | null;
  enableECSManagedTags?: boolean | null;
  enableExecuteCommand?: boolean | null;
  group?: string | null;
  launchType?: LaunchType | null;
  networkConfiguration?: NetworkConfiguration | null;
  overrides?: TaskOverride | null;
  placementConstraints?: PlacementConstraint[] | null;
  placementStrategy?: PlacementStrategy[] | null;
  platformVersion?: string | null;
  propagateTags?: PropagateTags | null;
  referenceId?: string | null;
  startedBy?: string | null;
  tags?: Tag[] | null;
  taskDefinition: string;
}

// refs: 1 - tags: named, input
export interface StartTaskRequest {
  cluster?: string | null;
  containerInstances: string[];
  enableECSManagedTags?: boolean | null;
  enableExecuteCommand?: boolean | null;
  group?: string | null;
  networkConfiguration?: NetworkConfiguration | null;
  overrides?: TaskOverride | null;
  propagateTags?: PropagateTags | null;
  referenceId?: string | null;
  startedBy?: string | null;
  tags?: Tag[] | null;
  taskDefinition: string;
}

// refs: 1 - tags: named, input
export interface StopTaskRequest {
  cluster?: string | null;
  task: string;
  reason?: string | null;
}

// refs: 1 - tags: named, input
export interface SubmitAttachmentStateChangesRequest {
  cluster?: string | null;
  attachments: AttachmentStateChange[];
}

// refs: 1 - tags: named, input
export interface SubmitContainerStateChangeRequest {
  cluster?: string | null;
  task?: string | null;
  containerName?: string | null;
  runtimeId?: string | null;
  status?: string | null;
  exitCode?: number | null;
  reason?: string | null;
  networkBindings?: NetworkBinding[] | null;
}

// refs: 1 - tags: named, input
export interface SubmitTaskStateChangeRequest {
  cluster?: string | null;
  task?: string | null;
  status?: string | null;
  reason?: string | null;
  containers?: ContainerStateChange[] | null;
  attachments?: AttachmentStateChange[] | null;
  managedAgents?: ManagedAgentStateChange[] | null;
  pullStartedAt?: Date | number | null;
  pullStoppedAt?: Date | number | null;
  executionStoppedAt?: Date | number | null;
}

// refs: 1 - tags: named, input
export interface TagResourceRequest {
  resourceArn: string;
  tags: Tag[];
}

// refs: 1 - tags: named, input
export interface UntagResourceRequest {
  resourceArn: string;
  tagKeys: string[];
}

// refs: 1 - tags: named, input
export interface UpdateCapacityProviderRequest {
  name: string;
  autoScalingGroupProvider: AutoScalingGroupProviderUpdate;
}

// refs: 1 - tags: named, input
export interface UpdateClusterRequest {
  cluster: string;
  settings?: ClusterSetting[] | null;
  configuration?: ClusterConfiguration | null;
}

// refs: 1 - tags: named, input
export interface UpdateClusterSettingsRequest {
  cluster: string;
  settings: ClusterSetting[];
}

// refs: 1 - tags: named, input
export interface UpdateContainerAgentRequest {
  cluster?: string | null;
  containerInstance: string;
}

// refs: 1 - tags: named, input
export interface UpdateContainerInstancesStateRequest {
  cluster?: string | null;
  containerInstances: string[];
  status: ContainerInstanceStatus;
}

// refs: 1 - tags: named, input
export interface UpdateServiceRequest {
  cluster?: string | null;
  service: string;
  desiredCount?: number | null;
  taskDefinition?: string | null;
  capacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
  deploymentConfiguration?: DeploymentConfiguration | null;
  networkConfiguration?: NetworkConfiguration | null;
  placementConstraints?: PlacementConstraint[] | null;
  placementStrategy?: PlacementStrategy[] | null;
  platformVersion?: string | null;
  forceNewDeployment?: boolean | null;
  healthCheckGracePeriodSeconds?: number | null;
  enableExecuteCommand?: boolean | null;
}

// refs: 1 - tags: named, input
export interface UpdateServicePrimaryTaskSetRequest {
  cluster: string;
  service: string;
  primaryTaskSet: string;
}

// refs: 1 - tags: named, input
export interface UpdateTaskSetRequest {
  cluster: string;
  service: string;
  taskSet: string;
  scale: Scale;
}

// refs: 1 - tags: named, output
export interface CreateCapacityProviderResponse {
  capacityProvider?: CapacityProvider | null;
}

// refs: 1 - tags: named, output
export interface CreateClusterResponse {
  cluster?: Cluster | null;
}

// refs: 1 - tags: named, output
export interface CreateServiceResponse {
  service?: Service | null;
}

// refs: 1 - tags: named, output
export interface CreateTaskSetResponse {
  taskSet?: TaskSet | null;
}

// refs: 1 - tags: named, output
export interface DeleteAccountSettingResponse {
  setting?: Setting | null;
}

// refs: 1 - tags: named, output
export interface DeleteAttributesResponse {
  attributes?: Attribute[] | null;
}

// refs: 1 - tags: named, output
export interface DeleteCapacityProviderResponse {
  capacityProvider?: CapacityProvider | null;
}

// refs: 1 - tags: named, output
export interface DeleteClusterResponse {
  cluster?: Cluster | null;
}

// refs: 1 - tags: named, output
export interface DeleteServiceResponse {
  service?: Service | null;
}

// refs: 1 - tags: named, output
export interface DeleteTaskSetResponse {
  taskSet?: TaskSet | null;
}

// refs: 1 - tags: named, output
export interface DeregisterContainerInstanceResponse {
  containerInstance?: ContainerInstance | null;
}

// refs: 1 - tags: named, output
export interface DeregisterTaskDefinitionResponse {
  taskDefinition?: TaskDefinition | null;
}

// refs: 1 - tags: named, output
export interface DescribeCapacityProvidersResponse {
  capacityProviders?: CapacityProvider[] | null;
  failures?: Failure[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface DescribeClustersResponse {
  clusters?: Cluster[] | null;
  failures?: Failure[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeContainerInstancesResponse {
  containerInstances?: ContainerInstance[] | null;
  failures?: Failure[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeServicesResponse {
  services?: Service[] | null;
  failures?: Failure[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeTaskDefinitionResponse {
  taskDefinition?: TaskDefinition | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeTaskSetsResponse {
  taskSets?: TaskSet[] | null;
  failures?: Failure[] | null;
}

// refs: 1 - tags: named, output
export interface DescribeTasksResponse {
  tasks?: Task[] | null;
  failures?: Failure[] | null;
}

// refs: 1 - tags: named, output
export interface DiscoverPollEndpointResponse {
  endpoint?: string | null;
  telemetryEndpoint?: string | null;
}

// refs: 1 - tags: named, output
export interface ExecuteCommandResponse {
  clusterArn?: string | null;
  containerArn?: string | null;
  containerName?: string | null;
  interactive?: boolean | null;
  session?: Session | null;
  taskArn?: string | null;
}

// refs: 1 - tags: named, output
export interface ListAccountSettingsResponse {
  settings?: Setting[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListAttributesResponse {
  attributes?: Attribute[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListClustersResponse {
  clusterArns?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListContainerInstancesResponse {
  containerInstanceArns?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListServicesResponse {
  serviceArns?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTagsForResourceResponse {
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface ListTaskDefinitionFamiliesResponse {
  families?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTaskDefinitionsResponse {
  taskDefinitionArns?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface ListTasksResponse {
  taskArns?: string[] | null;
  nextToken?: string | null;
}

// refs: 1 - tags: named, output
export interface PutAccountSettingResponse {
  setting?: Setting | null;
}

// refs: 1 - tags: named, output
export interface PutAccountSettingDefaultResponse {
  setting?: Setting | null;
}

// refs: 1 - tags: named, output
export interface PutAttributesResponse {
  attributes?: Attribute[] | null;
}

// refs: 1 - tags: named, output
export interface PutClusterCapacityProvidersResponse {
  cluster?: Cluster | null;
}

// refs: 1 - tags: named, output
export interface RegisterContainerInstanceResponse {
  containerInstance?: ContainerInstance | null;
}

// refs: 1 - tags: named, output
export interface RegisterTaskDefinitionResponse {
  taskDefinition?: TaskDefinition | null;
  tags?: Tag[] | null;
}

// refs: 1 - tags: named, output
export interface RunTaskResponse {
  tasks?: Task[] | null;
  failures?: Failure[] | null;
}

// refs: 1 - tags: named, output
export interface StartTaskResponse {
  tasks?: Task[] | null;
  failures?: Failure[] | null;
}

// refs: 1 - tags: named, output
export interface StopTaskResponse {
  task?: Task | null;
}

// refs: 1 - tags: named, output
export interface SubmitAttachmentStateChangesResponse {
  acknowledgment?: string | null;
}

// refs: 1 - tags: named, output
export interface SubmitContainerStateChangeResponse {
  acknowledgment?: string | null;
}

// refs: 1 - tags: named, output
export interface SubmitTaskStateChangeResponse {
  acknowledgment?: string | null;
}

// refs: 1 - tags: named, output
export interface UpdateCapacityProviderResponse {
  capacityProvider?: CapacityProvider | null;
}

// refs: 1 - tags: named, output
export interface UpdateClusterResponse {
  cluster?: Cluster | null;
}

// refs: 1 - tags: named, output
export interface UpdateClusterSettingsResponse {
  cluster?: Cluster | null;
}

// refs: 1 - tags: named, output
export interface UpdateContainerAgentResponse {
  containerInstance?: ContainerInstance | null;
}

// refs: 1 - tags: named, output
export interface UpdateContainerInstancesStateResponse {
  containerInstances?: ContainerInstance[] | null;
  failures?: Failure[] | null;
}

// refs: 1 - tags: named, output
export interface UpdateServiceResponse {
  service?: Service | null;
}

// refs: 1 - tags: named, output
export interface UpdateServicePrimaryTaskSetResponse {
  taskSet?: TaskSet | null;
}

// refs: 1 - tags: named, output
export interface UpdateTaskSetResponse {
  taskSet?: TaskSet | null;
}

// refs: 5 - tags: input, named, interface, output
export interface AutoScalingGroupProvider {
  autoScalingGroupArn: string;
  managedScaling?: ManagedScaling | null;
  managedTerminationProtection?: ManagedTerminationProtection | null;
}

// refs: 6 - tags: input, named, interface, output
export interface ManagedScaling {
  status?: ManagedScalingStatus | null;
  targetCapacity?: number | null;
  minimumScalingStepSize?: number | null;
  maximumScalingStepSize?: number | null;
  instanceWarmupPeriod?: number | null;
}

// refs: 6 - tags: input, named, enum, output
export type ManagedScalingStatus =
| "ENABLED"
| "DISABLED"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type ManagedTerminationProtection =
| "ENABLED"
| "DISABLED"
| cmnP.UnexpectedEnumValue;

// refs: 44 - tags: input, named, interface, output
export interface Tag {
  key?: string | null;
  value?: string | null;
}

// refs: 9 - tags: input, named, interface, output
export interface ClusterSetting {
  name?: ClusterSettingName | null;
  value?: string | null;
}

// refs: 9 - tags: input, named, enum, output
export type ClusterSettingName =
| "containerInsights"
| cmnP.UnexpectedEnumValue;

// refs: 8 - tags: input, named, interface, output
export interface ClusterConfiguration {
  executeCommandConfiguration?: ExecuteCommandConfiguration | null;
}

// refs: 8 - tags: input, named, interface, output
export interface ExecuteCommandConfiguration {
  kmsKeyId?: string | null;
  logging?: ExecuteCommandLogging | null;
  logConfiguration?: ExecuteCommandLogConfiguration | null;
}

// refs: 8 - tags: input, named, enum, output
export type ExecuteCommandLogging =
| "NONE"
| "DEFAULT"
| "OVERRIDE"
| cmnP.UnexpectedEnumValue;

// refs: 8 - tags: input, named, interface, output
export interface ExecuteCommandLogConfiguration {
  cloudWatchLogGroupName?: string | null;
  cloudWatchEncryptionEnabled?: boolean | null;
  s3BucketName?: string | null;
  s3EncryptionEnabled?: boolean | null;
  s3KeyPrefix?: string | null;
}

// refs: 29 - tags: input, named, interface, output
export interface CapacityProviderStrategyItem {
  capacityProvider: string;
  weight?: number | null;
  base?: number | null;
}

// refs: 15 - tags: input, named, interface, output
export interface LoadBalancer {
  targetGroupArn?: string | null;
  loadBalancerName?: string | null;
  containerName?: string | null;
  containerPort?: number | null;
}

// refs: 15 - tags: input, named, interface, output
export interface ServiceRegistry {
  registryArn?: string | null;
  port?: number | null;
  containerName?: string | null;
  containerPort?: number | null;
}

// refs: 26 - tags: input, named, enum, output
export type LaunchType =
| "EC2"
| "FARGATE"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, interface, output
export interface DeploymentConfiguration {
  deploymentCircuitBreaker?: DeploymentCircuitBreaker | null;
  maximumPercent?: number | null;
  minimumHealthyPercent?: number | null;
}

// refs: 6 - tags: input, named, interface, output
export interface DeploymentCircuitBreaker {
  enable: boolean;
  rollback: boolean;
}

// refs: 7 - tags: input, named, interface, output
export interface PlacementConstraint {
  type?: PlacementConstraintType | null;
  expression?: string | null;
}

// refs: 7 - tags: input, named, enum, output
export type PlacementConstraintType =
| "distinctInstance"
| "memberOf"
| cmnP.UnexpectedEnumValue;

// refs: 7 - tags: input, named, interface, output
export interface PlacementStrategy {
  type?: PlacementStrategyType | null;
  field?: string | null;
}

// refs: 7 - tags: input, named, enum, output
export type PlacementStrategyType =
| "random"
| "spread"
| "binpack"
| cmnP.UnexpectedEnumValue;

// refs: 22 - tags: input, named, interface, output
export interface NetworkConfiguration {
  awsvpcConfiguration?: AwsVpcConfiguration | null;
}

// refs: 22 - tags: input, named, interface, output
export interface AwsVpcConfiguration {
  subnets: string[];
  securityGroups?: string[] | null;
  assignPublicIp?: AssignPublicIp | null;
}

// refs: 22 - tags: input, named, enum, output
export type AssignPublicIp =
| "ENABLED"
| "DISABLED"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: input, named, enum, output
export type SchedulingStrategy =
| "REPLICA"
| "DAEMON"
| cmnP.UnexpectedEnumValue;

// refs: 5 - tags: input, named, interface, output
export interface DeploymentController {
  type: DeploymentControllerType;
}

// refs: 5 - tags: input, named, enum, output
export type DeploymentControllerType =
| "ECS"
| "CODE_DEPLOY"
| "EXTERNAL"
| cmnP.UnexpectedEnumValue;

// refs: 7 - tags: input, named, enum, output
export type PropagateTags =
| "TASK_DEFINITION"
| "SERVICE"
| cmnP.UnexpectedEnumValue;

// refs: 11 - tags: input, named, interface, output
export interface Scale {
  value?: number | null;
  unit?: ScaleUnit | null;
}

// refs: 11 - tags: input, named, enum, output
export type ScaleUnit =
| "PERCENT"
| cmnP.UnexpectedEnumValue;

// refs: 8 - tags: input, named, enum, output
export type SettingName =
| "serviceLongArnFormat"
| "taskLongArnFormat"
| "containerInstanceLongArnFormat"
| "awsvpcTrunking"
| "containerInsights"
| cmnP.UnexpectedEnumValue;

// refs: 18 - tags: input, named, interface, output
export interface Attribute {
  name: string;
  value?: string | null;
  targetType?: TargetType | null;
  targetId?: string | null;
}

// refs: 19 - tags: input, named, enum, output
export type TargetType =
| "container-instance"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type CapacityProviderField =
| "TAGS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ClusterField =
| "ATTACHMENTS"
| "CONFIGURATIONS"
| "SETTINGS"
| "STATISTICS"
| "TAGS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ContainerInstanceField =
| "TAGS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type ServiceField =
| "TAGS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type TaskDefinitionField =
| "TAGS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type TaskSetField =
| "TAGS"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type TaskField =
| "TAGS"
| cmnP.UnexpectedEnumValue;

// refs: 2 - tags: input, named, enum
export type ContainerInstanceStatus =
| "ACTIVE"
| "DRAINING"
| "REGISTERING"
| "DEREGISTERING"
| "REGISTRATION_FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type TaskDefinitionFamilyStatus =
| "ACTIVE"
| "INACTIVE"
| "ALL"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type TaskDefinitionStatus =
| "ACTIVE"
| "INACTIVE"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type SortOrder =
| "ASC"
| "DESC"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, enum
export type DesiredStatus =
| "RUNNING"
| "PENDING"
| "STOPPED"
| cmnP.UnexpectedEnumValue;

// refs: 11 - tags: input, named, interface, output
export interface Resource {
  name?: string | null;
  type?: string | null;
  doubleValue?: number | null;
  longValue?: number | null;
  integerValue?: number | null;
  stringSetValue?: string[] | null;
}

// refs: 6 - tags: input, named, interface, output
export interface VersionInfo {
  agentVersion?: string | null;
  agentHash?: string | null;
  dockerVersion?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface PlatformDevice {
  id: string;
  type: PlatformDeviceType;
}

// refs: 1 - tags: input, named, enum
export type PlatformDeviceType =
| "GPU"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type NetworkMode =
| "bridge"
| "host"
| "awsvpc"
| "none"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface ContainerDefinition {
  name?: string | null;
  image?: string | null;
  repositoryCredentials?: RepositoryCredentials | null;
  cpu?: number | null;
  memory?: number | null;
  memoryReservation?: number | null;
  links?: string[] | null;
  portMappings?: PortMapping[] | null;
  essential?: boolean | null;
  entryPoint?: string[] | null;
  command?: string[] | null;
  environment?: KeyValuePair[] | null;
  environmentFiles?: EnvironmentFile[] | null;
  mountPoints?: MountPoint[] | null;
  volumesFrom?: VolumeFrom[] | null;
  linuxParameters?: LinuxParameters | null;
  secrets?: Secret[] | null;
  dependsOn?: ContainerDependency[] | null;
  startTimeout?: number | null;
  stopTimeout?: number | null;
  hostname?: string | null;
  user?: string | null;
  workingDirectory?: string | null;
  disableNetworking?: boolean | null;
  privileged?: boolean | null;
  readonlyRootFilesystem?: boolean | null;
  dnsServers?: string[] | null;
  dnsSearchDomains?: string[] | null;
  extraHosts?: HostEntry[] | null;
  dockerSecurityOptions?: string[] | null;
  interactive?: boolean | null;
  pseudoTerminal?: boolean | null;
  dockerLabels?: { [key: string]: string | null | undefined } | null;
  ulimits?: Ulimit[] | null;
  logConfiguration?: LogConfiguration | null;
  healthCheck?: HealthCheck | null;
  systemControls?: SystemControl[] | null;
  resourceRequirements?: ResourceRequirement[] | null;
  firelensConfiguration?: FirelensConfiguration | null;
}

// refs: 4 - tags: input, named, interface, output
export interface RepositoryCredentials {
  credentialsParameter: string;
}

// refs: 4 - tags: input, named, interface, output
export interface PortMapping {
  containerPort?: number | null;
  hostPort?: number | null;
  protocol?: TransportProtocol | null;
}

// refs: 10 - tags: input, named, enum, output
export type TransportProtocol =
| "tcp"
| "udp"
| cmnP.UnexpectedEnumValue;

// refs: 35 - tags: input, named, interface, output
export interface KeyValuePair {
  name?: string | null;
  value?: string | null;
}

// refs: 10 - tags: input, named, interface, output
export interface EnvironmentFile {
  value: string;
  type: EnvironmentFileType;
}

// refs: 10 - tags: input, named, enum, output
export type EnvironmentFileType =
| "s3"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface MountPoint {
  sourceVolume?: string | null;
  containerPath?: string | null;
  readOnly?: boolean | null;
}

// refs: 4 - tags: input, named, interface, output
export interface VolumeFrom {
  sourceContainer?: string | null;
  readOnly?: boolean | null;
}

// refs: 4 - tags: input, named, interface, output
export interface LinuxParameters {
  capabilities?: KernelCapabilities | null;
  devices?: Device[] | null;
  initProcessEnabled?: boolean | null;
  sharedMemorySize?: number | null;
  tmpfs?: Tmpfs[] | null;
  maxSwap?: number | null;
  swappiness?: number | null;
}

// refs: 4 - tags: input, named, interface, output
export interface KernelCapabilities {
  add?: string[] | null;
  drop?: string[] | null;
}

// refs: 4 - tags: input, named, interface, output
export interface Device {
  hostPath: string;
  containerPath?: string | null;
  permissions?: DeviceCgroupPermission[] | null;
}

// refs: 4 - tags: input, named, enum, output
export type DeviceCgroupPermission =
| "read"
| "write"
| "mknod"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface Tmpfs {
  containerPath: string;
  size: number;
  mountOptions?: string[] | null;
}

// refs: 8 - tags: input, named, interface, output
export interface Secret {
  name: string;
  valueFrom: string;
}

// refs: 4 - tags: input, named, interface, output
export interface ContainerDependency {
  containerName: string;
  condition: ContainerCondition;
}

// refs: 4 - tags: input, named, enum, output
export type ContainerCondition =
| "START"
| "COMPLETE"
| "SUCCESS"
| "HEALTHY"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface HostEntry {
  hostname: string;
  ipAddress: string;
}

// refs: 4 - tags: input, named, interface, output
export interface Ulimit {
  name: UlimitName;
  softLimit: number;
  hardLimit: number;
}

// refs: 4 - tags: input, named, enum, output
export type UlimitName =
| "core"
| "cpu"
| "data"
| "fsize"
| "locks"
| "memlock"
| "msgqueue"
| "nice"
| "nofile"
| "nproc"
| "rss"
| "rtprio"
| "rttime"
| "sigpending"
| "stack"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface LogConfiguration {
  logDriver: LogDriver;
  options?: { [key: string]: string | null | undefined } | null;
  secretOptions?: Secret[] | null;
}

// refs: 4 - tags: input, named, enum, output
export type LogDriver =
| "json-file"
| "syslog"
| "journald"
| "gelf"
| "fluentd"
| "awslogs"
| "splunk"
| "awsfirelens"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface HealthCheck {
  command: string[];
  interval?: number | null;
  timeout?: number | null;
  retries?: number | null;
  startPeriod?: number | null;
}

// refs: 4 - tags: input, named, interface, output
export interface SystemControl {
  namespace?: string | null;
  value?: string | null;
}

// refs: 10 - tags: input, named, interface, output
export interface ResourceRequirement {
  value: string;
  type: ResourceType;
}

// refs: 10 - tags: input, named, enum, output
export type ResourceType =
| "GPU"
| "InferenceAccelerator"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface FirelensConfiguration {
  type: FirelensConfigurationType;
  options?: { [key: string]: string | null | undefined } | null;
}

// refs: 4 - tags: input, named, enum, output
export type FirelensConfigurationType =
| "fluentd"
| "fluentbit"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface Volume {
  name?: string | null;
  host?: HostVolumeProperties | null;
  dockerVolumeConfiguration?: DockerVolumeConfiguration | null;
  efsVolumeConfiguration?: EFSVolumeConfiguration | null;
  fsxWindowsFileServerVolumeConfiguration?: FSxWindowsFileServerVolumeConfiguration | null;
}

// refs: 4 - tags: input, named, interface, output
export interface HostVolumeProperties {
  sourcePath?: string | null;
}

// refs: 4 - tags: input, named, interface, output
export interface DockerVolumeConfiguration {
  scope?: Scope | null;
  autoprovision?: boolean | null;
  driver?: string | null;
  driverOpts?: { [key: string]: string | null | undefined } | null;
  labels?: { [key: string]: string | null | undefined } | null;
}

// refs: 4 - tags: input, named, enum, output
export type Scope =
| "task"
| "shared"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface EFSVolumeConfiguration {
  fileSystemId: string;
  rootDirectory?: string | null;
  transitEncryption?: EFSTransitEncryption | null;
  transitEncryptionPort?: number | null;
  authorizationConfig?: EFSAuthorizationConfig | null;
}

// refs: 4 - tags: input, named, enum, output
export type EFSTransitEncryption =
| "ENABLED"
| "DISABLED"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface EFSAuthorizationConfig {
  accessPointId?: string | null;
  iam?: EFSAuthorizationConfigIAM | null;
}

// refs: 4 - tags: input, named, enum, output
export type EFSAuthorizationConfigIAM =
| "ENABLED"
| "DISABLED"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface FSxWindowsFileServerVolumeConfiguration {
  fileSystemId: string;
  rootDirectory: string;
  authorizationConfig: FSxWindowsFileServerAuthorizationConfig;
}

// refs: 4 - tags: input, named, interface, output
export interface FSxWindowsFileServerAuthorizationConfig {
  credentialsParameter: string;
  domain: string;
}

// refs: 4 - tags: input, named, interface, output
export interface TaskDefinitionPlacementConstraint {
  type?: TaskDefinitionPlacementConstraintType | null;
  expression?: string | null;
}

// refs: 4 - tags: input, named, enum, output
export type TaskDefinitionPlacementConstraintType =
| "memberOf"
| cmnP.UnexpectedEnumValue;

// refs: 7 - tags: input, named, enum, output
export type Compatibility =
| "EC2"
| "FARGATE"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type PidMode =
| "host"
| "task"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, enum, output
export type IpcMode =
| "host"
| "task"
| "none"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: input, named, interface, output
export interface ProxyConfiguration {
  type?: ProxyConfigurationType | null;
  containerName: string;
  properties?: KeyValuePair[] | null;
}

// refs: 4 - tags: input, named, enum, output
export type ProxyConfigurationType =
| "APPMESH"
| cmnP.UnexpectedEnumValue;

// refs: 8 - tags: input, named, interface, output
export interface InferenceAccelerator {
  deviceName: string;
  deviceType: string;
}

// refs: 6 - tags: input, named, interface, output
export interface TaskOverride {
  containerOverrides?: ContainerOverride[] | null;
  cpu?: string | null;
  inferenceAcceleratorOverrides?: InferenceAcceleratorOverride[] | null;
  executionRoleArn?: string | null;
  memory?: string | null;
  taskRoleArn?: string | null;
}

// refs: 6 - tags: input, named, interface, output
export interface ContainerOverride {
  name?: string | null;
  command?: string[] | null;
  environment?: KeyValuePair[] | null;
  environmentFiles?: EnvironmentFile[] | null;
  cpu?: number | null;
  memory?: number | null;
  memoryReservation?: number | null;
  resourceRequirements?: ResourceRequirement[] | null;
}

// refs: 6 - tags: input, named, interface, output
export interface InferenceAcceleratorOverride {
  deviceName?: string | null;
  deviceType?: string | null;
}

// refs: 2 - tags: input, named, interface
export interface AttachmentStateChange {
  attachmentArn: string;
  status: string;
}

// refs: 6 - tags: input, named, interface, output
export interface NetworkBinding {
  bindIP?: string | null;
  containerPort?: number | null;
  hostPort?: number | null;
  protocol?: TransportProtocol | null;
}

// refs: 1 - tags: input, named, interface
export interface ContainerStateChange {
  containerName?: string | null;
  imageDigest?: string | null;
  runtimeId?: string | null;
  exitCode?: number | null;
  networkBindings?: NetworkBinding[] | null;
  reason?: string | null;
  status?: string | null;
}

// refs: 1 - tags: input, named, interface
export interface ManagedAgentStateChange {
  containerName: string;
  managedAgentName: ManagedAgentName;
  status: string;
  reason?: string | null;
}

// refs: 5 - tags: input, named, enum, output
export type ManagedAgentName =
| "ExecuteCommandAgent"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: input, named, interface
export interface AutoScalingGroupProviderUpdate {
  managedScaling?: ManagedScaling | null;
  managedTerminationProtection?: ManagedTerminationProtection | null;
}

// refs: 4 - tags: output, named, interface
export interface CapacityProvider {
  capacityProviderArn?: string | null;
  name?: string | null;
  status?: CapacityProviderStatus | null;
  autoScalingGroupProvider?: AutoScalingGroupProvider | null;
  updateStatus?: CapacityProviderUpdateStatus | null;
  updateStatusReason?: string | null;
  tags?: Tag[] | null;
}

// refs: 4 - tags: output, named, enum
export type CapacityProviderStatus =
| "ACTIVE"
| "INACTIVE"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, enum
export type CapacityProviderUpdateStatus =
| "DELETE_IN_PROGRESS"
| "DELETE_COMPLETE"
| "DELETE_FAILED"
| "UPDATE_IN_PROGRESS"
| "UPDATE_COMPLETE"
| "UPDATE_FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 6 - tags: output, named, interface
export interface Cluster {
  clusterArn?: string | null;
  clusterName?: string | null;
  configuration?: ClusterConfiguration | null;
  status?: string | null;
  registeredContainerInstancesCount?: number | null;
  runningTasksCount?: number | null;
  pendingTasksCount?: number | null;
  activeServicesCount?: number | null;
  statistics?: KeyValuePair[] | null;
  tags?: Tag[] | null;
  settings?: ClusterSetting[] | null;
  capacityProviders?: string[] | null;
  defaultCapacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
  attachments?: Attachment[] | null;
  attachmentsStatus?: string | null;
}

// refs: 15 - tags: output, named, interface
export interface Attachment {
  id?: string | null;
  type?: string | null;
  status?: string | null;
  details?: KeyValuePair[] | null;
}

// refs: 4 - tags: output, named, interface
export interface Service {
  serviceArn?: string | null;
  serviceName?: string | null;
  clusterArn?: string | null;
  loadBalancers?: LoadBalancer[] | null;
  serviceRegistries?: ServiceRegistry[] | null;
  status?: string | null;
  desiredCount?: number | null;
  runningCount?: number | null;
  pendingCount?: number | null;
  launchType?: LaunchType | null;
  capacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
  platformVersion?: string | null;
  taskDefinition?: string | null;
  deploymentConfiguration?: DeploymentConfiguration | null;
  taskSets?: TaskSet[] | null;
  deployments?: Deployment[] | null;
  roleArn?: string | null;
  events?: ServiceEvent[] | null;
  createdAt?: Date | number | null;
  placementConstraints?: PlacementConstraint[] | null;
  placementStrategy?: PlacementStrategy[] | null;
  networkConfiguration?: NetworkConfiguration | null;
  healthCheckGracePeriodSeconds?: number | null;
  schedulingStrategy?: SchedulingStrategy | null;
  deploymentController?: DeploymentController | null;
  tags?: Tag[] | null;
  createdBy?: string | null;
  enableECSManagedTags?: boolean | null;
  propagateTags?: PropagateTags | null;
  enableExecuteCommand?: boolean | null;
}

// refs: 9 - tags: output, named, interface
export interface TaskSet {
  id?: string | null;
  taskSetArn?: string | null;
  serviceArn?: string | null;
  clusterArn?: string | null;
  startedBy?: string | null;
  externalId?: string | null;
  status?: string | null;
  taskDefinition?: string | null;
  computedDesiredCount?: number | null;
  pendingCount?: number | null;
  runningCount?: number | null;
  createdAt?: Date | number | null;
  updatedAt?: Date | number | null;
  launchType?: LaunchType | null;
  capacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
  platformVersion?: string | null;
  networkConfiguration?: NetworkConfiguration | null;
  loadBalancers?: LoadBalancer[] | null;
  serviceRegistries?: ServiceRegistry[] | null;
  scale?: Scale | null;
  stabilityStatus?: StabilityStatus | null;
  stabilityStatusAt?: Date | number | null;
  tags?: Tag[] | null;
}

// refs: 9 - tags: output, named, enum
export type StabilityStatus =
| "STEADY_STATE"
| "STABILIZING"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface Deployment {
  id?: string | null;
  status?: string | null;
  taskDefinition?: string | null;
  desiredCount?: number | null;
  pendingCount?: number | null;
  runningCount?: number | null;
  failedTasks?: number | null;
  createdAt?: Date | number | null;
  updatedAt?: Date | number | null;
  capacityProviderStrategy?: CapacityProviderStrategyItem[] | null;
  launchType?: LaunchType | null;
  platformVersion?: string | null;
  networkConfiguration?: NetworkConfiguration | null;
  rolloutState?: DeploymentRolloutState | null;
  rolloutStateReason?: string | null;
}

// refs: 4 - tags: output, named, enum
export type DeploymentRolloutState =
| "COMPLETED"
| "FAILED"
| "IN_PROGRESS"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface ServiceEvent {
  id?: string | null;
  createdAt?: Date | number | null;
  message?: string | null;
}

// refs: 4 - tags: output, named, interface
export interface Setting {
  name?: SettingName | null;
  value?: string | null;
  principalArn?: string | null;
}

// refs: 5 - tags: output, named, interface
export interface ContainerInstance {
  containerInstanceArn?: string | null;
  ec2InstanceId?: string | null;
  capacityProviderName?: string | null;
  version?: number | null;
  versionInfo?: VersionInfo | null;
  remainingResources?: Resource[] | null;
  registeredResources?: Resource[] | null;
  status?: string | null;
  statusReason?: string | null;
  agentConnected?: boolean | null;
  runningTasksCount?: number | null;
  pendingTasksCount?: number | null;
  agentUpdateStatus?: AgentUpdateStatus | null;
  attributes?: Attribute[] | null;
  registeredAt?: Date | number | null;
  attachments?: Attachment[] | null;
  tags?: Tag[] | null;
}

// refs: 5 - tags: output, named, enum
export type AgentUpdateStatus =
| "PENDING"
| "STAGING"
| "STAGED"
| "UPDATING"
| "UPDATED"
| "FAILED"
| cmnP.UnexpectedEnumValue;

// refs: 3 - tags: output, named, interface
export interface TaskDefinition {
  taskDefinitionArn?: string | null;
  containerDefinitions?: ContainerDefinition[] | null;
  family?: string | null;
  taskRoleArn?: string | null;
  executionRoleArn?: string | null;
  networkMode?: NetworkMode | null;
  revision?: number | null;
  volumes?: Volume[] | null;
  status?: TaskDefinitionStatus | null;
  requiresAttributes?: Attribute[] | null;
  placementConstraints?: TaskDefinitionPlacementConstraint[] | null;
  compatibilities?: Compatibility[] | null;
  requiresCompatibilities?: Compatibility[] | null;
  cpu?: string | null;
  memory?: string | null;
  inferenceAccelerators?: InferenceAccelerator[] | null;
  pidMode?: PidMode | null;
  ipcMode?: IpcMode | null;
  proxyConfiguration?: ProxyConfiguration | null;
  registeredAt?: Date | number | null;
  deregisteredAt?: Date | number | null;
  registeredBy?: string | null;
}

// refs: 9 - tags: output, named, interface
export interface Failure {
  arn?: string | null;
  reason?: string | null;
  detail?: string | null;
}

// refs: 4 - tags: output, named, interface
export interface Task {
  attachments?: Attachment[] | null;
  attributes?: Attribute[] | null;
  availabilityZone?: string | null;
  capacityProviderName?: string | null;
  clusterArn?: string | null;
  connectivity?: Connectivity | null;
  connectivityAt?: Date | number | null;
  containerInstanceArn?: string | null;
  containers?: Container[] | null;
  cpu?: string | null;
  createdAt?: Date | number | null;
  desiredStatus?: string | null;
  enableExecuteCommand?: boolean | null;
  executionStoppedAt?: Date | number | null;
  group?: string | null;
  healthStatus?: HealthStatus | null;
  inferenceAccelerators?: InferenceAccelerator[] | null;
  lastStatus?: string | null;
  launchType?: LaunchType | null;
  memory?: string | null;
  overrides?: TaskOverride | null;
  platformVersion?: string | null;
  pullStartedAt?: Date | number | null;
  pullStoppedAt?: Date | number | null;
  startedAt?: Date | number | null;
  startedBy?: string | null;
  stopCode?: TaskStopCode | null;
  stoppedAt?: Date | number | null;
  stoppedReason?: string | null;
  stoppingAt?: Date | number | null;
  tags?: Tag[] | null;
  taskArn?: string | null;
  taskDefinitionArn?: string | null;
  version?: number | null;
}

// refs: 4 - tags: output, named, enum
export type Connectivity =
| "CONNECTED"
| "DISCONNECTED"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface Container {
  containerArn?: string | null;
  taskArn?: string | null;
  name?: string | null;
  image?: string | null;
  imageDigest?: string | null;
  runtimeId?: string | null;
  lastStatus?: string | null;
  exitCode?: number | null;
  reason?: string | null;
  networkBindings?: NetworkBinding[] | null;
  networkInterfaces?: NetworkInterface[] | null;
  healthStatus?: HealthStatus | null;
  managedAgents?: ManagedAgent[] | null;
  cpu?: string | null;
  memory?: string | null;
  memoryReservation?: string | null;
  gpuIds?: string[] | null;
}

// refs: 4 - tags: output, named, interface
export interface NetworkInterface {
  attachmentId?: string | null;
  privateIpv4Address?: string | null;
  ipv6Address?: string | null;
}

// refs: 8 - tags: output, named, enum
export type HealthStatus =
| "HEALTHY"
| "UNHEALTHY"
| "UNKNOWN"
| cmnP.UnexpectedEnumValue;

// refs: 4 - tags: output, named, interface
export interface ManagedAgent {
  lastStartedAt?: Date | number | null;
  name?: ManagedAgentName | null;
  reason?: string | null;
  lastStatus?: string | null;
}

// refs: 4 - tags: output, named, enum
export type TaskStopCode =
| "TaskFailedToStart"
| "EssentialContainerExited"
| "UserInitiated"
| cmnP.UnexpectedEnumValue;

// refs: 1 - tags: output, named, interface
export interface Session {
  sessionId?: string | null;
  streamUrl?: string | null;
  tokenValue?: string | null;
}
